
Xmega_Test_AD_DA_Step_Input_A1U.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001228  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000016  00802000  00001228  000012bc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          0000000a  00802016  00802016  000012d2  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  000012d2  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001330  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000050  00000000  00000000  00001370  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00004f02  00000000  00000000  000013c0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003dbc  00000000  00000000  000062c2  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000006ad  00000000  00000000  0000a07e  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  000000b4  00000000  00000000  0000a72c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000039ad  00000000  00000000  0000a7e0  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000001fd  00000000  00000000  0000e18d  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000040  00000000  00000000  0000e38a  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 00 01 	jmp	0x200	; 0x200 <__ctors_end>
       4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
       8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
       c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      10:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      14:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      18:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      1c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      20:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      24:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      28:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      2c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      30:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      34:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      38:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      3c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      40:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      44:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      48:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      4c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      50:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      54:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      58:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      5c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      60:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      64:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      68:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      6c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      70:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      74:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      78:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      7c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      80:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      84:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      88:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      8c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      90:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      94:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      98:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      9c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      a0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      a4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      a8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      ac:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      b0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      b4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      b8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      bc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      c0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      c4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      c8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      cc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      d0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      d4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      d8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      dc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      e0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      e4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      e8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      ec:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      f0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      f4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      f8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      fc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     100:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     104:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     108:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     10c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     110:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     114:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     118:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     11c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     120:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     124:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     128:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     12c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     130:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     134:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     138:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     13c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     140:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     144:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     148:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     14c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     150:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     154:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     158:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     15c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     160:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     164:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     168:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     16c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     170:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     174:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     178:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     17c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     180:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     184:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     188:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     18c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     190:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     194:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     198:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     19c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1a0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1a4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1a8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1ac:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1b0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1b4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1b8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1bc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1c0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1c4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1c8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1cc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1d0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1d4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1d8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1dc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1e0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1e4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1e8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1ec:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1f0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1f4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1f8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 28 01 	jmp	0x250	; 0x250 <put_char>

00000200 <__ctors_end>:
     200:	11 24       	eor	r1, r1
     202:	1f be       	out	0x3f, r1	; 63
     204:	cf ef       	ldi	r28, 0xFF	; 255
     206:	cd bf       	out	0x3d, r28	; 61
     208:	df e3       	ldi	r29, 0x3F	; 63
     20a:	de bf       	out	0x3e, r29	; 62
     20c:	00 e0       	ldi	r16, 0x00	; 0
     20e:	0c bf       	out	0x3c, r16	; 60
     210:	18 be       	out	0x38, r1	; 56
     212:	19 be       	out	0x39, r1	; 57
     214:	1a be       	out	0x3a, r1	; 58
     216:	1b be       	out	0x3b, r1	; 59

00000218 <__do_copy_data>:
     218:	10 e2       	ldi	r17, 0x20	; 32
     21a:	a0 e0       	ldi	r26, 0x00	; 0
     21c:	b0 e2       	ldi	r27, 0x20	; 32
     21e:	e8 e2       	ldi	r30, 0x28	; 40
     220:	f2 e1       	ldi	r31, 0x12	; 18
     222:	00 e0       	ldi	r16, 0x00	; 0
     224:	0b bf       	out	0x3b, r16	; 59
     226:	02 c0       	rjmp	.+4      	; 0x22c <__do_copy_data+0x14>
     228:	07 90       	elpm	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	a6 31       	cpi	r26, 0x16	; 22
     22e:	b1 07       	cpc	r27, r17
     230:	d9 f7       	brne	.-10     	; 0x228 <__do_copy_data+0x10>
     232:	1b be       	out	0x3b, r1	; 59

00000234 <__do_clear_bss>:
     234:	20 e2       	ldi	r18, 0x20	; 32
     236:	a6 e1       	ldi	r26, 0x16	; 22
     238:	b0 e2       	ldi	r27, 0x20	; 32
     23a:	01 c0       	rjmp	.+2      	; 0x23e <.do_clear_bss_start>

0000023c <.do_clear_bss_loop>:
     23c:	1d 92       	st	X+, r1

0000023e <.do_clear_bss_start>:
     23e:	a0 32       	cpi	r26, 0x20	; 32
     240:	b2 07       	cpc	r27, r18
     242:	e1 f7       	brne	.-8      	; 0x23c <.do_clear_bss_loop>
     244:	0e 94 dc 01 	call	0x3b8	; 0x3b8 <main>
     248:	0c 94 12 09 	jmp	0x1224	; 0x1224 <_exit>

0000024c <__bad_interrupt>:
     24c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000250 <put_char>:

}


static int put_char(char c, FILE *stream)
{
     250:	cf 93       	push	r28
     252:	c8 2f       	mov	r28, r24
	if (c == '\n') put_char('\r',stream);	//add return to newline character for term
     254:	8a 30       	cpi	r24, 0x0A	; 10
     256:	19 f4       	brne	.+6      	; 0x25e <put_char+0xe>
     258:	8d e0       	ldi	r24, 0x0D	; 13
     25a:	0e 94 28 01 	call	0x250	; 0x250 <put_char>

	while(!(USARTD1.STATUS & USART_DREIF_bm)); //loop until Tx is ready
     25e:	80 91 b1 09 	lds	r24, 0x09B1	; 0x8009b1 <__TEXT_REGION_LENGTH__+0x7de9b1>
     262:	85 ff       	sbrs	r24, 5
     264:	fc cf       	rjmp	.-8      	; 0x25e <put_char+0xe>
	USARTD1.DATA = c;
     266:	c0 93 b0 09 	sts	0x09B0, r28	; 0x8009b0 <__TEXT_REGION_LENGTH__+0x7de9b0>
	return 0;
}
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <SP_ReadCalibrationByte>:
uint8_t SP_ReadCalibrationByte( uint8_t index )
{
	uint8_t result;

	/* Load the NVM Command register to read the calibration row. */
	NVM_CMD = NVM_CMD_READ_CALIB_ROW_gc;
     272:	aa ec       	ldi	r26, 0xCA	; 202
     274:	b1 e0       	ldi	r27, 0x01	; 1
     276:	92 e0       	ldi	r25, 0x02	; 2
     278:	9c 93       	st	X, r25
	result = pgm_read_byte(index);
     27a:	e8 2f       	mov	r30, r24
     27c:	f0 e0       	ldi	r31, 0x00	; 0
     27e:	84 91       	lpm	r24, Z

	/* Clean up NVM Command register. */
	NVM_CMD = NVM_CMD_NO_OPERATION_gc;
     280:	1c 92       	st	X, r1

	return result;
}
     282:	08 95       	ret

00000284 <DAC_CalibrationValues_Set>:
}



void DAC_CalibrationValues_Set(DAC_t * dac)
{
     284:	cf 93       	push	r28
     286:	df 93       	push	r29
     288:	ec 01       	movw	r28, r24
	if(&DACA == dac){
     28a:	c1 15       	cp	r28, r1
     28c:	83 e0       	ldi	r24, 0x03	; 3
     28e:	d8 07       	cpc	r29, r24
     290:	89 f4       	brne	.+34     	; 0x2b4 <DAC_CalibrationValues_Set+0x30>
		/* Get DACA0OFFCAL from byte address 0x30 */
		dac->CH0OFFSETCAL = SP_ReadCalibrationByte(0x30);
     292:	80 e3       	ldi	r24, 0x30	; 48
     294:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     298:	89 87       	std	Y+9, r24	; 0x09
		/* Get DACA0GAINCAL from byte address 0x31 */
		dac->CH0GAINCAL = SP_ReadCalibrationByte(0x31);
     29a:	81 e3       	ldi	r24, 0x31	; 49
     29c:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2a0:	88 87       	std	Y+8, r24	; 0x08
		/* Get DACA1OFFCAL from byte address 0x34 */
		dac->CH1OFFSETCAL = SP_ReadCalibrationByte(0x34);
     2a2:	84 e3       	ldi	r24, 0x34	; 52
     2a4:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2a8:	8b 87       	std	Y+11, r24	; 0x0b
		/* Get DACA1GAINCAL from byte address 0x35 */
		dac->CH1GAINCAL = SP_ReadCalibrationByte(0x35);
     2aa:	85 e3       	ldi	r24, 0x35	; 53
     2ac:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2b0:	8a 87       	std	Y+10, r24	; 0x0a
     2b2:	10 c0       	rjmp	.+32     	; 0x2d4 <DAC_CalibrationValues_Set+0x50>
		}else {
		/* Get DACB0OFFCAL from byte address 0x32 */
		dac->CH0OFFSETCAL = SP_ReadCalibrationByte(0x32);
     2b4:	82 e3       	ldi	r24, 0x32	; 50
     2b6:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2ba:	89 87       	std	Y+9, r24	; 0x09
		/* Get DACB0GAINCAL from byte address 0x33 */
		dac->CH0GAINCAL = SP_ReadCalibrationByte(0x33);
     2bc:	83 e3       	ldi	r24, 0x33	; 51
     2be:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2c2:	88 87       	std	Y+8, r24	; 0x08
		/* Get DACB1OFFCAL from byte address 0x36 */
		dac->CH1OFFSETCAL = SP_ReadCalibrationByte(0x36);
     2c4:	86 e3       	ldi	r24, 0x36	; 54
     2c6:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2ca:	8b 87       	std	Y+11, r24	; 0x0b
		/* Get DACB1GAINCAL from byte address 0x37 */
		dac->CH1GAINCAL = SP_ReadCalibrationByte(0x37);
     2cc:	87 e3       	ldi	r24, 0x37	; 55
     2ce:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2d2:	8a 87       	std	Y+10, r24	; 0x0a
	}
}
     2d4:	df 91       	pop	r29
     2d6:	cf 91       	pop	r28
     2d8:	08 95       	ret

000002da <ADC_CalibrationValues_Set>:


void ADC_CalibrationValues_Set(ADC_t * adc)
{
     2da:	cf 93       	push	r28
     2dc:	df 93       	push	r29
     2de:	ec 01       	movw	r28, r24
	if(&ADCA == adc){
     2e0:	c1 15       	cp	r28, r1
     2e2:	82 e0       	ldi	r24, 0x02	; 2
     2e4:	d8 07       	cpc	r29, r24
     2e6:	39 f4       	brne	.+14     	; 0x2f6 <ADC_CalibrationValues_Set+0x1c>
		/* Get ADCCAL0 from byte address 0x20 (Word address 0x10. */
		adc->CAL = SP_ReadCalibrationByte(0x20);
     2e8:	80 e2       	ldi	r24, 0x20	; 32
     2ea:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2ee:	90 e0       	ldi	r25, 0x00	; 0
     2f0:	8c 87       	std	Y+12, r24	; 0x0c
     2f2:	9d 87       	std	Y+13, r25	; 0x0d
     2f4:	06 c0       	rjmp	.+12     	; 0x302 <ADC_CalibrationValues_Set+0x28>
		}else {
		/* Get ADCCAL0 from byte address 0x24 (Word address 0x12. */
		adc->CAL = SP_ReadCalibrationByte(0x24);
     2f6:	84 e2       	ldi	r24, 0x24	; 36
     2f8:	0e 94 39 01 	call	0x272	; 0x272 <SP_ReadCalibrationByte>
     2fc:	90 e0       	ldi	r25, 0x00	; 0
     2fe:	8c 87       	std	Y+12, r24	; 0x0c
     300:	9d 87       	std	Y+13, r25	; 0x0d
	}
}
     302:	df 91       	pop	r29
     304:	cf 91       	pop	r28
     306:	08 95       	ret

00000308 <ioinit>:
}

void ioinit (void)
{

	PORTB_DIRSET = 0b00001100;  // DACB DAC0 and DACB DAC1 Set as Output
     308:	8c e0       	ldi	r24, 0x0C	; 12
     30a:	80 93 21 06 	sts	0x0621, r24	; 0x800621 <__TEXT_REGION_LENGTH__+0x7de621>
	PORTC_DIRSET = 0b00000001;  // PORT C P0 Set as Output for timing pin toggle
     30e:	81 e0       	ldi	r24, 0x01	; 1
     310:	80 93 41 06 	sts	0x0641, r24	; 0x800641 <__TEXT_REGION_LENGTH__+0x7de641>
	
	// Set 32MHz clock
	OSC.CTRL = OSC_RC32MEN_bm; 				//enable 32MHz oscillator
     314:	82 e0       	ldi	r24, 0x02	; 2
     316:	80 93 50 00 	sts	0x0050, r24	; 0x800050 <__TEXT_REGION_LENGTH__+0x7de050>
	while(!(OSC.STATUS & OSC_RC32MRDY_bm));	//wait for stability
     31a:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x7de051>
     31e:	81 ff       	sbrs	r24, 1
     320:	fc cf       	rjmp	.-8      	; 0x31a <ioinit+0x12>
	CCP = CCP_IOREG_gc; 					//secured access
     322:	88 ed       	ldi	r24, 0xD8	; 216
     324:	84 bf       	out	0x34, r24	; 52
	CLK.CTRL = 0x01; 						//choose this osc source as clk
     326:	81 e0       	ldi	r24, 0x01	; 1
     328:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x7de040>

	// AD

	// Move stored calibration values to ADC A.
	ADC_CalibrationValues_Set(&ADCA);
     32c:	80 e0       	ldi	r24, 0x00	; 0
     32e:	92 e0       	ldi	r25, 0x02	; 2
     330:	0e 94 6d 01 	call	0x2da	; 0x2da <ADC_CalibrationValues_Set>

	// Set up ADC A to have signed (true) or Unsigned (false) conversion mode and 12 bit resolution.
	ADC_ConvMode_and_Resolution_Config(&ADCA, false, ADC_RESOLUTION_12BIT_gc);
     334:	e0 e0       	ldi	r30, 0x00	; 0
     336:	f2 e0       	ldi	r31, 0x02	; 2
     338:	81 81       	ldd	r24, Z+1	; 0x01
     33a:	89 7e       	andi	r24, 0xE9	; 233
     33c:	81 83       	std	Z+1, r24	; 0x01

	// Set reference voltage on ADC A to be Internal 1 volt
	ADC_Referance_Config(&ADCA, ADC_REFSEL_INT1V_gc);
     33e:	82 81       	ldd	r24, Z+2	; 0x02
     340:	8f 78       	andi	r24, 0x8F	; 143
     342:	82 83       	std	Z+2, r24	; 0x02

	// Sample rate is CPUFREQ/256. Allow time for storing data.
	ADC_Prescaler_Config(&ADCA, ADC_PRESCALER_DIV16_gc);
     344:	84 81       	ldd	r24, Z+4	; 0x04
     346:	88 7f       	andi	r24, 0xF8	; 248
     348:	82 60       	ori	r24, 0x02	; 2
     34a:	84 83       	std	Z+4, r24	; 0x04

	// Setup channel 2  to have single ended input.
	ADC_Ch_InputMode_and_Gain_Config(&ADCA.CH0,
     34c:	a0 e2       	ldi	r26, 0x20	; 32
     34e:	b2 e0       	ldi	r27, 0x02	; 2
     350:	8c 91       	ld	r24, X
     352:	80 7e       	andi	r24, 0xE0	; 224
     354:	81 60       	ori	r24, 0x01	; 1
     356:	8c 93       	st	X, r24
	ADC_CH_INPUTMODE_SINGLEENDED_gc,
	ADC_CH_GAIN_1X_gc);

	// Set input to the channels in ADC A to be PIN 3
	ADC_Ch_InputMux_Config(&ADCA.CH0, ADC_CH_MUXPOS_PIN3_gc, ADC_CH_MUXNEG_PIN2_gc);
     358:	8a e1       	ldi	r24, 0x1A	; 26
     35a:	11 96       	adiw	r26, 0x01	; 1
     35c:	8c 93       	st	X, r24

	// Enable Enable AD Conversion in ADC A
	ADC_Enable(&ADCA);
     35e:	80 81       	ld	r24, Z
     360:	81 60       	ori	r24, 0x01	; 1
     362:	80 83       	st	Z, r24

	// DA

	// Setup DAC channel B with the DA reference set to the Internal 1 volt supply voltage and DA data left adjust false
	
		DAC_CalibrationValues_Set(&DACB);
     364:	80 e2       	ldi	r24, 0x20	; 32
     366:	93 e0       	ldi	r25, 0x03	; 3
     368:	0e 94 42 01 	call	0x284	; 0x284 <DAC_CalibrationValues_Set>
		DACB.CTRLB |= DAC_CHSEL_DUAL_gc;
     36c:	e0 e2       	ldi	r30, 0x20	; 32
     36e:	f3 e0       	ldi	r31, 0x03	; 3
     370:	81 81       	ldd	r24, Z+1	; 0x01
     372:	80 64       	ori	r24, 0x40	; 64
     374:	81 83       	std	Z+1, r24	; 0x01
//		DACB.CTRLC |= DAC_REFSEL_INT1V_gc;	// 1 volt internal reference. 
		DACB.CTRLC |= DAC_REFSEL_AVCC_gc;	// 3.3 volt internal reference.		DACB.CH0DATAH = 0x00;
     376:	82 81       	ldd	r24, Z+2	; 0x02
     378:	88 60       	ori	r24, 0x08	; 8
     37a:	82 83       	std	Z+2, r24	; 0x02
		DACB.CH1DATAH = 0x00;
     37c:	13 8e       	std	Z+27, r1	; 0x1b
		DACB.CTRLA |= DAC_ENABLE_bm | DAC_CH0EN_bm | DAC_CH1EN_bm;
     37e:	80 81       	ld	r24, Z
     380:	8d 60       	ori	r24, 0x0D	; 13
     382:	80 83       	st	Z, r24
     384:	08 95       	ret

00000386 <usart_init>:

void usart_init(void)
{

	//Set TxD as output RxD as input
	PORTD.DIRSET = (1<<7);
     386:	e0 e6       	ldi	r30, 0x60	; 96
     388:	f6 e0       	ldi	r31, 0x06	; 6
     38a:	80 e8       	ldi	r24, 0x80	; 128
     38c:	81 83       	std	Z+1, r24	; 0x01
	PORTD.DIRCLR = (1<<6);
     38e:	80 e4       	ldi	r24, 0x40	; 64
     390:	82 83       	std	Z+2, r24	; 0x02

	//Set mode, baud rate and frame format
	USARTD1.CTRLC |= USART_CMODE_ASYNCHRONOUS_gc | USART_CHSIZE_8BIT_gc;
     392:	e0 eb       	ldi	r30, 0xB0	; 176
     394:	f9 e0       	ldi	r31, 0x09	; 9
     396:	85 81       	ldd	r24, Z+5	; 0x05
     398:	83 60       	ori	r24, 0x03	; 3
     39a:	85 83       	std	Z+5, r24	; 0x05
	USARTD1.BAUDCTRLA = (uint8_t)BSEL;
     39c:	8b e4       	ldi	r24, 0x4B	; 75
     39e:	86 83       	std	Z+6, r24	; 0x06
	USARTD1.BAUDCTRLB = (BSCALE<<USART_BSCALE0_bp) | (BSEL>>8);
     3a0:	80 ea       	ldi	r24, 0xA0	; 160
     3a2:	87 83       	std	Z+7, r24	; 0x07

	//enable Tx and Rx
	USARTD1.CTRLB |= USART_TXEN_bm;
     3a4:	84 81       	ldd	r24, Z+4	; 0x04
     3a6:	88 60       	ori	r24, 0x08	; 8
     3a8:	84 83       	std	Z+4, r24	; 0x04

	// setup printf to use serial port
	fdevopen(&put_char,NULL);
     3aa:	60 e0       	ldi	r22, 0x00	; 0
     3ac:	70 e0       	ldi	r23, 0x00	; 0
     3ae:	88 e2       	ldi	r24, 0x28	; 40
     3b0:	91 e0       	ldi	r25, 0x01	; 1
     3b2:	0e 94 bb 04 	call	0x976	; 0x976 <fdevopen>
     3b6:	08 95       	ret

000003b8 <main>:
	
	//float InputTime, DeltaInputTime, SinInput, del_theta, theta, pi, DAC_output, SinAmplitude, StepAmplitude;
	//float InputData[100];
	//int ii, NumInputPoints;
	
	ioinit();       //Setup IO pins and defaults
     3b8:	0e 94 84 01 	call	0x308	; 0x308 <ioinit>
	usart_init();  // Initialize the serial port
     3bc:	0e 94 c3 01 	call	0x386	; 0x386 <usart_init>
		
	// Note if you have print statements active this will slow the control loop dramatically
		
	// Sawtooth and Step Input are in Control Voltage Units (+- 10 volts)
		
    Sawtooth           = -1.0;			// Initial value
     3c0:	0f 2e       	mov	r0, r31
     3c2:	c1 2c       	mov	r12, r1
     3c4:	d1 2c       	mov	r13, r1
     3c6:	f0 e8       	ldi	r31, 0x80	; 128
     3c8:	ef 2e       	mov	r14, r31
     3ca:	ff eb       	ldi	r31, 0xBF	; 191
     3cc:	ff 2e       	mov	r15, r31
     3ce:	f0 2d       	mov	r31, r0

	
	while(1)
	{
		// Digitally generated Input wave form
		Sawtooth += Input_Increment;						// Input_Increment
     3d0:	27 e1       	ldi	r18, 0x17	; 23
     3d2:	37 eb       	ldi	r19, 0xB7	; 183
     3d4:	41 ed       	ldi	r20, 0xD1	; 209
     3d6:	58 e3       	ldi	r21, 0x38	; 56
     3d8:	c7 01       	movw	r24, r14
     3da:	b6 01       	movw	r22, r12
     3dc:	0e 94 6a 02 	call	0x4d4	; 0x4d4 <__addsf3>
     3e0:	6b 01       	movw	r12, r22
     3e2:	7c 01       	movw	r14, r24
		if(Sawtooth >= 1.0) Sawtooth = -1.0;                // Sawtooth Input Value (-1 to 1)
     3e4:	20 e0       	ldi	r18, 0x00	; 0
     3e6:	30 e0       	ldi	r19, 0x00	; 0
     3e8:	40 e8       	ldi	r20, 0x80	; 128
     3ea:	5f e3       	ldi	r21, 0x3F	; 63
     3ec:	0e 94 49 04 	call	0x892	; 0x892 <__gesf2>
     3f0:	88 23       	and	r24, r24
     3f2:	44 f0       	brlt	.+16     	; 0x404 <__LOCK_REGION_LENGTH__+0x4>
     3f4:	0f 2e       	mov	r0, r31
     3f6:	c1 2c       	mov	r12, r1
     3f8:	d1 2c       	mov	r13, r1
     3fa:	f0 e8       	ldi	r31, 0x80	; 128
     3fc:	ef 2e       	mov	r14, r31
     3fe:	ff eb       	ldi	r31, 0xBF	; 191
     400:	ff 2e       	mov	r15, r31
     402:	f0 2d       	mov	r31, r0
		if(Sawtooth <= 0.0) StepInput = 0.0;                  // Step Input Value     (0 to 1)             
     404:	20 e0       	ldi	r18, 0x00	; 0
     406:	30 e0       	ldi	r19, 0x00	; 0
     408:	a9 01       	movw	r20, r18
     40a:	c7 01       	movw	r24, r14
     40c:	b6 01       	movw	r22, r12
     40e:	0e 94 d6 02 	call	0x5ac	; 0x5ac <__cmpsf2>
     412:	18 16       	cp	r1, r24
     414:	1c f0       	brlt	.+6      	; 0x41c <__LOCK_REGION_LENGTH__+0x1c>
     416:	81 2c       	mov	r8, r1
     418:	91 2c       	mov	r9, r1
     41a:	54 01       	movw	r10, r8
		if(Sawtooth > 0.0)  StepInput = 1.0;                  // Step Input Value		(0 to 1)
     41c:	20 e0       	ldi	r18, 0x00	; 0
     41e:	30 e0       	ldi	r19, 0x00	; 0
     420:	a9 01       	movw	r20, r18
     422:	c7 01       	movw	r24, r14
     424:	b6 01       	movw	r22, r12
     426:	0e 94 49 04 	call	0x892	; 0x892 <__gesf2>
     42a:	18 16       	cp	r1, r24
     42c:	44 f4       	brge	.+16     	; 0x43e <__LOCK_REGION_LENGTH__+0x3e>
     42e:	0f 2e       	mov	r0, r31
     430:	81 2c       	mov	r8, r1
     432:	91 2c       	mov	r9, r1
     434:	f0 e8       	ldi	r31, 0x80	; 128
     436:	af 2e       	mov	r10, r31
     438:	ff e3       	ldi	r31, 0x3F	; 63
     43a:	bf 2e       	mov	r11, r31
     43c:	f0 2d       	mov	r31, r0
		
//		Vel_Set_v = Sawtooth*Sawtooth_Amplitude;             // Set Velocity Set Point to either Sawtooth or Step Input Value
		Vel_Set_v = StepInput*Step_Amplitude;                // Set Velocity Set Point to either Sawtooth or Step Input Value
     43e:	20 e0       	ldi	r18, 0x00	; 0
     440:	30 e0       	ldi	r19, 0x00	; 0
     442:	40 ea       	ldi	r20, 0xA0	; 160
     444:	50 e4       	ldi	r21, 0x40	; 64
     446:	c5 01       	movw	r24, r10
     448:	b4 01       	movw	r22, r8
     44a:	0e 94 4e 04 	call	0x89c	; 0x89c <__mulsf3>
     44e:	2b 01       	movw	r4, r22
     450:	3c 01       	movw	r6, r24
		                                                     // Note the Velocity Set Point is in Control Voltage Units (+- 10 volts)

		//	AD
		ADCA.CTRLA        = ADCA.CTRLA | ADC_CH0START_bm;       // Start Conversion
     452:	e0 e0       	ldi	r30, 0x00	; 0
     454:	f2 e0       	ldi	r31, 0x02	; 2
     456:	80 81       	ld	r24, Z
     458:	84 60       	ori	r24, 0x04	; 4
     45a:	80 83       	st	Z, r24
		while(((ADCA.CH0.INTFLAGS & ADC_CH_CHIF_bm) == 0x00));   // Is the conversion is complete ?
     45c:	80 91 23 02 	lds	r24, 0x0223	; 0x800223 <__TEXT_REGION_LENGTH__+0x7de223>
     460:	80 ff       	sbrs	r24, 0
     462:	fc cf       	rjmp	.-8      	; 0x45c <__LOCK_REGION_LENGTH__+0x5c>
		
		ADCA.CH0.INTFLAGS = ADC_CH_CHIF_bm;					   	// Clear interrupt flag by writing a one
     464:	e0 e0       	ldi	r30, 0x00	; 0
     466:	f2 e0       	ldi	r31, 0x02	; 2
     468:	81 e0       	ldi	r24, 0x01	; 1
     46a:	83 a3       	std	Z+35, r24	; 0x23
		AD_value = ADCA.CH0.RES;								// Read AD Value
     46c:	c4 a1       	ldd	r28, Z+36	; 0x24
     46e:	d5 a1       	ldd	r29, Z+37	; 0x25
		
		//	DA
		while ( (DACB.STATUS & DAC_CH0DRE_bm) == false );  // Wait for the DA register to be empty
     470:	80 91 25 03 	lds	r24, 0x0325	; 0x800325 <__TEXT_REGION_LENGTH__+0x7de325>
     474:	80 ff       	sbrs	r24, 0
     476:	fc cf       	rjmp	.-8      	; 0x470 <__LOCK_REGION_LENGTH__+0x70>
		DACB.CH0DATA = AD_value;                           // write the DAC Value
     478:	00 e2       	ldi	r16, 0x20	; 32
     47a:	13 e0       	ldi	r17, 0x03	; 3
     47c:	f8 01       	movw	r30, r16
     47e:	c0 8f       	std	Z+24, r28	; 0x18
     480:	d1 8f       	std	Z+25, r29	; 0x19

		DAC_output = floor(Vel_Set_v/5.0*4095.0);  	// Convert control voltage to a digital number for output
     482:	20 e0       	ldi	r18, 0x00	; 0
     484:	30 e0       	ldi	r19, 0x00	; 0
     486:	40 ea       	ldi	r20, 0xA0	; 160
     488:	50 e4       	ldi	r21, 0x40	; 64
     48a:	c3 01       	movw	r24, r6
     48c:	b2 01       	movw	r22, r4
     48e:	0e 94 db 02 	call	0x5b6	; 0x5b6 <__divsf3>
     492:	20 e0       	ldi	r18, 0x00	; 0
     494:	30 ef       	ldi	r19, 0xF0	; 240
     496:	4f e7       	ldi	r20, 0x7F	; 127
     498:	55 e4       	ldi	r21, 0x45	; 69
     49a:	0e 94 4e 04 	call	0x89c	; 0x89c <__mulsf3>
     49e:	0e 94 7c 03 	call	0x6f8	; 0x6f8 <floor>
													// Note the output is +- 10 Volts  which corresponds to 0 to 4095
		DACB.CH1DATA = DAC_output;                     // Write the DAC Value
     4a2:	0e 94 4d 03 	call	0x69a	; 0x69a <__fixunssfsi>
     4a6:	f8 01       	movw	r30, r16
     4a8:	62 8f       	std	Z+26, r22	; 0x1a
     4aa:	73 8f       	std	Z+27, r23	; 0x1b

		PORTC_OUT ^= (1 << 0);								// Toggle P0 on port C to check timing
     4ac:	e4 e4       	ldi	r30, 0x44	; 68
     4ae:	f6 e0       	ldi	r31, 0x06	; 6
     4b0:	90 81       	ld	r25, Z
     4b2:	81 e0       	ldi	r24, 0x01	; 1
     4b4:	89 27       	eor	r24, r25
     4b6:	80 83       	st	Z, r24
															// Note the frequency of the displayed square wave 
															// is one half of the actual cycle frequency
															// because the cycle frequency is the time the signal
															// is on or off not the entire cycle
		
		printf("AD_value = %d\n",AD_value);
     4b8:	df 93       	push	r29
     4ba:	cf 93       	push	r28
     4bc:	86 e0       	ldi	r24, 0x06	; 6
     4be:	90 e2       	ldi	r25, 0x20	; 32
     4c0:	9f 93       	push	r25
     4c2:	8f 93       	push	r24
     4c4:	0e 94 06 05 	call	0xa0c	; 0xa0c <printf>
		
	}
     4c8:	0f 90       	pop	r0
     4ca:	0f 90       	pop	r0
     4cc:	0f 90       	pop	r0
     4ce:	0f 90       	pop	r0
     4d0:	7f cf       	rjmp	.-258    	; 0x3d0 <main+0x18>

000004d2 <__subsf3>:
     4d2:	50 58       	subi	r21, 0x80	; 128

000004d4 <__addsf3>:
     4d4:	bb 27       	eor	r27, r27
     4d6:	aa 27       	eor	r26, r26
     4d8:	0e 94 81 02 	call	0x502	; 0x502 <__addsf3x>
     4dc:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_round>
     4e0:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fp_pscA>
     4e4:	38 f0       	brcs	.+14     	; 0x4f4 <__addsf3+0x20>
     4e6:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__fp_pscB>
     4ea:	20 f0       	brcs	.+8      	; 0x4f4 <__addsf3+0x20>
     4ec:	39 f4       	brne	.+14     	; 0x4fc <__addsf3+0x28>
     4ee:	9f 3f       	cpi	r25, 0xFF	; 255
     4f0:	19 f4       	brne	.+6      	; 0x4f8 <__addsf3+0x24>
     4f2:	26 f4       	brtc	.+8      	; 0x4fc <__addsf3+0x28>
     4f4:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_nan>
     4f8:	0e f4       	brtc	.+2      	; 0x4fc <__addsf3+0x28>
     4fa:	e0 95       	com	r30
     4fc:	e7 fb       	bst	r30, 7
     4fe:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__fp_inf>

00000502 <__addsf3x>:
     502:	e9 2f       	mov	r30, r25
     504:	0e 94 08 04 	call	0x810	; 0x810 <__fp_split3>
     508:	58 f3       	brcs	.-42     	; 0x4e0 <__addsf3+0xc>
     50a:	ba 17       	cp	r27, r26
     50c:	62 07       	cpc	r22, r18
     50e:	73 07       	cpc	r23, r19
     510:	84 07       	cpc	r24, r20
     512:	95 07       	cpc	r25, r21
     514:	20 f0       	brcs	.+8      	; 0x51e <__addsf3x+0x1c>
     516:	79 f4       	brne	.+30     	; 0x536 <__addsf3x+0x34>
     518:	a6 f5       	brtc	.+104    	; 0x582 <__addsf3x+0x80>
     51a:	0c 94 42 04 	jmp	0x884	; 0x884 <__fp_zero>
     51e:	0e f4       	brtc	.+2      	; 0x522 <__addsf3x+0x20>
     520:	e0 95       	com	r30
     522:	0b 2e       	mov	r0, r27
     524:	ba 2f       	mov	r27, r26
     526:	a0 2d       	mov	r26, r0
     528:	0b 01       	movw	r0, r22
     52a:	b9 01       	movw	r22, r18
     52c:	90 01       	movw	r18, r0
     52e:	0c 01       	movw	r0, r24
     530:	ca 01       	movw	r24, r20
     532:	a0 01       	movw	r20, r0
     534:	11 24       	eor	r1, r1
     536:	ff 27       	eor	r31, r31
     538:	59 1b       	sub	r21, r25
     53a:	99 f0       	breq	.+38     	; 0x562 <__addsf3x+0x60>
     53c:	59 3f       	cpi	r21, 0xF9	; 249
     53e:	50 f4       	brcc	.+20     	; 0x554 <__addsf3x+0x52>
     540:	50 3e       	cpi	r21, 0xE0	; 224
     542:	68 f1       	brcs	.+90     	; 0x59e <__addsf3x+0x9c>
     544:	1a 16       	cp	r1, r26
     546:	f0 40       	sbci	r31, 0x00	; 0
     548:	a2 2f       	mov	r26, r18
     54a:	23 2f       	mov	r18, r19
     54c:	34 2f       	mov	r19, r20
     54e:	44 27       	eor	r20, r20
     550:	58 5f       	subi	r21, 0xF8	; 248
     552:	f3 cf       	rjmp	.-26     	; 0x53a <__addsf3x+0x38>
     554:	46 95       	lsr	r20
     556:	37 95       	ror	r19
     558:	27 95       	ror	r18
     55a:	a7 95       	ror	r26
     55c:	f0 40       	sbci	r31, 0x00	; 0
     55e:	53 95       	inc	r21
     560:	c9 f7       	brne	.-14     	; 0x554 <__addsf3x+0x52>
     562:	7e f4       	brtc	.+30     	; 0x582 <__addsf3x+0x80>
     564:	1f 16       	cp	r1, r31
     566:	ba 0b       	sbc	r27, r26
     568:	62 0b       	sbc	r22, r18
     56a:	73 0b       	sbc	r23, r19
     56c:	84 0b       	sbc	r24, r20
     56e:	ba f0       	brmi	.+46     	; 0x59e <__addsf3x+0x9c>
     570:	91 50       	subi	r25, 0x01	; 1
     572:	a1 f0       	breq	.+40     	; 0x59c <__addsf3x+0x9a>
     574:	ff 0f       	add	r31, r31
     576:	bb 1f       	adc	r27, r27
     578:	66 1f       	adc	r22, r22
     57a:	77 1f       	adc	r23, r23
     57c:	88 1f       	adc	r24, r24
     57e:	c2 f7       	brpl	.-16     	; 0x570 <__addsf3x+0x6e>
     580:	0e c0       	rjmp	.+28     	; 0x59e <__addsf3x+0x9c>
     582:	ba 0f       	add	r27, r26
     584:	62 1f       	adc	r22, r18
     586:	73 1f       	adc	r23, r19
     588:	84 1f       	adc	r24, r20
     58a:	48 f4       	brcc	.+18     	; 0x59e <__addsf3x+0x9c>
     58c:	87 95       	ror	r24
     58e:	77 95       	ror	r23
     590:	67 95       	ror	r22
     592:	b7 95       	ror	r27
     594:	f7 95       	ror	r31
     596:	9e 3f       	cpi	r25, 0xFE	; 254
     598:	08 f0       	brcs	.+2      	; 0x59c <__addsf3x+0x9a>
     59a:	b0 cf       	rjmp	.-160    	; 0x4fc <__addsf3+0x28>
     59c:	93 95       	inc	r25
     59e:	88 0f       	add	r24, r24
     5a0:	08 f0       	brcs	.+2      	; 0x5a4 <__addsf3x+0xa2>
     5a2:	99 27       	eor	r25, r25
     5a4:	ee 0f       	add	r30, r30
     5a6:	97 95       	ror	r25
     5a8:	87 95       	ror	r24
     5aa:	08 95       	ret

000005ac <__cmpsf2>:
     5ac:	0e 94 93 03 	call	0x726	; 0x726 <__fp_cmp>
     5b0:	08 f4       	brcc	.+2      	; 0x5b4 <__cmpsf2+0x8>
     5b2:	81 e0       	ldi	r24, 0x01	; 1
     5b4:	08 95       	ret

000005b6 <__divsf3>:
     5b6:	0e 94 ef 02 	call	0x5de	; 0x5de <__divsf3x>
     5ba:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_round>
     5be:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__fp_pscB>
     5c2:	58 f0       	brcs	.+22     	; 0x5da <__divsf3+0x24>
     5c4:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fp_pscA>
     5c8:	40 f0       	brcs	.+16     	; 0x5da <__divsf3+0x24>
     5ca:	29 f4       	brne	.+10     	; 0x5d6 <__divsf3+0x20>
     5cc:	5f 3f       	cpi	r21, 0xFF	; 255
     5ce:	29 f0       	breq	.+10     	; 0x5da <__divsf3+0x24>
     5d0:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__fp_inf>
     5d4:	51 11       	cpse	r21, r1
     5d6:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_szero>
     5da:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_nan>

000005de <__divsf3x>:
     5de:	0e 94 08 04 	call	0x810	; 0x810 <__fp_split3>
     5e2:	68 f3       	brcs	.-38     	; 0x5be <__divsf3+0x8>

000005e4 <__divsf3_pse>:
     5e4:	99 23       	and	r25, r25
     5e6:	b1 f3       	breq	.-20     	; 0x5d4 <__divsf3+0x1e>
     5e8:	55 23       	and	r21, r21
     5ea:	91 f3       	breq	.-28     	; 0x5d0 <__divsf3+0x1a>
     5ec:	95 1b       	sub	r25, r21
     5ee:	55 0b       	sbc	r21, r21
     5f0:	bb 27       	eor	r27, r27
     5f2:	aa 27       	eor	r26, r26
     5f4:	62 17       	cp	r22, r18
     5f6:	73 07       	cpc	r23, r19
     5f8:	84 07       	cpc	r24, r20
     5fa:	38 f0       	brcs	.+14     	; 0x60a <__divsf3_pse+0x26>
     5fc:	9f 5f       	subi	r25, 0xFF	; 255
     5fe:	5f 4f       	sbci	r21, 0xFF	; 255
     600:	22 0f       	add	r18, r18
     602:	33 1f       	adc	r19, r19
     604:	44 1f       	adc	r20, r20
     606:	aa 1f       	adc	r26, r26
     608:	a9 f3       	breq	.-22     	; 0x5f4 <__divsf3_pse+0x10>
     60a:	35 d0       	rcall	.+106    	; 0x676 <__divsf3_pse+0x92>
     60c:	0e 2e       	mov	r0, r30
     60e:	3a f0       	brmi	.+14     	; 0x61e <__divsf3_pse+0x3a>
     610:	e0 e8       	ldi	r30, 0x80	; 128
     612:	32 d0       	rcall	.+100    	; 0x678 <__divsf3_pse+0x94>
     614:	91 50       	subi	r25, 0x01	; 1
     616:	50 40       	sbci	r21, 0x00	; 0
     618:	e6 95       	lsr	r30
     61a:	00 1c       	adc	r0, r0
     61c:	ca f7       	brpl	.-14     	; 0x610 <__divsf3_pse+0x2c>
     61e:	2b d0       	rcall	.+86     	; 0x676 <__divsf3_pse+0x92>
     620:	fe 2f       	mov	r31, r30
     622:	29 d0       	rcall	.+82     	; 0x676 <__divsf3_pse+0x92>
     624:	66 0f       	add	r22, r22
     626:	77 1f       	adc	r23, r23
     628:	88 1f       	adc	r24, r24
     62a:	bb 1f       	adc	r27, r27
     62c:	26 17       	cp	r18, r22
     62e:	37 07       	cpc	r19, r23
     630:	48 07       	cpc	r20, r24
     632:	ab 07       	cpc	r26, r27
     634:	b0 e8       	ldi	r27, 0x80	; 128
     636:	09 f0       	breq	.+2      	; 0x63a <__divsf3_pse+0x56>
     638:	bb 0b       	sbc	r27, r27
     63a:	80 2d       	mov	r24, r0
     63c:	bf 01       	movw	r22, r30
     63e:	ff 27       	eor	r31, r31
     640:	93 58       	subi	r25, 0x83	; 131
     642:	5f 4f       	sbci	r21, 0xFF	; 255
     644:	3a f0       	brmi	.+14     	; 0x654 <__divsf3_pse+0x70>
     646:	9e 3f       	cpi	r25, 0xFE	; 254
     648:	51 05       	cpc	r21, r1
     64a:	78 f0       	brcs	.+30     	; 0x66a <__divsf3_pse+0x86>
     64c:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__fp_inf>
     650:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_szero>
     654:	5f 3f       	cpi	r21, 0xFF	; 255
     656:	e4 f3       	brlt	.-8      	; 0x650 <__divsf3_pse+0x6c>
     658:	98 3e       	cpi	r25, 0xE8	; 232
     65a:	d4 f3       	brlt	.-12     	; 0x650 <__divsf3_pse+0x6c>
     65c:	86 95       	lsr	r24
     65e:	77 95       	ror	r23
     660:	67 95       	ror	r22
     662:	b7 95       	ror	r27
     664:	f7 95       	ror	r31
     666:	9f 5f       	subi	r25, 0xFF	; 255
     668:	c9 f7       	brne	.-14     	; 0x65c <__divsf3_pse+0x78>
     66a:	88 0f       	add	r24, r24
     66c:	91 1d       	adc	r25, r1
     66e:	96 95       	lsr	r25
     670:	87 95       	ror	r24
     672:	97 f9       	bld	r25, 7
     674:	08 95       	ret
     676:	e1 e0       	ldi	r30, 0x01	; 1
     678:	66 0f       	add	r22, r22
     67a:	77 1f       	adc	r23, r23
     67c:	88 1f       	adc	r24, r24
     67e:	bb 1f       	adc	r27, r27
     680:	62 17       	cp	r22, r18
     682:	73 07       	cpc	r23, r19
     684:	84 07       	cpc	r24, r20
     686:	ba 07       	cpc	r27, r26
     688:	20 f0       	brcs	.+8      	; 0x692 <__divsf3_pse+0xae>
     68a:	62 1b       	sub	r22, r18
     68c:	73 0b       	sbc	r23, r19
     68e:	84 0b       	sbc	r24, r20
     690:	ba 0b       	sbc	r27, r26
     692:	ee 1f       	adc	r30, r30
     694:	88 f7       	brcc	.-30     	; 0x678 <__divsf3_pse+0x94>
     696:	e0 95       	com	r30
     698:	08 95       	ret

0000069a <__fixunssfsi>:
     69a:	0e 94 10 04 	call	0x820	; 0x820 <__fp_splitA>
     69e:	88 f0       	brcs	.+34     	; 0x6c2 <__fixunssfsi+0x28>
     6a0:	9f 57       	subi	r25, 0x7F	; 127
     6a2:	98 f0       	brcs	.+38     	; 0x6ca <__fixunssfsi+0x30>
     6a4:	b9 2f       	mov	r27, r25
     6a6:	99 27       	eor	r25, r25
     6a8:	b7 51       	subi	r27, 0x17	; 23
     6aa:	b0 f0       	brcs	.+44     	; 0x6d8 <__fixunssfsi+0x3e>
     6ac:	e1 f0       	breq	.+56     	; 0x6e6 <__fixunssfsi+0x4c>
     6ae:	66 0f       	add	r22, r22
     6b0:	77 1f       	adc	r23, r23
     6b2:	88 1f       	adc	r24, r24
     6b4:	99 1f       	adc	r25, r25
     6b6:	1a f0       	brmi	.+6      	; 0x6be <__fixunssfsi+0x24>
     6b8:	ba 95       	dec	r27
     6ba:	c9 f7       	brne	.-14     	; 0x6ae <__fixunssfsi+0x14>
     6bc:	14 c0       	rjmp	.+40     	; 0x6e6 <__fixunssfsi+0x4c>
     6be:	b1 30       	cpi	r27, 0x01	; 1
     6c0:	91 f0       	breq	.+36     	; 0x6e6 <__fixunssfsi+0x4c>
     6c2:	0e 94 42 04 	call	0x884	; 0x884 <__fp_zero>
     6c6:	b1 e0       	ldi	r27, 0x01	; 1
     6c8:	08 95       	ret
     6ca:	0c 94 42 04 	jmp	0x884	; 0x884 <__fp_zero>
     6ce:	67 2f       	mov	r22, r23
     6d0:	78 2f       	mov	r23, r24
     6d2:	88 27       	eor	r24, r24
     6d4:	b8 5f       	subi	r27, 0xF8	; 248
     6d6:	39 f0       	breq	.+14     	; 0x6e6 <__fixunssfsi+0x4c>
     6d8:	b9 3f       	cpi	r27, 0xF9	; 249
     6da:	cc f3       	brlt	.-14     	; 0x6ce <__fixunssfsi+0x34>
     6dc:	86 95       	lsr	r24
     6de:	77 95       	ror	r23
     6e0:	67 95       	ror	r22
     6e2:	b3 95       	inc	r27
     6e4:	d9 f7       	brne	.-10     	; 0x6dc <__fixunssfsi+0x42>
     6e6:	3e f4       	brtc	.+14     	; 0x6f6 <__fixunssfsi+0x5c>
     6e8:	90 95       	com	r25
     6ea:	80 95       	com	r24
     6ec:	70 95       	com	r23
     6ee:	61 95       	neg	r22
     6f0:	7f 4f       	sbci	r23, 0xFF	; 255
     6f2:	8f 4f       	sbci	r24, 0xFF	; 255
     6f4:	9f 4f       	sbci	r25, 0xFF	; 255
     6f6:	08 95       	ret

000006f8 <floor>:
     6f8:	0e 94 2a 04 	call	0x854	; 0x854 <__fp_trunc>
     6fc:	90 f0       	brcs	.+36     	; 0x722 <floor+0x2a>
     6fe:	9f 37       	cpi	r25, 0x7F	; 127
     700:	48 f4       	brcc	.+18     	; 0x714 <floor+0x1c>
     702:	91 11       	cpse	r25, r1
     704:	16 f0       	brts	.+4      	; 0x70a <floor+0x12>
     706:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_szero>
     70a:	60 e0       	ldi	r22, 0x00	; 0
     70c:	70 e0       	ldi	r23, 0x00	; 0
     70e:	80 e8       	ldi	r24, 0x80	; 128
     710:	9f eb       	ldi	r25, 0xBF	; 191
     712:	08 95       	ret
     714:	26 f4       	brtc	.+8      	; 0x71e <floor+0x26>
     716:	1b 16       	cp	r1, r27
     718:	61 1d       	adc	r22, r1
     71a:	71 1d       	adc	r23, r1
     71c:	81 1d       	adc	r24, r1
     71e:	0c 94 bd 03 	jmp	0x77a	; 0x77a <__fp_mintl>
     722:	0c 94 d8 03 	jmp	0x7b0	; 0x7b0 <__fp_mpack>

00000726 <__fp_cmp>:
     726:	99 0f       	add	r25, r25
     728:	00 08       	sbc	r0, r0
     72a:	55 0f       	add	r21, r21
     72c:	aa 0b       	sbc	r26, r26
     72e:	e0 e8       	ldi	r30, 0x80	; 128
     730:	fe ef       	ldi	r31, 0xFE	; 254
     732:	16 16       	cp	r1, r22
     734:	17 06       	cpc	r1, r23
     736:	e8 07       	cpc	r30, r24
     738:	f9 07       	cpc	r31, r25
     73a:	c0 f0       	brcs	.+48     	; 0x76c <__fp_cmp+0x46>
     73c:	12 16       	cp	r1, r18
     73e:	13 06       	cpc	r1, r19
     740:	e4 07       	cpc	r30, r20
     742:	f5 07       	cpc	r31, r21
     744:	98 f0       	brcs	.+38     	; 0x76c <__fp_cmp+0x46>
     746:	62 1b       	sub	r22, r18
     748:	73 0b       	sbc	r23, r19
     74a:	84 0b       	sbc	r24, r20
     74c:	95 0b       	sbc	r25, r21
     74e:	39 f4       	brne	.+14     	; 0x75e <__fp_cmp+0x38>
     750:	0a 26       	eor	r0, r26
     752:	61 f0       	breq	.+24     	; 0x76c <__fp_cmp+0x46>
     754:	23 2b       	or	r18, r19
     756:	24 2b       	or	r18, r20
     758:	25 2b       	or	r18, r21
     75a:	21 f4       	brne	.+8      	; 0x764 <__fp_cmp+0x3e>
     75c:	08 95       	ret
     75e:	0a 26       	eor	r0, r26
     760:	09 f4       	brne	.+2      	; 0x764 <__fp_cmp+0x3e>
     762:	a1 40       	sbci	r26, 0x01	; 1
     764:	a6 95       	lsr	r26
     766:	8f ef       	ldi	r24, 0xFF	; 255
     768:	81 1d       	adc	r24, r1
     76a:	81 1d       	adc	r24, r1
     76c:	08 95       	ret

0000076e <__fp_inf>:
     76e:	97 f9       	bld	r25, 7
     770:	9f 67       	ori	r25, 0x7F	; 127
     772:	80 e8       	ldi	r24, 0x80	; 128
     774:	70 e0       	ldi	r23, 0x00	; 0
     776:	60 e0       	ldi	r22, 0x00	; 0
     778:	08 95       	ret

0000077a <__fp_mintl>:
     77a:	88 23       	and	r24, r24
     77c:	71 f4       	brne	.+28     	; 0x79a <__fp_mintl+0x20>
     77e:	77 23       	and	r23, r23
     780:	21 f0       	breq	.+8      	; 0x78a <__fp_mintl+0x10>
     782:	98 50       	subi	r25, 0x08	; 8
     784:	87 2b       	or	r24, r23
     786:	76 2f       	mov	r23, r22
     788:	07 c0       	rjmp	.+14     	; 0x798 <__fp_mintl+0x1e>
     78a:	66 23       	and	r22, r22
     78c:	11 f4       	brne	.+4      	; 0x792 <__fp_mintl+0x18>
     78e:	99 27       	eor	r25, r25
     790:	0d c0       	rjmp	.+26     	; 0x7ac <__fp_mintl+0x32>
     792:	90 51       	subi	r25, 0x10	; 16
     794:	86 2b       	or	r24, r22
     796:	70 e0       	ldi	r23, 0x00	; 0
     798:	60 e0       	ldi	r22, 0x00	; 0
     79a:	2a f0       	brmi	.+10     	; 0x7a6 <__fp_mintl+0x2c>
     79c:	9a 95       	dec	r25
     79e:	66 0f       	add	r22, r22
     7a0:	77 1f       	adc	r23, r23
     7a2:	88 1f       	adc	r24, r24
     7a4:	da f7       	brpl	.-10     	; 0x79c <__fp_mintl+0x22>
     7a6:	88 0f       	add	r24, r24
     7a8:	96 95       	lsr	r25
     7aa:	87 95       	ror	r24
     7ac:	97 f9       	bld	r25, 7
     7ae:	08 95       	ret

000007b0 <__fp_mpack>:
     7b0:	9f 3f       	cpi	r25, 0xFF	; 255
     7b2:	31 f0       	breq	.+12     	; 0x7c0 <__fp_mpack_finite+0xc>

000007b4 <__fp_mpack_finite>:
     7b4:	91 50       	subi	r25, 0x01	; 1
     7b6:	20 f4       	brcc	.+8      	; 0x7c0 <__fp_mpack_finite+0xc>
     7b8:	87 95       	ror	r24
     7ba:	77 95       	ror	r23
     7bc:	67 95       	ror	r22
     7be:	b7 95       	ror	r27
     7c0:	88 0f       	add	r24, r24
     7c2:	91 1d       	adc	r25, r1
     7c4:	96 95       	lsr	r25
     7c6:	87 95       	ror	r24
     7c8:	97 f9       	bld	r25, 7
     7ca:	08 95       	ret

000007cc <__fp_nan>:
     7cc:	9f ef       	ldi	r25, 0xFF	; 255
     7ce:	80 ec       	ldi	r24, 0xC0	; 192
     7d0:	08 95       	ret

000007d2 <__fp_pscA>:
     7d2:	00 24       	eor	r0, r0
     7d4:	0a 94       	dec	r0
     7d6:	16 16       	cp	r1, r22
     7d8:	17 06       	cpc	r1, r23
     7da:	18 06       	cpc	r1, r24
     7dc:	09 06       	cpc	r0, r25
     7de:	08 95       	ret

000007e0 <__fp_pscB>:
     7e0:	00 24       	eor	r0, r0
     7e2:	0a 94       	dec	r0
     7e4:	12 16       	cp	r1, r18
     7e6:	13 06       	cpc	r1, r19
     7e8:	14 06       	cpc	r1, r20
     7ea:	05 06       	cpc	r0, r21
     7ec:	08 95       	ret

000007ee <__fp_round>:
     7ee:	09 2e       	mov	r0, r25
     7f0:	03 94       	inc	r0
     7f2:	00 0c       	add	r0, r0
     7f4:	11 f4       	brne	.+4      	; 0x7fa <__fp_round+0xc>
     7f6:	88 23       	and	r24, r24
     7f8:	52 f0       	brmi	.+20     	; 0x80e <__EEPROM_REGION_LENGTH__+0xe>
     7fa:	bb 0f       	add	r27, r27
     7fc:	40 f4       	brcc	.+16     	; 0x80e <__EEPROM_REGION_LENGTH__+0xe>
     7fe:	bf 2b       	or	r27, r31
     800:	11 f4       	brne	.+4      	; 0x806 <__EEPROM_REGION_LENGTH__+0x6>
     802:	60 ff       	sbrs	r22, 0
     804:	04 c0       	rjmp	.+8      	; 0x80e <__EEPROM_REGION_LENGTH__+0xe>
     806:	6f 5f       	subi	r22, 0xFF	; 255
     808:	7f 4f       	sbci	r23, 0xFF	; 255
     80a:	8f 4f       	sbci	r24, 0xFF	; 255
     80c:	9f 4f       	sbci	r25, 0xFF	; 255
     80e:	08 95       	ret

00000810 <__fp_split3>:
     810:	57 fd       	sbrc	r21, 7
     812:	90 58       	subi	r25, 0x80	; 128
     814:	44 0f       	add	r20, r20
     816:	55 1f       	adc	r21, r21
     818:	59 f0       	breq	.+22     	; 0x830 <__fp_splitA+0x10>
     81a:	5f 3f       	cpi	r21, 0xFF	; 255
     81c:	71 f0       	breq	.+28     	; 0x83a <__fp_splitA+0x1a>
     81e:	47 95       	ror	r20

00000820 <__fp_splitA>:
     820:	88 0f       	add	r24, r24
     822:	97 fb       	bst	r25, 7
     824:	99 1f       	adc	r25, r25
     826:	61 f0       	breq	.+24     	; 0x840 <__fp_splitA+0x20>
     828:	9f 3f       	cpi	r25, 0xFF	; 255
     82a:	79 f0       	breq	.+30     	; 0x84a <__fp_splitA+0x2a>
     82c:	87 95       	ror	r24
     82e:	08 95       	ret
     830:	12 16       	cp	r1, r18
     832:	13 06       	cpc	r1, r19
     834:	14 06       	cpc	r1, r20
     836:	55 1f       	adc	r21, r21
     838:	f2 cf       	rjmp	.-28     	; 0x81e <__fp_split3+0xe>
     83a:	46 95       	lsr	r20
     83c:	f1 df       	rcall	.-30     	; 0x820 <__fp_splitA>
     83e:	08 c0       	rjmp	.+16     	; 0x850 <__fp_splitA+0x30>
     840:	16 16       	cp	r1, r22
     842:	17 06       	cpc	r1, r23
     844:	18 06       	cpc	r1, r24
     846:	99 1f       	adc	r25, r25
     848:	f1 cf       	rjmp	.-30     	; 0x82c <__fp_splitA+0xc>
     84a:	86 95       	lsr	r24
     84c:	71 05       	cpc	r23, r1
     84e:	61 05       	cpc	r22, r1
     850:	08 94       	sec
     852:	08 95       	ret

00000854 <__fp_trunc>:
     854:	0e 94 10 04 	call	0x820	; 0x820 <__fp_splitA>
     858:	a0 f0       	brcs	.+40     	; 0x882 <__fp_trunc+0x2e>
     85a:	be e7       	ldi	r27, 0x7E	; 126
     85c:	b9 17       	cp	r27, r25
     85e:	88 f4       	brcc	.+34     	; 0x882 <__fp_trunc+0x2e>
     860:	bb 27       	eor	r27, r27
     862:	9f 38       	cpi	r25, 0x8F	; 143
     864:	60 f4       	brcc	.+24     	; 0x87e <__fp_trunc+0x2a>
     866:	16 16       	cp	r1, r22
     868:	b1 1d       	adc	r27, r1
     86a:	67 2f       	mov	r22, r23
     86c:	78 2f       	mov	r23, r24
     86e:	88 27       	eor	r24, r24
     870:	98 5f       	subi	r25, 0xF8	; 248
     872:	f7 cf       	rjmp	.-18     	; 0x862 <__fp_trunc+0xe>
     874:	86 95       	lsr	r24
     876:	77 95       	ror	r23
     878:	67 95       	ror	r22
     87a:	b1 1d       	adc	r27, r1
     87c:	93 95       	inc	r25
     87e:	96 39       	cpi	r25, 0x96	; 150
     880:	c8 f3       	brcs	.-14     	; 0x874 <__fp_trunc+0x20>
     882:	08 95       	ret

00000884 <__fp_zero>:
     884:	e8 94       	clt

00000886 <__fp_szero>:
     886:	bb 27       	eor	r27, r27
     888:	66 27       	eor	r22, r22
     88a:	77 27       	eor	r23, r23
     88c:	cb 01       	movw	r24, r22
     88e:	97 f9       	bld	r25, 7
     890:	08 95       	ret

00000892 <__gesf2>:
     892:	0e 94 93 03 	call	0x726	; 0x726 <__fp_cmp>
     896:	08 f4       	brcc	.+2      	; 0x89a <__gesf2+0x8>
     898:	8f ef       	ldi	r24, 0xFF	; 255
     89a:	08 95       	ret

0000089c <__mulsf3>:
     89c:	0e 94 61 04 	call	0x8c2	; 0x8c2 <__mulsf3x>
     8a0:	0c 94 f7 03 	jmp	0x7ee	; 0x7ee <__fp_round>
     8a4:	0e 94 e9 03 	call	0x7d2	; 0x7d2 <__fp_pscA>
     8a8:	38 f0       	brcs	.+14     	; 0x8b8 <__mulsf3+0x1c>
     8aa:	0e 94 f0 03 	call	0x7e0	; 0x7e0 <__fp_pscB>
     8ae:	20 f0       	brcs	.+8      	; 0x8b8 <__mulsf3+0x1c>
     8b0:	95 23       	and	r25, r21
     8b2:	11 f0       	breq	.+4      	; 0x8b8 <__mulsf3+0x1c>
     8b4:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__fp_inf>
     8b8:	0c 94 e6 03 	jmp	0x7cc	; 0x7cc <__fp_nan>
     8bc:	11 24       	eor	r1, r1
     8be:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_szero>

000008c2 <__mulsf3x>:
     8c2:	0e 94 08 04 	call	0x810	; 0x810 <__fp_split3>
     8c6:	70 f3       	brcs	.-36     	; 0x8a4 <__mulsf3+0x8>

000008c8 <__mulsf3_pse>:
     8c8:	95 9f       	mul	r25, r21
     8ca:	c1 f3       	breq	.-16     	; 0x8bc <__mulsf3+0x20>
     8cc:	95 0f       	add	r25, r21
     8ce:	50 e0       	ldi	r21, 0x00	; 0
     8d0:	55 1f       	adc	r21, r21
     8d2:	62 9f       	mul	r22, r18
     8d4:	f0 01       	movw	r30, r0
     8d6:	72 9f       	mul	r23, r18
     8d8:	bb 27       	eor	r27, r27
     8da:	f0 0d       	add	r31, r0
     8dc:	b1 1d       	adc	r27, r1
     8de:	63 9f       	mul	r22, r19
     8e0:	aa 27       	eor	r26, r26
     8e2:	f0 0d       	add	r31, r0
     8e4:	b1 1d       	adc	r27, r1
     8e6:	aa 1f       	adc	r26, r26
     8e8:	64 9f       	mul	r22, r20
     8ea:	66 27       	eor	r22, r22
     8ec:	b0 0d       	add	r27, r0
     8ee:	a1 1d       	adc	r26, r1
     8f0:	66 1f       	adc	r22, r22
     8f2:	82 9f       	mul	r24, r18
     8f4:	22 27       	eor	r18, r18
     8f6:	b0 0d       	add	r27, r0
     8f8:	a1 1d       	adc	r26, r1
     8fa:	62 1f       	adc	r22, r18
     8fc:	73 9f       	mul	r23, r19
     8fe:	b0 0d       	add	r27, r0
     900:	a1 1d       	adc	r26, r1
     902:	62 1f       	adc	r22, r18
     904:	83 9f       	mul	r24, r19
     906:	a0 0d       	add	r26, r0
     908:	61 1d       	adc	r22, r1
     90a:	22 1f       	adc	r18, r18
     90c:	74 9f       	mul	r23, r20
     90e:	33 27       	eor	r19, r19
     910:	a0 0d       	add	r26, r0
     912:	61 1d       	adc	r22, r1
     914:	23 1f       	adc	r18, r19
     916:	84 9f       	mul	r24, r20
     918:	60 0d       	add	r22, r0
     91a:	21 1d       	adc	r18, r1
     91c:	82 2f       	mov	r24, r18
     91e:	76 2f       	mov	r23, r22
     920:	6a 2f       	mov	r22, r26
     922:	11 24       	eor	r1, r1
     924:	9f 57       	subi	r25, 0x7F	; 127
     926:	50 40       	sbci	r21, 0x00	; 0
     928:	9a f0       	brmi	.+38     	; 0x950 <__mulsf3_pse+0x88>
     92a:	f1 f0       	breq	.+60     	; 0x968 <__mulsf3_pse+0xa0>
     92c:	88 23       	and	r24, r24
     92e:	4a f0       	brmi	.+18     	; 0x942 <__mulsf3_pse+0x7a>
     930:	ee 0f       	add	r30, r30
     932:	ff 1f       	adc	r31, r31
     934:	bb 1f       	adc	r27, r27
     936:	66 1f       	adc	r22, r22
     938:	77 1f       	adc	r23, r23
     93a:	88 1f       	adc	r24, r24
     93c:	91 50       	subi	r25, 0x01	; 1
     93e:	50 40       	sbci	r21, 0x00	; 0
     940:	a9 f7       	brne	.-22     	; 0x92c <__mulsf3_pse+0x64>
     942:	9e 3f       	cpi	r25, 0xFE	; 254
     944:	51 05       	cpc	r21, r1
     946:	80 f0       	brcs	.+32     	; 0x968 <__mulsf3_pse+0xa0>
     948:	0c 94 b7 03 	jmp	0x76e	; 0x76e <__fp_inf>
     94c:	0c 94 43 04 	jmp	0x886	; 0x886 <__fp_szero>
     950:	5f 3f       	cpi	r21, 0xFF	; 255
     952:	e4 f3       	brlt	.-8      	; 0x94c <__mulsf3_pse+0x84>
     954:	98 3e       	cpi	r25, 0xE8	; 232
     956:	d4 f3       	brlt	.-12     	; 0x94c <__mulsf3_pse+0x84>
     958:	86 95       	lsr	r24
     95a:	77 95       	ror	r23
     95c:	67 95       	ror	r22
     95e:	b7 95       	ror	r27
     960:	f7 95       	ror	r31
     962:	e7 95       	ror	r30
     964:	9f 5f       	subi	r25, 0xFF	; 255
     966:	c1 f7       	brne	.-16     	; 0x958 <__mulsf3_pse+0x90>
     968:	fe 2b       	or	r31, r30
     96a:	88 0f       	add	r24, r24
     96c:	91 1d       	adc	r25, r1
     96e:	96 95       	lsr	r25
     970:	87 95       	ror	r24
     972:	97 f9       	bld	r25, 7
     974:	08 95       	ret

00000976 <fdevopen>:
     976:	0f 93       	push	r16
     978:	1f 93       	push	r17
     97a:	cf 93       	push	r28
     97c:	df 93       	push	r29
     97e:	00 97       	sbiw	r24, 0x00	; 0
     980:	31 f4       	brne	.+12     	; 0x98e <fdevopen+0x18>
     982:	61 15       	cp	r22, r1
     984:	71 05       	cpc	r23, r1
     986:	19 f4       	brne	.+6      	; 0x98e <fdevopen+0x18>
     988:	80 e0       	ldi	r24, 0x00	; 0
     98a:	90 e0       	ldi	r25, 0x00	; 0
     98c:	3a c0       	rjmp	.+116    	; 0xa02 <fdevopen+0x8c>
     98e:	8b 01       	movw	r16, r22
     990:	ec 01       	movw	r28, r24
     992:	6e e0       	ldi	r22, 0x0E	; 14
     994:	70 e0       	ldi	r23, 0x00	; 0
     996:	81 e0       	ldi	r24, 0x01	; 1
     998:	90 e0       	ldi	r25, 0x00	; 0
     99a:	0e 94 1e 07 	call	0xe3c	; 0xe3c <calloc>
     99e:	fc 01       	movw	r30, r24
     9a0:	89 2b       	or	r24, r25
     9a2:	91 f3       	breq	.-28     	; 0x988 <fdevopen+0x12>
     9a4:	80 e8       	ldi	r24, 0x80	; 128
     9a6:	83 83       	std	Z+3, r24	; 0x03
     9a8:	01 15       	cp	r16, r1
     9aa:	11 05       	cpc	r17, r1
     9ac:	71 f0       	breq	.+28     	; 0x9ca <fdevopen+0x54>
     9ae:	02 87       	std	Z+10, r16	; 0x0a
     9b0:	13 87       	std	Z+11, r17	; 0x0b
     9b2:	81 e8       	ldi	r24, 0x81	; 129
     9b4:	83 83       	std	Z+3, r24	; 0x03
     9b6:	80 91 16 20 	lds	r24, 0x2016	; 0x802016 <__data_end>
     9ba:	90 91 17 20 	lds	r25, 0x2017	; 0x802017 <__data_end+0x1>
     9be:	89 2b       	or	r24, r25
     9c0:	21 f4       	brne	.+8      	; 0x9ca <fdevopen+0x54>
     9c2:	e0 93 16 20 	sts	0x2016, r30	; 0x802016 <__data_end>
     9c6:	f0 93 17 20 	sts	0x2017, r31	; 0x802017 <__data_end+0x1>
     9ca:	20 97       	sbiw	r28, 0x00	; 0
     9cc:	c9 f0       	breq	.+50     	; 0xa00 <fdevopen+0x8a>
     9ce:	c0 87       	std	Z+8, r28	; 0x08
     9d0:	d1 87       	std	Z+9, r29	; 0x09
     9d2:	83 81       	ldd	r24, Z+3	; 0x03
     9d4:	82 60       	ori	r24, 0x02	; 2
     9d6:	83 83       	std	Z+3, r24	; 0x03
     9d8:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <__data_end+0x2>
     9dc:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <__data_end+0x3>
     9e0:	89 2b       	or	r24, r25
     9e2:	71 f4       	brne	.+28     	; 0xa00 <fdevopen+0x8a>
     9e4:	e0 93 18 20 	sts	0x2018, r30	; 0x802018 <__data_end+0x2>
     9e8:	f0 93 19 20 	sts	0x2019, r31	; 0x802019 <__data_end+0x3>
     9ec:	80 91 1a 20 	lds	r24, 0x201A	; 0x80201a <__data_end+0x4>
     9f0:	90 91 1b 20 	lds	r25, 0x201B	; 0x80201b <__data_end+0x5>
     9f4:	89 2b       	or	r24, r25
     9f6:	21 f4       	brne	.+8      	; 0xa00 <fdevopen+0x8a>
     9f8:	e0 93 1a 20 	sts	0x201A, r30	; 0x80201a <__data_end+0x4>
     9fc:	f0 93 1b 20 	sts	0x201B, r31	; 0x80201b <__data_end+0x5>
     a00:	cf 01       	movw	r24, r30
     a02:	df 91       	pop	r29
     a04:	cf 91       	pop	r28
     a06:	1f 91       	pop	r17
     a08:	0f 91       	pop	r16
     a0a:	08 95       	ret

00000a0c <printf>:
     a0c:	cf 93       	push	r28
     a0e:	df 93       	push	r29
     a10:	cd b7       	in	r28, 0x3d	; 61
     a12:	de b7       	in	r29, 0x3e	; 62
     a14:	ae 01       	movw	r20, r28
     a16:	4a 5f       	subi	r20, 0xFA	; 250
     a18:	5f 4f       	sbci	r21, 0xFF	; 255
     a1a:	fa 01       	movw	r30, r20
     a1c:	61 91       	ld	r22, Z+
     a1e:	71 91       	ld	r23, Z+
     a20:	af 01       	movw	r20, r30
     a22:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <__data_end+0x2>
     a26:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <__data_end+0x3>
     a2a:	0e 94 1a 05 	call	0xa34	; 0xa34 <vfprintf>
     a2e:	df 91       	pop	r29
     a30:	cf 91       	pop	r28
     a32:	08 95       	ret

00000a34 <vfprintf>:
     a34:	2f 92       	push	r2
     a36:	3f 92       	push	r3
     a38:	4f 92       	push	r4
     a3a:	5f 92       	push	r5
     a3c:	6f 92       	push	r6
     a3e:	7f 92       	push	r7
     a40:	8f 92       	push	r8
     a42:	9f 92       	push	r9
     a44:	af 92       	push	r10
     a46:	bf 92       	push	r11
     a48:	cf 92       	push	r12
     a4a:	df 92       	push	r13
     a4c:	ef 92       	push	r14
     a4e:	ff 92       	push	r15
     a50:	0f 93       	push	r16
     a52:	1f 93       	push	r17
     a54:	cf 93       	push	r28
     a56:	df 93       	push	r29
     a58:	cd b7       	in	r28, 0x3d	; 61
     a5a:	de b7       	in	r29, 0x3e	; 62
     a5c:	2b 97       	sbiw	r28, 0x0b	; 11
     a5e:	cd bf       	out	0x3d, r28	; 61
     a60:	de bf       	out	0x3e, r29	; 62
     a62:	6c 01       	movw	r12, r24
     a64:	7b 01       	movw	r14, r22
     a66:	8a 01       	movw	r16, r20
     a68:	fc 01       	movw	r30, r24
     a6a:	16 82       	std	Z+6, r1	; 0x06
     a6c:	17 82       	std	Z+7, r1	; 0x07
     a6e:	83 81       	ldd	r24, Z+3	; 0x03
     a70:	81 ff       	sbrs	r24, 1
     a72:	cc c1       	rjmp	.+920    	; 0xe0c <vfprintf+0x3d8>
     a74:	ce 01       	movw	r24, r28
     a76:	01 96       	adiw	r24, 0x01	; 1
     a78:	3c 01       	movw	r6, r24
     a7a:	f6 01       	movw	r30, r12
     a7c:	93 81       	ldd	r25, Z+3	; 0x03
     a7e:	f7 01       	movw	r30, r14
     a80:	93 fd       	sbrc	r25, 3
     a82:	85 91       	lpm	r24, Z+
     a84:	93 ff       	sbrs	r25, 3
     a86:	81 91       	ld	r24, Z+
     a88:	7f 01       	movw	r14, r30
     a8a:	88 23       	and	r24, r24
     a8c:	09 f4       	brne	.+2      	; 0xa90 <vfprintf+0x5c>
     a8e:	ba c1       	rjmp	.+884    	; 0xe04 <vfprintf+0x3d0>
     a90:	85 32       	cpi	r24, 0x25	; 37
     a92:	39 f4       	brne	.+14     	; 0xaa2 <vfprintf+0x6e>
     a94:	93 fd       	sbrc	r25, 3
     a96:	85 91       	lpm	r24, Z+
     a98:	93 ff       	sbrs	r25, 3
     a9a:	81 91       	ld	r24, Z+
     a9c:	7f 01       	movw	r14, r30
     a9e:	85 32       	cpi	r24, 0x25	; 37
     aa0:	29 f4       	brne	.+10     	; 0xaac <vfprintf+0x78>
     aa2:	b6 01       	movw	r22, r12
     aa4:	90 e0       	ldi	r25, 0x00	; 0
     aa6:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     aaa:	e7 cf       	rjmp	.-50     	; 0xa7a <vfprintf+0x46>
     aac:	91 2c       	mov	r9, r1
     aae:	21 2c       	mov	r2, r1
     ab0:	31 2c       	mov	r3, r1
     ab2:	ff e1       	ldi	r31, 0x1F	; 31
     ab4:	f3 15       	cp	r31, r3
     ab6:	d8 f0       	brcs	.+54     	; 0xaee <vfprintf+0xba>
     ab8:	8b 32       	cpi	r24, 0x2B	; 43
     aba:	79 f0       	breq	.+30     	; 0xada <vfprintf+0xa6>
     abc:	38 f4       	brcc	.+14     	; 0xacc <vfprintf+0x98>
     abe:	80 32       	cpi	r24, 0x20	; 32
     ac0:	79 f0       	breq	.+30     	; 0xae0 <vfprintf+0xac>
     ac2:	83 32       	cpi	r24, 0x23	; 35
     ac4:	a1 f4       	brne	.+40     	; 0xaee <vfprintf+0xba>
     ac6:	23 2d       	mov	r18, r3
     ac8:	20 61       	ori	r18, 0x10	; 16
     aca:	1d c0       	rjmp	.+58     	; 0xb06 <vfprintf+0xd2>
     acc:	8d 32       	cpi	r24, 0x2D	; 45
     ace:	61 f0       	breq	.+24     	; 0xae8 <vfprintf+0xb4>
     ad0:	80 33       	cpi	r24, 0x30	; 48
     ad2:	69 f4       	brne	.+26     	; 0xaee <vfprintf+0xba>
     ad4:	23 2d       	mov	r18, r3
     ad6:	21 60       	ori	r18, 0x01	; 1
     ad8:	16 c0       	rjmp	.+44     	; 0xb06 <vfprintf+0xd2>
     ada:	83 2d       	mov	r24, r3
     adc:	82 60       	ori	r24, 0x02	; 2
     ade:	38 2e       	mov	r3, r24
     ae0:	e3 2d       	mov	r30, r3
     ae2:	e4 60       	ori	r30, 0x04	; 4
     ae4:	3e 2e       	mov	r3, r30
     ae6:	2a c0       	rjmp	.+84     	; 0xb3c <vfprintf+0x108>
     ae8:	f3 2d       	mov	r31, r3
     aea:	f8 60       	ori	r31, 0x08	; 8
     aec:	1d c0       	rjmp	.+58     	; 0xb28 <vfprintf+0xf4>
     aee:	37 fc       	sbrc	r3, 7
     af0:	2d c0       	rjmp	.+90     	; 0xb4c <vfprintf+0x118>
     af2:	20 ed       	ldi	r18, 0xD0	; 208
     af4:	28 0f       	add	r18, r24
     af6:	2a 30       	cpi	r18, 0x0A	; 10
     af8:	40 f0       	brcs	.+16     	; 0xb0a <vfprintf+0xd6>
     afa:	8e 32       	cpi	r24, 0x2E	; 46
     afc:	b9 f4       	brne	.+46     	; 0xb2c <vfprintf+0xf8>
     afe:	36 fc       	sbrc	r3, 6
     b00:	81 c1       	rjmp	.+770    	; 0xe04 <vfprintf+0x3d0>
     b02:	23 2d       	mov	r18, r3
     b04:	20 64       	ori	r18, 0x40	; 64
     b06:	32 2e       	mov	r3, r18
     b08:	19 c0       	rjmp	.+50     	; 0xb3c <vfprintf+0x108>
     b0a:	36 fe       	sbrs	r3, 6
     b0c:	06 c0       	rjmp	.+12     	; 0xb1a <vfprintf+0xe6>
     b0e:	8a e0       	ldi	r24, 0x0A	; 10
     b10:	98 9e       	mul	r9, r24
     b12:	20 0d       	add	r18, r0
     b14:	11 24       	eor	r1, r1
     b16:	92 2e       	mov	r9, r18
     b18:	11 c0       	rjmp	.+34     	; 0xb3c <vfprintf+0x108>
     b1a:	ea e0       	ldi	r30, 0x0A	; 10
     b1c:	2e 9e       	mul	r2, r30
     b1e:	20 0d       	add	r18, r0
     b20:	11 24       	eor	r1, r1
     b22:	22 2e       	mov	r2, r18
     b24:	f3 2d       	mov	r31, r3
     b26:	f0 62       	ori	r31, 0x20	; 32
     b28:	3f 2e       	mov	r3, r31
     b2a:	08 c0       	rjmp	.+16     	; 0xb3c <vfprintf+0x108>
     b2c:	8c 36       	cpi	r24, 0x6C	; 108
     b2e:	21 f4       	brne	.+8      	; 0xb38 <vfprintf+0x104>
     b30:	83 2d       	mov	r24, r3
     b32:	80 68       	ori	r24, 0x80	; 128
     b34:	38 2e       	mov	r3, r24
     b36:	02 c0       	rjmp	.+4      	; 0xb3c <vfprintf+0x108>
     b38:	88 36       	cpi	r24, 0x68	; 104
     b3a:	41 f4       	brne	.+16     	; 0xb4c <vfprintf+0x118>
     b3c:	f7 01       	movw	r30, r14
     b3e:	93 fd       	sbrc	r25, 3
     b40:	85 91       	lpm	r24, Z+
     b42:	93 ff       	sbrs	r25, 3
     b44:	81 91       	ld	r24, Z+
     b46:	7f 01       	movw	r14, r30
     b48:	81 11       	cpse	r24, r1
     b4a:	b3 cf       	rjmp	.-154    	; 0xab2 <vfprintf+0x7e>
     b4c:	98 2f       	mov	r25, r24
     b4e:	9f 7d       	andi	r25, 0xDF	; 223
     b50:	95 54       	subi	r25, 0x45	; 69
     b52:	93 30       	cpi	r25, 0x03	; 3
     b54:	28 f4       	brcc	.+10     	; 0xb60 <vfprintf+0x12c>
     b56:	0c 5f       	subi	r16, 0xFC	; 252
     b58:	1f 4f       	sbci	r17, 0xFF	; 255
     b5a:	9f e3       	ldi	r25, 0x3F	; 63
     b5c:	99 83       	std	Y+1, r25	; 0x01
     b5e:	0d c0       	rjmp	.+26     	; 0xb7a <vfprintf+0x146>
     b60:	83 36       	cpi	r24, 0x63	; 99
     b62:	31 f0       	breq	.+12     	; 0xb70 <vfprintf+0x13c>
     b64:	83 37       	cpi	r24, 0x73	; 115
     b66:	71 f0       	breq	.+28     	; 0xb84 <vfprintf+0x150>
     b68:	83 35       	cpi	r24, 0x53	; 83
     b6a:	09 f0       	breq	.+2      	; 0xb6e <vfprintf+0x13a>
     b6c:	59 c0       	rjmp	.+178    	; 0xc20 <vfprintf+0x1ec>
     b6e:	21 c0       	rjmp	.+66     	; 0xbb2 <vfprintf+0x17e>
     b70:	f8 01       	movw	r30, r16
     b72:	80 81       	ld	r24, Z
     b74:	89 83       	std	Y+1, r24	; 0x01
     b76:	0e 5f       	subi	r16, 0xFE	; 254
     b78:	1f 4f       	sbci	r17, 0xFF	; 255
     b7a:	88 24       	eor	r8, r8
     b7c:	83 94       	inc	r8
     b7e:	91 2c       	mov	r9, r1
     b80:	53 01       	movw	r10, r6
     b82:	13 c0       	rjmp	.+38     	; 0xbaa <vfprintf+0x176>
     b84:	28 01       	movw	r4, r16
     b86:	f2 e0       	ldi	r31, 0x02	; 2
     b88:	4f 0e       	add	r4, r31
     b8a:	51 1c       	adc	r5, r1
     b8c:	f8 01       	movw	r30, r16
     b8e:	a0 80       	ld	r10, Z
     b90:	b1 80       	ldd	r11, Z+1	; 0x01
     b92:	36 fe       	sbrs	r3, 6
     b94:	03 c0       	rjmp	.+6      	; 0xb9c <vfprintf+0x168>
     b96:	69 2d       	mov	r22, r9
     b98:	70 e0       	ldi	r23, 0x00	; 0
     b9a:	02 c0       	rjmp	.+4      	; 0xba0 <vfprintf+0x16c>
     b9c:	6f ef       	ldi	r22, 0xFF	; 255
     b9e:	7f ef       	ldi	r23, 0xFF	; 255
     ba0:	c5 01       	movw	r24, r10
     ba2:	0e 94 6d 08 	call	0x10da	; 0x10da <strnlen>
     ba6:	4c 01       	movw	r8, r24
     ba8:	82 01       	movw	r16, r4
     baa:	f3 2d       	mov	r31, r3
     bac:	ff 77       	andi	r31, 0x7F	; 127
     bae:	3f 2e       	mov	r3, r31
     bb0:	16 c0       	rjmp	.+44     	; 0xbde <vfprintf+0x1aa>
     bb2:	28 01       	movw	r4, r16
     bb4:	22 e0       	ldi	r18, 0x02	; 2
     bb6:	42 0e       	add	r4, r18
     bb8:	51 1c       	adc	r5, r1
     bba:	f8 01       	movw	r30, r16
     bbc:	a0 80       	ld	r10, Z
     bbe:	b1 80       	ldd	r11, Z+1	; 0x01
     bc0:	36 fe       	sbrs	r3, 6
     bc2:	03 c0       	rjmp	.+6      	; 0xbca <vfprintf+0x196>
     bc4:	69 2d       	mov	r22, r9
     bc6:	70 e0       	ldi	r23, 0x00	; 0
     bc8:	02 c0       	rjmp	.+4      	; 0xbce <vfprintf+0x19a>
     bca:	6f ef       	ldi	r22, 0xFF	; 255
     bcc:	7f ef       	ldi	r23, 0xFF	; 255
     bce:	c5 01       	movw	r24, r10
     bd0:	0e 94 5b 08 	call	0x10b6	; 0x10b6 <strnlen_P>
     bd4:	4c 01       	movw	r8, r24
     bd6:	f3 2d       	mov	r31, r3
     bd8:	f0 68       	ori	r31, 0x80	; 128
     bda:	3f 2e       	mov	r3, r31
     bdc:	82 01       	movw	r16, r4
     bde:	33 fc       	sbrc	r3, 3
     be0:	1b c0       	rjmp	.+54     	; 0xc18 <vfprintf+0x1e4>
     be2:	82 2d       	mov	r24, r2
     be4:	90 e0       	ldi	r25, 0x00	; 0
     be6:	88 16       	cp	r8, r24
     be8:	99 06       	cpc	r9, r25
     bea:	b0 f4       	brcc	.+44     	; 0xc18 <vfprintf+0x1e4>
     bec:	b6 01       	movw	r22, r12
     bee:	80 e2       	ldi	r24, 0x20	; 32
     bf0:	90 e0       	ldi	r25, 0x00	; 0
     bf2:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     bf6:	2a 94       	dec	r2
     bf8:	f4 cf       	rjmp	.-24     	; 0xbe2 <vfprintf+0x1ae>
     bfa:	f5 01       	movw	r30, r10
     bfc:	37 fc       	sbrc	r3, 7
     bfe:	85 91       	lpm	r24, Z+
     c00:	37 fe       	sbrs	r3, 7
     c02:	81 91       	ld	r24, Z+
     c04:	5f 01       	movw	r10, r30
     c06:	b6 01       	movw	r22, r12
     c08:	90 e0       	ldi	r25, 0x00	; 0
     c0a:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     c0e:	21 10       	cpse	r2, r1
     c10:	2a 94       	dec	r2
     c12:	21 e0       	ldi	r18, 0x01	; 1
     c14:	82 1a       	sub	r8, r18
     c16:	91 08       	sbc	r9, r1
     c18:	81 14       	cp	r8, r1
     c1a:	91 04       	cpc	r9, r1
     c1c:	71 f7       	brne	.-36     	; 0xbfa <vfprintf+0x1c6>
     c1e:	e8 c0       	rjmp	.+464    	; 0xdf0 <vfprintf+0x3bc>
     c20:	84 36       	cpi	r24, 0x64	; 100
     c22:	11 f0       	breq	.+4      	; 0xc28 <vfprintf+0x1f4>
     c24:	89 36       	cpi	r24, 0x69	; 105
     c26:	41 f5       	brne	.+80     	; 0xc78 <vfprintf+0x244>
     c28:	f8 01       	movw	r30, r16
     c2a:	37 fe       	sbrs	r3, 7
     c2c:	07 c0       	rjmp	.+14     	; 0xc3c <vfprintf+0x208>
     c2e:	60 81       	ld	r22, Z
     c30:	71 81       	ldd	r23, Z+1	; 0x01
     c32:	82 81       	ldd	r24, Z+2	; 0x02
     c34:	93 81       	ldd	r25, Z+3	; 0x03
     c36:	0c 5f       	subi	r16, 0xFC	; 252
     c38:	1f 4f       	sbci	r17, 0xFF	; 255
     c3a:	08 c0       	rjmp	.+16     	; 0xc4c <vfprintf+0x218>
     c3c:	60 81       	ld	r22, Z
     c3e:	71 81       	ldd	r23, Z+1	; 0x01
     c40:	07 2e       	mov	r0, r23
     c42:	00 0c       	add	r0, r0
     c44:	88 0b       	sbc	r24, r24
     c46:	99 0b       	sbc	r25, r25
     c48:	0e 5f       	subi	r16, 0xFE	; 254
     c4a:	1f 4f       	sbci	r17, 0xFF	; 255
     c4c:	f3 2d       	mov	r31, r3
     c4e:	ff 76       	andi	r31, 0x6F	; 111
     c50:	3f 2e       	mov	r3, r31
     c52:	97 ff       	sbrs	r25, 7
     c54:	09 c0       	rjmp	.+18     	; 0xc68 <vfprintf+0x234>
     c56:	90 95       	com	r25
     c58:	80 95       	com	r24
     c5a:	70 95       	com	r23
     c5c:	61 95       	neg	r22
     c5e:	7f 4f       	sbci	r23, 0xFF	; 255
     c60:	8f 4f       	sbci	r24, 0xFF	; 255
     c62:	9f 4f       	sbci	r25, 0xFF	; 255
     c64:	f0 68       	ori	r31, 0x80	; 128
     c66:	3f 2e       	mov	r3, r31
     c68:	2a e0       	ldi	r18, 0x0A	; 10
     c6a:	30 e0       	ldi	r19, 0x00	; 0
     c6c:	a3 01       	movw	r20, r6
     c6e:	0e 94 b4 08 	call	0x1168	; 0x1168 <__ultoa_invert>
     c72:	88 2e       	mov	r8, r24
     c74:	86 18       	sub	r8, r6
     c76:	45 c0       	rjmp	.+138    	; 0xd02 <vfprintf+0x2ce>
     c78:	85 37       	cpi	r24, 0x75	; 117
     c7a:	31 f4       	brne	.+12     	; 0xc88 <vfprintf+0x254>
     c7c:	23 2d       	mov	r18, r3
     c7e:	2f 7e       	andi	r18, 0xEF	; 239
     c80:	b2 2e       	mov	r11, r18
     c82:	2a e0       	ldi	r18, 0x0A	; 10
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	25 c0       	rjmp	.+74     	; 0xcd2 <vfprintf+0x29e>
     c88:	93 2d       	mov	r25, r3
     c8a:	99 7f       	andi	r25, 0xF9	; 249
     c8c:	b9 2e       	mov	r11, r25
     c8e:	8f 36       	cpi	r24, 0x6F	; 111
     c90:	c1 f0       	breq	.+48     	; 0xcc2 <vfprintf+0x28e>
     c92:	18 f4       	brcc	.+6      	; 0xc9a <vfprintf+0x266>
     c94:	88 35       	cpi	r24, 0x58	; 88
     c96:	79 f0       	breq	.+30     	; 0xcb6 <vfprintf+0x282>
     c98:	b5 c0       	rjmp	.+362    	; 0xe04 <vfprintf+0x3d0>
     c9a:	80 37       	cpi	r24, 0x70	; 112
     c9c:	19 f0       	breq	.+6      	; 0xca4 <vfprintf+0x270>
     c9e:	88 37       	cpi	r24, 0x78	; 120
     ca0:	21 f0       	breq	.+8      	; 0xcaa <vfprintf+0x276>
     ca2:	b0 c0       	rjmp	.+352    	; 0xe04 <vfprintf+0x3d0>
     ca4:	e9 2f       	mov	r30, r25
     ca6:	e0 61       	ori	r30, 0x10	; 16
     ca8:	be 2e       	mov	r11, r30
     caa:	b4 fe       	sbrs	r11, 4
     cac:	0d c0       	rjmp	.+26     	; 0xcc8 <vfprintf+0x294>
     cae:	fb 2d       	mov	r31, r11
     cb0:	f4 60       	ori	r31, 0x04	; 4
     cb2:	bf 2e       	mov	r11, r31
     cb4:	09 c0       	rjmp	.+18     	; 0xcc8 <vfprintf+0x294>
     cb6:	34 fe       	sbrs	r3, 4
     cb8:	0a c0       	rjmp	.+20     	; 0xcce <vfprintf+0x29a>
     cba:	29 2f       	mov	r18, r25
     cbc:	26 60       	ori	r18, 0x06	; 6
     cbe:	b2 2e       	mov	r11, r18
     cc0:	06 c0       	rjmp	.+12     	; 0xcce <vfprintf+0x29a>
     cc2:	28 e0       	ldi	r18, 0x08	; 8
     cc4:	30 e0       	ldi	r19, 0x00	; 0
     cc6:	05 c0       	rjmp	.+10     	; 0xcd2 <vfprintf+0x29e>
     cc8:	20 e1       	ldi	r18, 0x10	; 16
     cca:	30 e0       	ldi	r19, 0x00	; 0
     ccc:	02 c0       	rjmp	.+4      	; 0xcd2 <vfprintf+0x29e>
     cce:	20 e1       	ldi	r18, 0x10	; 16
     cd0:	32 e0       	ldi	r19, 0x02	; 2
     cd2:	f8 01       	movw	r30, r16
     cd4:	b7 fe       	sbrs	r11, 7
     cd6:	07 c0       	rjmp	.+14     	; 0xce6 <vfprintf+0x2b2>
     cd8:	60 81       	ld	r22, Z
     cda:	71 81       	ldd	r23, Z+1	; 0x01
     cdc:	82 81       	ldd	r24, Z+2	; 0x02
     cde:	93 81       	ldd	r25, Z+3	; 0x03
     ce0:	0c 5f       	subi	r16, 0xFC	; 252
     ce2:	1f 4f       	sbci	r17, 0xFF	; 255
     ce4:	06 c0       	rjmp	.+12     	; 0xcf2 <vfprintf+0x2be>
     ce6:	60 81       	ld	r22, Z
     ce8:	71 81       	ldd	r23, Z+1	; 0x01
     cea:	80 e0       	ldi	r24, 0x00	; 0
     cec:	90 e0       	ldi	r25, 0x00	; 0
     cee:	0e 5f       	subi	r16, 0xFE	; 254
     cf0:	1f 4f       	sbci	r17, 0xFF	; 255
     cf2:	a3 01       	movw	r20, r6
     cf4:	0e 94 b4 08 	call	0x1168	; 0x1168 <__ultoa_invert>
     cf8:	88 2e       	mov	r8, r24
     cfa:	86 18       	sub	r8, r6
     cfc:	fb 2d       	mov	r31, r11
     cfe:	ff 77       	andi	r31, 0x7F	; 127
     d00:	3f 2e       	mov	r3, r31
     d02:	36 fe       	sbrs	r3, 6
     d04:	0d c0       	rjmp	.+26     	; 0xd20 <vfprintf+0x2ec>
     d06:	23 2d       	mov	r18, r3
     d08:	2e 7f       	andi	r18, 0xFE	; 254
     d0a:	a2 2e       	mov	r10, r18
     d0c:	89 14       	cp	r8, r9
     d0e:	58 f4       	brcc	.+22     	; 0xd26 <vfprintf+0x2f2>
     d10:	34 fe       	sbrs	r3, 4
     d12:	0b c0       	rjmp	.+22     	; 0xd2a <vfprintf+0x2f6>
     d14:	32 fc       	sbrc	r3, 2
     d16:	09 c0       	rjmp	.+18     	; 0xd2a <vfprintf+0x2f6>
     d18:	83 2d       	mov	r24, r3
     d1a:	8e 7e       	andi	r24, 0xEE	; 238
     d1c:	a8 2e       	mov	r10, r24
     d1e:	05 c0       	rjmp	.+10     	; 0xd2a <vfprintf+0x2f6>
     d20:	b8 2c       	mov	r11, r8
     d22:	a3 2c       	mov	r10, r3
     d24:	03 c0       	rjmp	.+6      	; 0xd2c <vfprintf+0x2f8>
     d26:	b8 2c       	mov	r11, r8
     d28:	01 c0       	rjmp	.+2      	; 0xd2c <vfprintf+0x2f8>
     d2a:	b9 2c       	mov	r11, r9
     d2c:	a4 fe       	sbrs	r10, 4
     d2e:	0f c0       	rjmp	.+30     	; 0xd4e <vfprintf+0x31a>
     d30:	fe 01       	movw	r30, r28
     d32:	e8 0d       	add	r30, r8
     d34:	f1 1d       	adc	r31, r1
     d36:	80 81       	ld	r24, Z
     d38:	80 33       	cpi	r24, 0x30	; 48
     d3a:	21 f4       	brne	.+8      	; 0xd44 <vfprintf+0x310>
     d3c:	9a 2d       	mov	r25, r10
     d3e:	99 7e       	andi	r25, 0xE9	; 233
     d40:	a9 2e       	mov	r10, r25
     d42:	09 c0       	rjmp	.+18     	; 0xd56 <vfprintf+0x322>
     d44:	a2 fe       	sbrs	r10, 2
     d46:	06 c0       	rjmp	.+12     	; 0xd54 <vfprintf+0x320>
     d48:	b3 94       	inc	r11
     d4a:	b3 94       	inc	r11
     d4c:	04 c0       	rjmp	.+8      	; 0xd56 <vfprintf+0x322>
     d4e:	8a 2d       	mov	r24, r10
     d50:	86 78       	andi	r24, 0x86	; 134
     d52:	09 f0       	breq	.+2      	; 0xd56 <vfprintf+0x322>
     d54:	b3 94       	inc	r11
     d56:	a3 fc       	sbrc	r10, 3
     d58:	11 c0       	rjmp	.+34     	; 0xd7c <vfprintf+0x348>
     d5a:	a0 fe       	sbrs	r10, 0
     d5c:	06 c0       	rjmp	.+12     	; 0xd6a <vfprintf+0x336>
     d5e:	b2 14       	cp	r11, r2
     d60:	88 f4       	brcc	.+34     	; 0xd84 <vfprintf+0x350>
     d62:	28 0c       	add	r2, r8
     d64:	92 2c       	mov	r9, r2
     d66:	9b 18       	sub	r9, r11
     d68:	0e c0       	rjmp	.+28     	; 0xd86 <vfprintf+0x352>
     d6a:	b2 14       	cp	r11, r2
     d6c:	60 f4       	brcc	.+24     	; 0xd86 <vfprintf+0x352>
     d6e:	b6 01       	movw	r22, r12
     d70:	80 e2       	ldi	r24, 0x20	; 32
     d72:	90 e0       	ldi	r25, 0x00	; 0
     d74:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     d78:	b3 94       	inc	r11
     d7a:	f7 cf       	rjmp	.-18     	; 0xd6a <vfprintf+0x336>
     d7c:	b2 14       	cp	r11, r2
     d7e:	18 f4       	brcc	.+6      	; 0xd86 <vfprintf+0x352>
     d80:	2b 18       	sub	r2, r11
     d82:	02 c0       	rjmp	.+4      	; 0xd88 <vfprintf+0x354>
     d84:	98 2c       	mov	r9, r8
     d86:	21 2c       	mov	r2, r1
     d88:	a4 fe       	sbrs	r10, 4
     d8a:	10 c0       	rjmp	.+32     	; 0xdac <vfprintf+0x378>
     d8c:	b6 01       	movw	r22, r12
     d8e:	80 e3       	ldi	r24, 0x30	; 48
     d90:	90 e0       	ldi	r25, 0x00	; 0
     d92:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     d96:	a2 fe       	sbrs	r10, 2
     d98:	17 c0       	rjmp	.+46     	; 0xdc8 <vfprintf+0x394>
     d9a:	a1 fc       	sbrc	r10, 1
     d9c:	03 c0       	rjmp	.+6      	; 0xda4 <vfprintf+0x370>
     d9e:	88 e7       	ldi	r24, 0x78	; 120
     da0:	90 e0       	ldi	r25, 0x00	; 0
     da2:	02 c0       	rjmp	.+4      	; 0xda8 <vfprintf+0x374>
     da4:	88 e5       	ldi	r24, 0x58	; 88
     da6:	90 e0       	ldi	r25, 0x00	; 0
     da8:	b6 01       	movw	r22, r12
     daa:	0c c0       	rjmp	.+24     	; 0xdc4 <vfprintf+0x390>
     dac:	8a 2d       	mov	r24, r10
     dae:	86 78       	andi	r24, 0x86	; 134
     db0:	59 f0       	breq	.+22     	; 0xdc8 <vfprintf+0x394>
     db2:	a1 fe       	sbrs	r10, 1
     db4:	02 c0       	rjmp	.+4      	; 0xdba <vfprintf+0x386>
     db6:	8b e2       	ldi	r24, 0x2B	; 43
     db8:	01 c0       	rjmp	.+2      	; 0xdbc <vfprintf+0x388>
     dba:	80 e2       	ldi	r24, 0x20	; 32
     dbc:	a7 fc       	sbrc	r10, 7
     dbe:	8d e2       	ldi	r24, 0x2D	; 45
     dc0:	b6 01       	movw	r22, r12
     dc2:	90 e0       	ldi	r25, 0x00	; 0
     dc4:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     dc8:	89 14       	cp	r8, r9
     dca:	38 f4       	brcc	.+14     	; 0xdda <vfprintf+0x3a6>
     dcc:	b6 01       	movw	r22, r12
     dce:	80 e3       	ldi	r24, 0x30	; 48
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     dd6:	9a 94       	dec	r9
     dd8:	f7 cf       	rjmp	.-18     	; 0xdc8 <vfprintf+0x394>
     dda:	8a 94       	dec	r8
     ddc:	f3 01       	movw	r30, r6
     dde:	e8 0d       	add	r30, r8
     de0:	f1 1d       	adc	r31, r1
     de2:	80 81       	ld	r24, Z
     de4:	b6 01       	movw	r22, r12
     de6:	90 e0       	ldi	r25, 0x00	; 0
     de8:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     dec:	81 10       	cpse	r8, r1
     dee:	f5 cf       	rjmp	.-22     	; 0xdda <vfprintf+0x3a6>
     df0:	22 20       	and	r2, r2
     df2:	09 f4       	brne	.+2      	; 0xdf6 <vfprintf+0x3c2>
     df4:	42 ce       	rjmp	.-892    	; 0xa7a <vfprintf+0x46>
     df6:	b6 01       	movw	r22, r12
     df8:	80 e2       	ldi	r24, 0x20	; 32
     dfa:	90 e0       	ldi	r25, 0x00	; 0
     dfc:	0e 94 78 08 	call	0x10f0	; 0x10f0 <fputc>
     e00:	2a 94       	dec	r2
     e02:	f6 cf       	rjmp	.-20     	; 0xdf0 <vfprintf+0x3bc>
     e04:	f6 01       	movw	r30, r12
     e06:	86 81       	ldd	r24, Z+6	; 0x06
     e08:	97 81       	ldd	r25, Z+7	; 0x07
     e0a:	02 c0       	rjmp	.+4      	; 0xe10 <vfprintf+0x3dc>
     e0c:	8f ef       	ldi	r24, 0xFF	; 255
     e0e:	9f ef       	ldi	r25, 0xFF	; 255
     e10:	2b 96       	adiw	r28, 0x0b	; 11
     e12:	cd bf       	out	0x3d, r28	; 61
     e14:	de bf       	out	0x3e, r29	; 62
     e16:	df 91       	pop	r29
     e18:	cf 91       	pop	r28
     e1a:	1f 91       	pop	r17
     e1c:	0f 91       	pop	r16
     e1e:	ff 90       	pop	r15
     e20:	ef 90       	pop	r14
     e22:	df 90       	pop	r13
     e24:	cf 90       	pop	r12
     e26:	bf 90       	pop	r11
     e28:	af 90       	pop	r10
     e2a:	9f 90       	pop	r9
     e2c:	8f 90       	pop	r8
     e2e:	7f 90       	pop	r7
     e30:	6f 90       	pop	r6
     e32:	5f 90       	pop	r5
     e34:	4f 90       	pop	r4
     e36:	3f 90       	pop	r3
     e38:	2f 90       	pop	r2
     e3a:	08 95       	ret

00000e3c <calloc>:
     e3c:	0f 93       	push	r16
     e3e:	1f 93       	push	r17
     e40:	cf 93       	push	r28
     e42:	df 93       	push	r29
     e44:	86 9f       	mul	r24, r22
     e46:	80 01       	movw	r16, r0
     e48:	87 9f       	mul	r24, r23
     e4a:	10 0d       	add	r17, r0
     e4c:	96 9f       	mul	r25, r22
     e4e:	10 0d       	add	r17, r0
     e50:	11 24       	eor	r1, r1
     e52:	c8 01       	movw	r24, r16
     e54:	0e 94 3a 07 	call	0xe74	; 0xe74 <malloc>
     e58:	ec 01       	movw	r28, r24
     e5a:	00 97       	sbiw	r24, 0x00	; 0
     e5c:	29 f0       	breq	.+10     	; 0xe68 <calloc+0x2c>
     e5e:	a8 01       	movw	r20, r16
     e60:	60 e0       	ldi	r22, 0x00	; 0
     e62:	70 e0       	ldi	r23, 0x00	; 0
     e64:	0e 94 66 08 	call	0x10cc	; 0x10cc <memset>
     e68:	ce 01       	movw	r24, r28
     e6a:	df 91       	pop	r29
     e6c:	cf 91       	pop	r28
     e6e:	1f 91       	pop	r17
     e70:	0f 91       	pop	r16
     e72:	08 95       	ret

00000e74 <malloc>:
     e74:	0f 93       	push	r16
     e76:	1f 93       	push	r17
     e78:	cf 93       	push	r28
     e7a:	df 93       	push	r29
     e7c:	82 30       	cpi	r24, 0x02	; 2
     e7e:	91 05       	cpc	r25, r1
     e80:	10 f4       	brcc	.+4      	; 0xe86 <malloc+0x12>
     e82:	82 e0       	ldi	r24, 0x02	; 2
     e84:	90 e0       	ldi	r25, 0x00	; 0
     e86:	e0 91 1e 20 	lds	r30, 0x201E	; 0x80201e <__flp>
     e8a:	f0 91 1f 20 	lds	r31, 0x201F	; 0x80201f <__flp+0x1>
     e8e:	20 e0       	ldi	r18, 0x00	; 0
     e90:	30 e0       	ldi	r19, 0x00	; 0
     e92:	a0 e0       	ldi	r26, 0x00	; 0
     e94:	b0 e0       	ldi	r27, 0x00	; 0
     e96:	30 97       	sbiw	r30, 0x00	; 0
     e98:	19 f1       	breq	.+70     	; 0xee0 <malloc+0x6c>
     e9a:	40 81       	ld	r20, Z
     e9c:	51 81       	ldd	r21, Z+1	; 0x01
     e9e:	02 81       	ldd	r16, Z+2	; 0x02
     ea0:	13 81       	ldd	r17, Z+3	; 0x03
     ea2:	48 17       	cp	r20, r24
     ea4:	59 07       	cpc	r21, r25
     ea6:	c8 f0       	brcs	.+50     	; 0xeda <malloc+0x66>
     ea8:	84 17       	cp	r24, r20
     eaa:	95 07       	cpc	r25, r21
     eac:	69 f4       	brne	.+26     	; 0xec8 <malloc+0x54>
     eae:	10 97       	sbiw	r26, 0x00	; 0
     eb0:	31 f0       	breq	.+12     	; 0xebe <malloc+0x4a>
     eb2:	12 96       	adiw	r26, 0x02	; 2
     eb4:	0c 93       	st	X, r16
     eb6:	12 97       	sbiw	r26, 0x02	; 2
     eb8:	13 96       	adiw	r26, 0x03	; 3
     eba:	1c 93       	st	X, r17
     ebc:	27 c0       	rjmp	.+78     	; 0xf0c <malloc+0x98>
     ebe:	00 93 1e 20 	sts	0x201E, r16	; 0x80201e <__flp>
     ec2:	10 93 1f 20 	sts	0x201F, r17	; 0x80201f <__flp+0x1>
     ec6:	22 c0       	rjmp	.+68     	; 0xf0c <malloc+0x98>
     ec8:	21 15       	cp	r18, r1
     eca:	31 05       	cpc	r19, r1
     ecc:	19 f0       	breq	.+6      	; 0xed4 <malloc+0x60>
     ece:	42 17       	cp	r20, r18
     ed0:	53 07       	cpc	r21, r19
     ed2:	18 f4       	brcc	.+6      	; 0xeda <malloc+0x66>
     ed4:	9a 01       	movw	r18, r20
     ed6:	bd 01       	movw	r22, r26
     ed8:	ef 01       	movw	r28, r30
     eda:	df 01       	movw	r26, r30
     edc:	f8 01       	movw	r30, r16
     ede:	db cf       	rjmp	.-74     	; 0xe96 <malloc+0x22>
     ee0:	21 15       	cp	r18, r1
     ee2:	31 05       	cpc	r19, r1
     ee4:	f9 f0       	breq	.+62     	; 0xf24 <malloc+0xb0>
     ee6:	28 1b       	sub	r18, r24
     ee8:	39 0b       	sbc	r19, r25
     eea:	24 30       	cpi	r18, 0x04	; 4
     eec:	31 05       	cpc	r19, r1
     eee:	80 f4       	brcc	.+32     	; 0xf10 <malloc+0x9c>
     ef0:	8a 81       	ldd	r24, Y+2	; 0x02
     ef2:	9b 81       	ldd	r25, Y+3	; 0x03
     ef4:	61 15       	cp	r22, r1
     ef6:	71 05       	cpc	r23, r1
     ef8:	21 f0       	breq	.+8      	; 0xf02 <malloc+0x8e>
     efa:	fb 01       	movw	r30, r22
     efc:	82 83       	std	Z+2, r24	; 0x02
     efe:	93 83       	std	Z+3, r25	; 0x03
     f00:	04 c0       	rjmp	.+8      	; 0xf0a <malloc+0x96>
     f02:	80 93 1e 20 	sts	0x201E, r24	; 0x80201e <__flp>
     f06:	90 93 1f 20 	sts	0x201F, r25	; 0x80201f <__flp+0x1>
     f0a:	fe 01       	movw	r30, r28
     f0c:	32 96       	adiw	r30, 0x02	; 2
     f0e:	44 c0       	rjmp	.+136    	; 0xf98 <malloc+0x124>
     f10:	fe 01       	movw	r30, r28
     f12:	e2 0f       	add	r30, r18
     f14:	f3 1f       	adc	r31, r19
     f16:	81 93       	st	Z+, r24
     f18:	91 93       	st	Z+, r25
     f1a:	22 50       	subi	r18, 0x02	; 2
     f1c:	31 09       	sbc	r19, r1
     f1e:	28 83       	st	Y, r18
     f20:	39 83       	std	Y+1, r19	; 0x01
     f22:	3a c0       	rjmp	.+116    	; 0xf98 <malloc+0x124>
     f24:	20 91 1c 20 	lds	r18, 0x201C	; 0x80201c <__brkval>
     f28:	30 91 1d 20 	lds	r19, 0x201D	; 0x80201d <__brkval+0x1>
     f2c:	23 2b       	or	r18, r19
     f2e:	41 f4       	brne	.+16     	; 0xf40 <malloc+0xcc>
     f30:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
     f34:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
     f38:	20 93 1c 20 	sts	0x201C, r18	; 0x80201c <__brkval>
     f3c:	30 93 1d 20 	sts	0x201D, r19	; 0x80201d <__brkval+0x1>
     f40:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__DATA_REGION_ORIGIN__>
     f44:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__DATA_REGION_ORIGIN__+0x1>
     f48:	21 15       	cp	r18, r1
     f4a:	31 05       	cpc	r19, r1
     f4c:	41 f4       	brne	.+16     	; 0xf5e <malloc+0xea>
     f4e:	2d b7       	in	r18, 0x3d	; 61
     f50:	3e b7       	in	r19, 0x3e	; 62
     f52:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
     f56:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
     f5a:	24 1b       	sub	r18, r20
     f5c:	35 0b       	sbc	r19, r21
     f5e:	e0 91 1c 20 	lds	r30, 0x201C	; 0x80201c <__brkval>
     f62:	f0 91 1d 20 	lds	r31, 0x201D	; 0x80201d <__brkval+0x1>
     f66:	e2 17       	cp	r30, r18
     f68:	f3 07       	cpc	r31, r19
     f6a:	a0 f4       	brcc	.+40     	; 0xf94 <malloc+0x120>
     f6c:	2e 1b       	sub	r18, r30
     f6e:	3f 0b       	sbc	r19, r31
     f70:	28 17       	cp	r18, r24
     f72:	39 07       	cpc	r19, r25
     f74:	78 f0       	brcs	.+30     	; 0xf94 <malloc+0x120>
     f76:	ac 01       	movw	r20, r24
     f78:	4e 5f       	subi	r20, 0xFE	; 254
     f7a:	5f 4f       	sbci	r21, 0xFF	; 255
     f7c:	24 17       	cp	r18, r20
     f7e:	35 07       	cpc	r19, r21
     f80:	48 f0       	brcs	.+18     	; 0xf94 <malloc+0x120>
     f82:	4e 0f       	add	r20, r30
     f84:	5f 1f       	adc	r21, r31
     f86:	40 93 1c 20 	sts	0x201C, r20	; 0x80201c <__brkval>
     f8a:	50 93 1d 20 	sts	0x201D, r21	; 0x80201d <__brkval+0x1>
     f8e:	81 93       	st	Z+, r24
     f90:	91 93       	st	Z+, r25
     f92:	02 c0       	rjmp	.+4      	; 0xf98 <malloc+0x124>
     f94:	e0 e0       	ldi	r30, 0x00	; 0
     f96:	f0 e0       	ldi	r31, 0x00	; 0
     f98:	cf 01       	movw	r24, r30
     f9a:	df 91       	pop	r29
     f9c:	cf 91       	pop	r28
     f9e:	1f 91       	pop	r17
     fa0:	0f 91       	pop	r16
     fa2:	08 95       	ret

00000fa4 <free>:
     fa4:	cf 93       	push	r28
     fa6:	df 93       	push	r29
     fa8:	00 97       	sbiw	r24, 0x00	; 0
     faa:	09 f4       	brne	.+2      	; 0xfae <free+0xa>
     fac:	81 c0       	rjmp	.+258    	; 0x10b0 <free+0x10c>
     fae:	fc 01       	movw	r30, r24
     fb0:	32 97       	sbiw	r30, 0x02	; 2
     fb2:	12 82       	std	Z+2, r1	; 0x02
     fb4:	13 82       	std	Z+3, r1	; 0x03
     fb6:	a0 91 1e 20 	lds	r26, 0x201E	; 0x80201e <__flp>
     fba:	b0 91 1f 20 	lds	r27, 0x201F	; 0x80201f <__flp+0x1>
     fbe:	10 97       	sbiw	r26, 0x00	; 0
     fc0:	81 f4       	brne	.+32     	; 0xfe2 <free+0x3e>
     fc2:	20 81       	ld	r18, Z
     fc4:	31 81       	ldd	r19, Z+1	; 0x01
     fc6:	82 0f       	add	r24, r18
     fc8:	93 1f       	adc	r25, r19
     fca:	20 91 1c 20 	lds	r18, 0x201C	; 0x80201c <__brkval>
     fce:	30 91 1d 20 	lds	r19, 0x201D	; 0x80201d <__brkval+0x1>
     fd2:	28 17       	cp	r18, r24
     fd4:	39 07       	cpc	r19, r25
     fd6:	51 f5       	brne	.+84     	; 0x102c <free+0x88>
     fd8:	e0 93 1c 20 	sts	0x201C, r30	; 0x80201c <__brkval>
     fdc:	f0 93 1d 20 	sts	0x201D, r31	; 0x80201d <__brkval+0x1>
     fe0:	67 c0       	rjmp	.+206    	; 0x10b0 <free+0x10c>
     fe2:	ed 01       	movw	r28, r26
     fe4:	20 e0       	ldi	r18, 0x00	; 0
     fe6:	30 e0       	ldi	r19, 0x00	; 0
     fe8:	ce 17       	cp	r28, r30
     fea:	df 07       	cpc	r29, r31
     fec:	40 f4       	brcc	.+16     	; 0xffe <free+0x5a>
     fee:	4a 81       	ldd	r20, Y+2	; 0x02
     ff0:	5b 81       	ldd	r21, Y+3	; 0x03
     ff2:	9e 01       	movw	r18, r28
     ff4:	41 15       	cp	r20, r1
     ff6:	51 05       	cpc	r21, r1
     ff8:	f1 f0       	breq	.+60     	; 0x1036 <free+0x92>
     ffa:	ea 01       	movw	r28, r20
     ffc:	f5 cf       	rjmp	.-22     	; 0xfe8 <free+0x44>
     ffe:	c2 83       	std	Z+2, r28	; 0x02
    1000:	d3 83       	std	Z+3, r29	; 0x03
    1002:	40 81       	ld	r20, Z
    1004:	51 81       	ldd	r21, Z+1	; 0x01
    1006:	84 0f       	add	r24, r20
    1008:	95 1f       	adc	r25, r21
    100a:	c8 17       	cp	r28, r24
    100c:	d9 07       	cpc	r29, r25
    100e:	59 f4       	brne	.+22     	; 0x1026 <free+0x82>
    1010:	88 81       	ld	r24, Y
    1012:	99 81       	ldd	r25, Y+1	; 0x01
    1014:	84 0f       	add	r24, r20
    1016:	95 1f       	adc	r25, r21
    1018:	02 96       	adiw	r24, 0x02	; 2
    101a:	80 83       	st	Z, r24
    101c:	91 83       	std	Z+1, r25	; 0x01
    101e:	8a 81       	ldd	r24, Y+2	; 0x02
    1020:	9b 81       	ldd	r25, Y+3	; 0x03
    1022:	82 83       	std	Z+2, r24	; 0x02
    1024:	93 83       	std	Z+3, r25	; 0x03
    1026:	21 15       	cp	r18, r1
    1028:	31 05       	cpc	r19, r1
    102a:	29 f4       	brne	.+10     	; 0x1036 <free+0x92>
    102c:	e0 93 1e 20 	sts	0x201E, r30	; 0x80201e <__flp>
    1030:	f0 93 1f 20 	sts	0x201F, r31	; 0x80201f <__flp+0x1>
    1034:	3d c0       	rjmp	.+122    	; 0x10b0 <free+0x10c>
    1036:	e9 01       	movw	r28, r18
    1038:	ea 83       	std	Y+2, r30	; 0x02
    103a:	fb 83       	std	Y+3, r31	; 0x03
    103c:	49 91       	ld	r20, Y+
    103e:	59 91       	ld	r21, Y+
    1040:	c4 0f       	add	r28, r20
    1042:	d5 1f       	adc	r29, r21
    1044:	ec 17       	cp	r30, r28
    1046:	fd 07       	cpc	r31, r29
    1048:	61 f4       	brne	.+24     	; 0x1062 <free+0xbe>
    104a:	80 81       	ld	r24, Z
    104c:	91 81       	ldd	r25, Z+1	; 0x01
    104e:	84 0f       	add	r24, r20
    1050:	95 1f       	adc	r25, r21
    1052:	02 96       	adiw	r24, 0x02	; 2
    1054:	e9 01       	movw	r28, r18
    1056:	88 83       	st	Y, r24
    1058:	99 83       	std	Y+1, r25	; 0x01
    105a:	82 81       	ldd	r24, Z+2	; 0x02
    105c:	93 81       	ldd	r25, Z+3	; 0x03
    105e:	8a 83       	std	Y+2, r24	; 0x02
    1060:	9b 83       	std	Y+3, r25	; 0x03
    1062:	e0 e0       	ldi	r30, 0x00	; 0
    1064:	f0 e0       	ldi	r31, 0x00	; 0
    1066:	12 96       	adiw	r26, 0x02	; 2
    1068:	8d 91       	ld	r24, X+
    106a:	9c 91       	ld	r25, X
    106c:	13 97       	sbiw	r26, 0x03	; 3
    106e:	00 97       	sbiw	r24, 0x00	; 0
    1070:	19 f0       	breq	.+6      	; 0x1078 <free+0xd4>
    1072:	fd 01       	movw	r30, r26
    1074:	dc 01       	movw	r26, r24
    1076:	f7 cf       	rjmp	.-18     	; 0x1066 <free+0xc2>
    1078:	8d 91       	ld	r24, X+
    107a:	9c 91       	ld	r25, X
    107c:	11 97       	sbiw	r26, 0x01	; 1
    107e:	9d 01       	movw	r18, r26
    1080:	2e 5f       	subi	r18, 0xFE	; 254
    1082:	3f 4f       	sbci	r19, 0xFF	; 255
    1084:	82 0f       	add	r24, r18
    1086:	93 1f       	adc	r25, r19
    1088:	20 91 1c 20 	lds	r18, 0x201C	; 0x80201c <__brkval>
    108c:	30 91 1d 20 	lds	r19, 0x201D	; 0x80201d <__brkval+0x1>
    1090:	28 17       	cp	r18, r24
    1092:	39 07       	cpc	r19, r25
    1094:	69 f4       	brne	.+26     	; 0x10b0 <free+0x10c>
    1096:	30 97       	sbiw	r30, 0x00	; 0
    1098:	29 f4       	brne	.+10     	; 0x10a4 <free+0x100>
    109a:	10 92 1e 20 	sts	0x201E, r1	; 0x80201e <__flp>
    109e:	10 92 1f 20 	sts	0x201F, r1	; 0x80201f <__flp+0x1>
    10a2:	02 c0       	rjmp	.+4      	; 0x10a8 <free+0x104>
    10a4:	12 82       	std	Z+2, r1	; 0x02
    10a6:	13 82       	std	Z+3, r1	; 0x03
    10a8:	a0 93 1c 20 	sts	0x201C, r26	; 0x80201c <__brkval>
    10ac:	b0 93 1d 20 	sts	0x201D, r27	; 0x80201d <__brkval+0x1>
    10b0:	df 91       	pop	r29
    10b2:	cf 91       	pop	r28
    10b4:	08 95       	ret

000010b6 <strnlen_P>:
    10b6:	fc 01       	movw	r30, r24
    10b8:	05 90       	lpm	r0, Z+
    10ba:	61 50       	subi	r22, 0x01	; 1
    10bc:	70 40       	sbci	r23, 0x00	; 0
    10be:	01 10       	cpse	r0, r1
    10c0:	d8 f7       	brcc	.-10     	; 0x10b8 <strnlen_P+0x2>
    10c2:	80 95       	com	r24
    10c4:	90 95       	com	r25
    10c6:	8e 0f       	add	r24, r30
    10c8:	9f 1f       	adc	r25, r31
    10ca:	08 95       	ret

000010cc <memset>:
    10cc:	dc 01       	movw	r26, r24
    10ce:	01 c0       	rjmp	.+2      	; 0x10d2 <memset+0x6>
    10d0:	6d 93       	st	X+, r22
    10d2:	41 50       	subi	r20, 0x01	; 1
    10d4:	50 40       	sbci	r21, 0x00	; 0
    10d6:	e0 f7       	brcc	.-8      	; 0x10d0 <memset+0x4>
    10d8:	08 95       	ret

000010da <strnlen>:
    10da:	fc 01       	movw	r30, r24
    10dc:	61 50       	subi	r22, 0x01	; 1
    10de:	70 40       	sbci	r23, 0x00	; 0
    10e0:	01 90       	ld	r0, Z+
    10e2:	01 10       	cpse	r0, r1
    10e4:	d8 f7       	brcc	.-10     	; 0x10dc <strnlen+0x2>
    10e6:	80 95       	com	r24
    10e8:	90 95       	com	r25
    10ea:	8e 0f       	add	r24, r30
    10ec:	9f 1f       	adc	r25, r31
    10ee:	08 95       	ret

000010f0 <fputc>:
    10f0:	0f 93       	push	r16
    10f2:	1f 93       	push	r17
    10f4:	cf 93       	push	r28
    10f6:	df 93       	push	r29
    10f8:	fb 01       	movw	r30, r22
    10fa:	23 81       	ldd	r18, Z+3	; 0x03
    10fc:	21 fd       	sbrc	r18, 1
    10fe:	03 c0       	rjmp	.+6      	; 0x1106 <fputc+0x16>
    1100:	8f ef       	ldi	r24, 0xFF	; 255
    1102:	9f ef       	ldi	r25, 0xFF	; 255
    1104:	2c c0       	rjmp	.+88     	; 0x115e <fputc+0x6e>
    1106:	22 ff       	sbrs	r18, 2
    1108:	16 c0       	rjmp	.+44     	; 0x1136 <fputc+0x46>
    110a:	46 81       	ldd	r20, Z+6	; 0x06
    110c:	57 81       	ldd	r21, Z+7	; 0x07
    110e:	24 81       	ldd	r18, Z+4	; 0x04
    1110:	35 81       	ldd	r19, Z+5	; 0x05
    1112:	42 17       	cp	r20, r18
    1114:	53 07       	cpc	r21, r19
    1116:	44 f4       	brge	.+16     	; 0x1128 <fputc+0x38>
    1118:	a0 81       	ld	r26, Z
    111a:	b1 81       	ldd	r27, Z+1	; 0x01
    111c:	9d 01       	movw	r18, r26
    111e:	2f 5f       	subi	r18, 0xFF	; 255
    1120:	3f 4f       	sbci	r19, 0xFF	; 255
    1122:	20 83       	st	Z, r18
    1124:	31 83       	std	Z+1, r19	; 0x01
    1126:	8c 93       	st	X, r24
    1128:	26 81       	ldd	r18, Z+6	; 0x06
    112a:	37 81       	ldd	r19, Z+7	; 0x07
    112c:	2f 5f       	subi	r18, 0xFF	; 255
    112e:	3f 4f       	sbci	r19, 0xFF	; 255
    1130:	26 83       	std	Z+6, r18	; 0x06
    1132:	37 83       	std	Z+7, r19	; 0x07
    1134:	14 c0       	rjmp	.+40     	; 0x115e <fputc+0x6e>
    1136:	8b 01       	movw	r16, r22
    1138:	ec 01       	movw	r28, r24
    113a:	fb 01       	movw	r30, r22
    113c:	00 84       	ldd	r0, Z+8	; 0x08
    113e:	f1 85       	ldd	r31, Z+9	; 0x09
    1140:	e0 2d       	mov	r30, r0
    1142:	19 95       	eicall
    1144:	89 2b       	or	r24, r25
    1146:	e1 f6       	brne	.-72     	; 0x1100 <fputc+0x10>
    1148:	d8 01       	movw	r26, r16
    114a:	16 96       	adiw	r26, 0x06	; 6
    114c:	8d 91       	ld	r24, X+
    114e:	9c 91       	ld	r25, X
    1150:	17 97       	sbiw	r26, 0x07	; 7
    1152:	01 96       	adiw	r24, 0x01	; 1
    1154:	16 96       	adiw	r26, 0x06	; 6
    1156:	8d 93       	st	X+, r24
    1158:	9c 93       	st	X, r25
    115a:	17 97       	sbiw	r26, 0x07	; 7
    115c:	ce 01       	movw	r24, r28
    115e:	df 91       	pop	r29
    1160:	cf 91       	pop	r28
    1162:	1f 91       	pop	r17
    1164:	0f 91       	pop	r16
    1166:	08 95       	ret

00001168 <__ultoa_invert>:
    1168:	fa 01       	movw	r30, r20
    116a:	aa 27       	eor	r26, r26
    116c:	28 30       	cpi	r18, 0x08	; 8
    116e:	51 f1       	breq	.+84     	; 0x11c4 <__ultoa_invert+0x5c>
    1170:	20 31       	cpi	r18, 0x10	; 16
    1172:	81 f1       	breq	.+96     	; 0x11d4 <__ultoa_invert+0x6c>
    1174:	e8 94       	clt
    1176:	6f 93       	push	r22
    1178:	6e 7f       	andi	r22, 0xFE	; 254
    117a:	6e 5f       	subi	r22, 0xFE	; 254
    117c:	7f 4f       	sbci	r23, 0xFF	; 255
    117e:	8f 4f       	sbci	r24, 0xFF	; 255
    1180:	9f 4f       	sbci	r25, 0xFF	; 255
    1182:	af 4f       	sbci	r26, 0xFF	; 255
    1184:	b1 e0       	ldi	r27, 0x01	; 1
    1186:	3e d0       	rcall	.+124    	; 0x1204 <__ultoa_invert+0x9c>
    1188:	b4 e0       	ldi	r27, 0x04	; 4
    118a:	3c d0       	rcall	.+120    	; 0x1204 <__ultoa_invert+0x9c>
    118c:	67 0f       	add	r22, r23
    118e:	78 1f       	adc	r23, r24
    1190:	89 1f       	adc	r24, r25
    1192:	9a 1f       	adc	r25, r26
    1194:	a1 1d       	adc	r26, r1
    1196:	68 0f       	add	r22, r24
    1198:	79 1f       	adc	r23, r25
    119a:	8a 1f       	adc	r24, r26
    119c:	91 1d       	adc	r25, r1
    119e:	a1 1d       	adc	r26, r1
    11a0:	6a 0f       	add	r22, r26
    11a2:	71 1d       	adc	r23, r1
    11a4:	81 1d       	adc	r24, r1
    11a6:	91 1d       	adc	r25, r1
    11a8:	a1 1d       	adc	r26, r1
    11aa:	20 d0       	rcall	.+64     	; 0x11ec <__ultoa_invert+0x84>
    11ac:	09 f4       	brne	.+2      	; 0x11b0 <__ultoa_invert+0x48>
    11ae:	68 94       	set
    11b0:	3f 91       	pop	r19
    11b2:	2a e0       	ldi	r18, 0x0A	; 10
    11b4:	26 9f       	mul	r18, r22
    11b6:	11 24       	eor	r1, r1
    11b8:	30 19       	sub	r19, r0
    11ba:	30 5d       	subi	r19, 0xD0	; 208
    11bc:	31 93       	st	Z+, r19
    11be:	de f6       	brtc	.-74     	; 0x1176 <__ultoa_invert+0xe>
    11c0:	cf 01       	movw	r24, r30
    11c2:	08 95       	ret
    11c4:	46 2f       	mov	r20, r22
    11c6:	47 70       	andi	r20, 0x07	; 7
    11c8:	40 5d       	subi	r20, 0xD0	; 208
    11ca:	41 93       	st	Z+, r20
    11cc:	b3 e0       	ldi	r27, 0x03	; 3
    11ce:	0f d0       	rcall	.+30     	; 0x11ee <__ultoa_invert+0x86>
    11d0:	c9 f7       	brne	.-14     	; 0x11c4 <__ultoa_invert+0x5c>
    11d2:	f6 cf       	rjmp	.-20     	; 0x11c0 <__ultoa_invert+0x58>
    11d4:	46 2f       	mov	r20, r22
    11d6:	4f 70       	andi	r20, 0x0F	; 15
    11d8:	40 5d       	subi	r20, 0xD0	; 208
    11da:	4a 33       	cpi	r20, 0x3A	; 58
    11dc:	18 f0       	brcs	.+6      	; 0x11e4 <__ultoa_invert+0x7c>
    11de:	49 5d       	subi	r20, 0xD9	; 217
    11e0:	31 fd       	sbrc	r19, 1
    11e2:	40 52       	subi	r20, 0x20	; 32
    11e4:	41 93       	st	Z+, r20
    11e6:	02 d0       	rcall	.+4      	; 0x11ec <__ultoa_invert+0x84>
    11e8:	a9 f7       	brne	.-22     	; 0x11d4 <__ultoa_invert+0x6c>
    11ea:	ea cf       	rjmp	.-44     	; 0x11c0 <__ultoa_invert+0x58>
    11ec:	b4 e0       	ldi	r27, 0x04	; 4
    11ee:	a6 95       	lsr	r26
    11f0:	97 95       	ror	r25
    11f2:	87 95       	ror	r24
    11f4:	77 95       	ror	r23
    11f6:	67 95       	ror	r22
    11f8:	ba 95       	dec	r27
    11fa:	c9 f7       	brne	.-14     	; 0x11ee <__ultoa_invert+0x86>
    11fc:	00 97       	sbiw	r24, 0x00	; 0
    11fe:	61 05       	cpc	r22, r1
    1200:	71 05       	cpc	r23, r1
    1202:	08 95       	ret
    1204:	9b 01       	movw	r18, r22
    1206:	ac 01       	movw	r20, r24
    1208:	0a 2e       	mov	r0, r26
    120a:	06 94       	lsr	r0
    120c:	57 95       	ror	r21
    120e:	47 95       	ror	r20
    1210:	37 95       	ror	r19
    1212:	27 95       	ror	r18
    1214:	ba 95       	dec	r27
    1216:	c9 f7       	brne	.-14     	; 0x120a <__ultoa_invert+0xa2>
    1218:	62 0f       	add	r22, r18
    121a:	73 1f       	adc	r23, r19
    121c:	84 1f       	adc	r24, r20
    121e:	95 1f       	adc	r25, r21
    1220:	a0 1d       	adc	r26, r0
    1222:	08 95       	ret

00001224 <_exit>:
    1224:	f8 94       	cli

00001226 <__stop_program>:
    1226:	ff cf       	rjmp	.-2      	; 0x1226 <__stop_program>
