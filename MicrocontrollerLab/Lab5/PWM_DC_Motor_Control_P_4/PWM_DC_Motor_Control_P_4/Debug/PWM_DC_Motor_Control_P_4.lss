
PWM_DC_Motor_Control_P_4.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  0000068c  00000720  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000068c  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010e  0080010e  0000072e  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000072e  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000760  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  0000079c  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000090a  00000000  00000000  000007d4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 0000078c  00000000  00000000  000010de  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000356  00000000  00000000  0000186a  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000005c  00000000  00000000  00001bc0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000435  00000000  00000000  00001c1c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000167  00000000  00000000  00002051  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  000021b8  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	ec e8       	ldi	r30, 0x8C	; 140
  48:	f6 e0       	ldi	r31, 0x06	; 6
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	ae 30       	cpi	r26, 0x0E	; 14
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	ae e0       	ldi	r26, 0x0E	; 14
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a4 31       	cpi	r26, 0x14	; 20
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	12 d0       	rcall	.+36     	; 0x8c <main>
  68:	0f c3       	rjmp	.+1566   	; 0x688 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <uart_putchar>:
unsigned char spi_write_read(unsigned char spi_data)
{
	SPDR=spi_data;
	while ((SPSR & (1<<SPIF))==0); // Wait until the data transfer is complete
	return SPDR;
}
  6c:	cf 93       	push	r28
  6e:	c8 2f       	mov	r28, r24
  70:	8a 30       	cpi	r24, 0x0A	; 10
  72:	11 f4       	brne	.+4      	; 0x78 <uart_putchar+0xc>
  74:	8d e0       	ldi	r24, 0x0D	; 13
  76:	fa df       	rcall	.-12     	; 0x6c <uart_putchar>
  78:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fe0c0>
  7c:	85 ff       	sbrs	r24, 5
  7e:	fc cf       	rjmp	.-8      	; 0x78 <uart_putchar+0xc>
  80:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fe0c6>
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	cf 91       	pop	r28
  8a:	08 95       	ret

0000008c <main>:
	float	Control, Control_HB, Max_Voltage, Kp;
	float	adc_input_v;
	float	Error;

	//USART Setup
	UBRR0H = MYUBRR >> 8;
  8c:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fe0c5>
	UBRR0L = MYUBRR;
  90:	87 e6       	ldi	r24, 0x67	; 103
  92:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fe0c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  96:	88 e1       	ldi	r24, 0x18	; 24
  98:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fe0c1>
	stdout = &mystdout; //Required for printf init
  9c:	80 e0       	ldi	r24, 0x00	; 0
  9e:	91 e0       	ldi	r25, 0x01	; 1
  a0:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
  a4:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>


	// AD initialization
	ADMUX  = 0b00000100; //Input on AD Channel 4
  a8:	84 e0       	ldi	r24, 0x04	; 4
  aa:	80 93 7c 00 	sts	0x007C, r24	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fe07c>
	ADCSRA = 0b10000111; // ADC on, /128 for a 16 MHz clock, interrupt off
  ae:	87 e8       	ldi	r24, 0x87	; 135
  b0:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fe07a>

	DDRB=0b00101110; //Set Output Ports for the SPI Interface and PWM
  b4:	8e e2       	ldi	r24, 0x2E	; 46
  b6:	84 b9       	out	0x04, r24	; 4
	DDRD=0b10000010; //Set Output Ports for the Chip select and USART
  b8:	82 e8       	ldi	r24, 0x82	; 130
  ba:	8a b9       	out	0x0a, r24	; 10
	DDRC=0b00100011; //Set Output Ports for the LED and H-Bridge direction
  bc:	83 e2       	ldi	r24, 0x23	; 35
  be:	87 b9       	out	0x07, r24	; 7
	//Fast PWM
	//ICR1=1600 defines 10,000Hz PWM (clock frequency/prescaler)/(target frequency)
	//for a 16 MHz clock frequency, a prescaler of 1 and a target frequency of 10,000 Hz
	//Start timer with prescaler 1

	ICR1=1600; // PWM Count = Clock Speed / (Target Frequency * prescaler) = 16,000,000/(10000*1) = 1600
  c0:	80 e4       	ldi	r24, 0x40	; 64
  c2:	96 e0       	ldi	r25, 0x06	; 6
  c4:	90 93 87 00 	sts	0x0087, r25	; 0x800087 <__TEXT_REGION_LENGTH__+0x7fe087>
  c8:	80 93 86 00 	sts	0x0086, r24	; 0x800086 <__TEXT_REGION_LENGTH__+0x7fe086>

	TCCR1A|=(0<<COM1A0)|(1<<COM1A1)|(0<<COM1B0)|(0<<COM1B1)|(0<<FOC1A)|(0<<FOC1B)|(1<<WGM11)|(0<<WGM10);
  cc:	e0 e8       	ldi	r30, 0x80	; 128
  ce:	f0 e0       	ldi	r31, 0x00	; 0
  d0:	80 81       	ld	r24, Z
  d2:	82 68       	ori	r24, 0x82	; 130
  d4:	80 83       	st	Z, r24
	TCCR1B|=(0<<ICNC1)|(0<<ICES1)|(1<<WGM13)|(1<<WGM12)|(0<<CS12)|(0<<CS11)|(1<<CS10);
  d6:	e1 e8       	ldi	r30, 0x81	; 129
  d8:	f0 e0       	ldi	r31, 0x00	; 0
  da:	80 81       	ld	r24, Z
  dc:	89 61       	ori	r24, 0x19	; 25
  de:	80 83       	st	Z, r24

	// SPI initialization
	SPCR=0b01010010;
  e0:	82 e5       	ldi	r24, 0x52	; 82
  e2:	8c bd       	out	0x2c, r24	; 44
	SPSR=0b00000000;
  e4:	1d bc       	out	0x2d, r1	; 45
	Vel_Set_v = -3.0;

	Max_Voltage = 8.0;
	Kp          = 10.0; 	// Proportional control constant

	OCR1A=200; // Starting Duty length
  e6:	88 ec       	ldi	r24, 0xC8	; 200
  e8:	90 e0       	ldi	r25, 0x00	; 0
  ea:	90 93 89 00 	sts	0x0089, r25	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fe089>
  ee:	80 93 88 00 	sts	0x0088, r24	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fe088>
	PORTC = 0b00000010;  // Set initial value of the direction pins (P0 and P1)
  f2:	82 e0       	ldi	r24, 0x02	; 2
  f4:	88 b9       	out	0x08, r24	; 8

	// SPI initialization
	SPCR=0b01010010;
	SPSR=0b00000000;

	Vel_Set_v = -3.0;
  f6:	0f 2e       	mov	r0, r31
  f8:	81 2c       	mov	r8, r1
  fa:	91 2c       	mov	r9, r1
  fc:	f0 e4       	ldi	r31, 0x40	; 64
  fe:	af 2e       	mov	r10, r31
 100:	f0 ec       	ldi	r31, 0xC0	; 192
 102:	bf 2e       	mov	r11, r31
 104:	f0 2d       	mov	r31, r0
		// The motor velocity voltage is cycled from -3 volts to +3 volts
		// The incriment needs to be very small so the velocity change is obsevable
		
		// Note if you have print statments active this will slow the control loop dramatically
		
		Vel_Set_v += .0001;
 106:	27 e1       	ldi	r18, 0x17	; 23
 108:	37 eb       	ldi	r19, 0xB7	; 183
 10a:	41 ed       	ldi	r20, 0xD1	; 209
 10c:	58 e3       	ldi	r21, 0x38	; 56
 10e:	c5 01       	movw	r24, r10
 110:	b4 01       	movw	r22, r8
 112:	a0 d0       	rcall	.+320    	; 0x254 <__addsf3>
 114:	4b 01       	movw	r8, r22
 116:	5c 01       	movw	r10, r24
		if(Vel_Set_v >= 3.0) Vel_Set_v = -3.0;
 118:	20 e0       	ldi	r18, 0x00	; 0
 11a:	30 e0       	ldi	r19, 0x00	; 0
 11c:	40 e4       	ldi	r20, 0x40	; 64
 11e:	50 e4       	ldi	r21, 0x40	; 64
 120:	4c d2       	rcall	.+1176   	; 0x5ba <__gesf2>
 122:	88 23       	and	r24, r24
 124:	44 f0       	brlt	.+16     	; 0x136 <main+0xaa>
 126:	0f 2e       	mov	r0, r31
 128:	81 2c       	mov	r8, r1
 12a:	91 2c       	mov	r9, r1
 12c:	f0 e4       	ldi	r31, 0x40	; 64
 12e:	af 2e       	mov	r10, r31
 130:	f0 ec       	ldi	r31, 0xC0	; 192
 132:	bf 2e       	mov	r11, r31
 134:	f0 2d       	mov	r31, r0


		ADCSRA = ADCSRA | 0b01000000;  					// Start AD conversion
 136:	ea e7       	ldi	r30, 0x7A	; 122
 138:	f0 e0       	ldi	r31, 0x00	; 0
 13a:	80 81       	ld	r24, Z
 13c:	80 64       	ori	r24, 0x40	; 64
 13e:	80 83       	st	Z, r24
		while ((ADCSRA & 0b01000000) == 0b01000000); 	// Wait while AD conversion is executed
 140:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fe07a>
 144:	86 fd       	sbrc	r24, 6
 146:	fc cf       	rjmp	.-8      	; 0x140 <main+0xb4>

		adc_input = ADCW; 									// Read AD value
 148:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7fe078>
 14c:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7fe079>
		adc_input_v = (float) adc_input*(20./1024.)- 10.0;	// Convert the adc_input digital value (0 to 1024) to a voltage
 150:	80 e0       	ldi	r24, 0x00	; 0
 152:	90 e0       	ldi	r25, 0x00	; 0
 154:	80 d1       	rcall	.+768    	; 0x456 <__floatunsisf>
 156:	20 e0       	ldi	r18, 0x00	; 0
 158:	30 e0       	ldi	r19, 0x00	; 0
 15a:	40 ea       	ldi	r20, 0xA0	; 160
 15c:	5c e3       	ldi	r21, 0x3C	; 60
 15e:	31 d2       	rcall	.+1122   	; 0x5c2 <__mulsf3>
 160:	20 e0       	ldi	r18, 0x00	; 0
 162:	30 e0       	ldi	r19, 0x00	; 0
 164:	40 e2       	ldi	r20, 0x20	; 32
 166:	51 e4       	ldi	r21, 0x41	; 65
 168:	74 d0       	rcall	.+232    	; 0x252 <__subsf3>
 16a:	9b 01       	movw	r18, r22
 16c:	ac 01       	movw	r20, r24
		//printf("adc_input = %d   adc_input_v = %d\n",  // For Debugging only (slows the control loop down by a lot!)
		//        adc_input, (int) (adc_input_v*1000));  // Since adc_input_v is a float number it must be converted to an integer
		// and scaled by 1000 to get a meaningful output

		// Control Equation
		Error   = (Vel_Set_v - adc_input_v);			// Error (units are voltage +- 10 volts)
 16e:	c5 01       	movw	r24, r10
 170:	b4 01       	movw	r22, r8
 172:	6f d0       	rcall	.+222    	; 0x252 <__subsf3>
		Control = Kp * Error;  						    // Control (units are voltage  +- 10 volts)
 174:	20 e0       	ldi	r18, 0x00	; 0
 176:	30 e0       	ldi	r19, 0x00	; 0
 178:	40 e2       	ldi	r20, 0x20	; 32
 17a:	51 e4       	ldi	r21, 0x41	; 65
 17c:	22 d2       	rcall	.+1092   	; 0x5c2 <__mulsf3>
 17e:	6b 01       	movw	r12, r22
 180:	7c 01       	movw	r14, r24
		//Control = 5.0;

		if(fabs(Control) >= Max_Voltage)				// Check Maximum voltage
 182:	9f 77       	andi	r25, 0x7F	; 127
 184:	20 e0       	ldi	r18, 0x00	; 0
 186:	30 e0       	ldi	r19, 0x00	; 0
 188:	40 e0       	ldi	r20, 0x00	; 0
 18a:	51 e4       	ldi	r21, 0x41	; 65
 18c:	16 d2       	rcall	.+1068   	; 0x5ba <__gesf2>
 18e:	88 23       	and	r24, r24
 190:	54 f0       	brlt	.+20     	; 0x1a6 <main+0x11a>
    The copysign() function returns \a __x but with the sign of \a __y.
    They work even if \a __x or \a __y are NaN or zero.
*/
__ATTR_CONST__ static inline double copysign (double __x, double __y)
{
    __asm__ (
 192:	80 e0       	ldi	r24, 0x00	; 0
 194:	90 e0       	ldi	r25, 0x00	; 0
 196:	a0 e0       	ldi	r26, 0x00	; 0
 198:	b1 e4       	ldi	r27, 0x41	; 65
 19a:	9c 01       	movw	r18, r24
 19c:	ad 01       	movw	r20, r26
 19e:	f7 fa       	bst	r15, 7
 1a0:	57 f9       	bld	r21, 7
 1a2:	69 01       	movw	r12, r18
 1a4:	7a 01       	movw	r14, r20
		Control = copysign(Max_Voltage,Control);

		Control_HB = (float) (Control/12.0*1600.0);   // Convert the Control voltage to a H-Bridge output value between o and 1600
 1a6:	20 e0       	ldi	r18, 0x00	; 0
 1a8:	30 e0       	ldi	r19, 0x00	; 0
 1aa:	40 e4       	ldi	r20, 0x40	; 64
 1ac:	51 e4       	ldi	r21, 0x41	; 65
 1ae:	c7 01       	movw	r24, r14
 1b0:	b6 01       	movw	r22, r12
 1b2:	b8 d0       	rcall	.+368    	; 0x324 <__divsf3>
 1b4:	20 e0       	ldi	r18, 0x00	; 0
 1b6:	30 e0       	ldi	r19, 0x00	; 0
 1b8:	48 ec       	ldi	r20, 0xC8	; 200
 1ba:	54 e4       	ldi	r21, 0x44	; 68
 1bc:	02 d2       	rcall	.+1028   	; 0x5c2 <__mulsf3>
 1be:	6b 01       	movw	r12, r22
 1c0:	7c 01       	movw	r14, r24

		// Set the direction and value of the H-Bridge output

		if(Control_HB < 0)
 1c2:	20 e0       	ldi	r18, 0x00	; 0
 1c4:	30 e0       	ldi	r19, 0x00	; 0
 1c6:	a9 01       	movw	r20, r18
 1c8:	a9 d0       	rcall	.+338    	; 0x31c <__cmpsf2>
 1ca:	88 23       	and	r24, r24
 1cc:	1c f5       	brge	.+70     	; 0x214 <__EEPROM_REGION_LENGTH__+0x14>
		{
			cbi(PORTC, 0);  //Set Direction pins  (01)
 1ce:	88 b1       	in	r24, 0x08	; 8
 1d0:	8e 7f       	andi	r24, 0xFE	; 254
 1d2:	88 b9       	out	0x08, r24	; 8
			sbi(PORTC, 1);
 1d4:	88 b1       	in	r24, 0x08	; 8
 1d6:	82 60       	ori	r24, 0x02	; 2
 1d8:	88 b9       	out	0x08, r24	; 8
			Control_HB = -Control_HB;
 1da:	f7 fa       	bst	r15, 7
 1dc:	f0 94       	com	r15
 1de:	f7 f8       	bld	r15, 7
 1e0:	f0 94       	com	r15

			if(Control_HB >= 1600.)
 1e2:	20 e0       	ldi	r18, 0x00	; 0
 1e4:	30 e0       	ldi	r19, 0x00	; 0
 1e6:	48 ec       	ldi	r20, 0xC8	; 200
 1e8:	54 e4       	ldi	r21, 0x44	; 68
 1ea:	c7 01       	movw	r24, r14
 1ec:	b6 01       	movw	r22, r12
 1ee:	e5 d1       	rcall	.+970    	; 0x5ba <__gesf2>
 1f0:	88 23       	and	r24, r24
 1f2:	44 f0       	brlt	.+16     	; 0x204 <__EEPROM_REGION_LENGTH__+0x4>
			{
				Control_HB   = 1600.;
 1f4:	0f 2e       	mov	r0, r31
 1f6:	c1 2c       	mov	r12, r1
 1f8:	d1 2c       	mov	r13, r1
 1fa:	f8 ec       	ldi	r31, 0xC8	; 200
 1fc:	ef 2e       	mov	r14, r31
 1fe:	f4 e4       	ldi	r31, 0x44	; 68
 200:	ff 2e       	mov	r15, r31
 202:	f0 2d       	mov	r31, r0
			}
			OCR1A = (int)Control_HB;
 204:	c7 01       	movw	r24, r14
 206:	b6 01       	movw	r22, r12
 208:	f5 d0       	rcall	.+490    	; 0x3f4 <__fixsfsi>
 20a:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fe089>
 20e:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fe088>
 212:	79 cf       	rjmp	.-270    	; 0x106 <main+0x7a>
		}
		else
		{
			sbi(PORTC, 0);  //Set Direction pins  (10)
 214:	88 b1       	in	r24, 0x08	; 8
 216:	81 60       	ori	r24, 0x01	; 1
 218:	88 b9       	out	0x08, r24	; 8
			cbi(PORTC, 1);
 21a:	88 b1       	in	r24, 0x08	; 8
 21c:	8d 7f       	andi	r24, 0xFD	; 253
 21e:	88 b9       	out	0x08, r24	; 8
			if(Control_HB >= 1600.)
 220:	20 e0       	ldi	r18, 0x00	; 0
 222:	30 e0       	ldi	r19, 0x00	; 0
 224:	48 ec       	ldi	r20, 0xC8	; 200
 226:	54 e4       	ldi	r21, 0x44	; 68
 228:	c7 01       	movw	r24, r14
 22a:	b6 01       	movw	r22, r12
 22c:	c6 d1       	rcall	.+908    	; 0x5ba <__gesf2>
 22e:	88 23       	and	r24, r24
 230:	44 f0       	brlt	.+16     	; 0x242 <__EEPROM_REGION_LENGTH__+0x42>
			{
				Control_HB   = 1600.;
 232:	0f 2e       	mov	r0, r31
 234:	c1 2c       	mov	r12, r1
 236:	d1 2c       	mov	r13, r1
 238:	f8 ec       	ldi	r31, 0xC8	; 200
 23a:	ef 2e       	mov	r14, r31
 23c:	f4 e4       	ldi	r31, 0x44	; 68
 23e:	ff 2e       	mov	r15, r31
 240:	f0 2d       	mov	r31, r0
			}
			OCR1A = (int)Control_HB;
 242:	c7 01       	movw	r24, r14
 244:	b6 01       	movw	r22, r12
 246:	d6 d0       	rcall	.+428    	; 0x3f4 <__fixsfsi>
 248:	70 93 89 00 	sts	0x0089, r23	; 0x800089 <__TEXT_REGION_LENGTH__+0x7fe089>
 24c:	60 93 88 00 	sts	0x0088, r22	; 0x800088 <__TEXT_REGION_LENGTH__+0x7fe088>
 250:	5a cf       	rjmp	.-332    	; 0x106 <main+0x7a>

00000252 <__subsf3>:
 252:	50 58       	subi	r21, 0x80	; 128

00000254 <__addsf3>:
 254:	bb 27       	eor	r27, r27
 256:	aa 27       	eor	r26, r26
 258:	0e d0       	rcall	.+28     	; 0x276 <__addsf3x>
 25a:	75 c1       	rjmp	.+746    	; 0x546 <__fp_round>
 25c:	66 d1       	rcall	.+716    	; 0x52a <__fp_pscA>
 25e:	30 f0       	brcs	.+12     	; 0x26c <__addsf3+0x18>
 260:	6b d1       	rcall	.+726    	; 0x538 <__fp_pscB>
 262:	20 f0       	brcs	.+8      	; 0x26c <__addsf3+0x18>
 264:	31 f4       	brne	.+12     	; 0x272 <__addsf3+0x1e>
 266:	9f 3f       	cpi	r25, 0xFF	; 255
 268:	11 f4       	brne	.+4      	; 0x26e <__addsf3+0x1a>
 26a:	1e f4       	brtc	.+6      	; 0x272 <__addsf3+0x1e>
 26c:	5b c1       	rjmp	.+694    	; 0x524 <__fp_nan>
 26e:	0e f4       	brtc	.+2      	; 0x272 <__addsf3+0x1e>
 270:	e0 95       	com	r30
 272:	e7 fb       	bst	r30, 7
 274:	51 c1       	rjmp	.+674    	; 0x518 <__fp_inf>

00000276 <__addsf3x>:
 276:	e9 2f       	mov	r30, r25
 278:	77 d1       	rcall	.+750    	; 0x568 <__fp_split3>
 27a:	80 f3       	brcs	.-32     	; 0x25c <__addsf3+0x8>
 27c:	ba 17       	cp	r27, r26
 27e:	62 07       	cpc	r22, r18
 280:	73 07       	cpc	r23, r19
 282:	84 07       	cpc	r24, r20
 284:	95 07       	cpc	r25, r21
 286:	18 f0       	brcs	.+6      	; 0x28e <__addsf3x+0x18>
 288:	71 f4       	brne	.+28     	; 0x2a6 <__addsf3x+0x30>
 28a:	9e f5       	brtc	.+102    	; 0x2f2 <__addsf3x+0x7c>
 28c:	8f c1       	rjmp	.+798    	; 0x5ac <__fp_zero>
 28e:	0e f4       	brtc	.+2      	; 0x292 <__addsf3x+0x1c>
 290:	e0 95       	com	r30
 292:	0b 2e       	mov	r0, r27
 294:	ba 2f       	mov	r27, r26
 296:	a0 2d       	mov	r26, r0
 298:	0b 01       	movw	r0, r22
 29a:	b9 01       	movw	r22, r18
 29c:	90 01       	movw	r18, r0
 29e:	0c 01       	movw	r0, r24
 2a0:	ca 01       	movw	r24, r20
 2a2:	a0 01       	movw	r20, r0
 2a4:	11 24       	eor	r1, r1
 2a6:	ff 27       	eor	r31, r31
 2a8:	59 1b       	sub	r21, r25
 2aa:	99 f0       	breq	.+38     	; 0x2d2 <__addsf3x+0x5c>
 2ac:	59 3f       	cpi	r21, 0xF9	; 249
 2ae:	50 f4       	brcc	.+20     	; 0x2c4 <__addsf3x+0x4e>
 2b0:	50 3e       	cpi	r21, 0xE0	; 224
 2b2:	68 f1       	brcs	.+90     	; 0x30e <__addsf3x+0x98>
 2b4:	1a 16       	cp	r1, r26
 2b6:	f0 40       	sbci	r31, 0x00	; 0
 2b8:	a2 2f       	mov	r26, r18
 2ba:	23 2f       	mov	r18, r19
 2bc:	34 2f       	mov	r19, r20
 2be:	44 27       	eor	r20, r20
 2c0:	58 5f       	subi	r21, 0xF8	; 248
 2c2:	f3 cf       	rjmp	.-26     	; 0x2aa <__addsf3x+0x34>
 2c4:	46 95       	lsr	r20
 2c6:	37 95       	ror	r19
 2c8:	27 95       	ror	r18
 2ca:	a7 95       	ror	r26
 2cc:	f0 40       	sbci	r31, 0x00	; 0
 2ce:	53 95       	inc	r21
 2d0:	c9 f7       	brne	.-14     	; 0x2c4 <__addsf3x+0x4e>
 2d2:	7e f4       	brtc	.+30     	; 0x2f2 <__addsf3x+0x7c>
 2d4:	1f 16       	cp	r1, r31
 2d6:	ba 0b       	sbc	r27, r26
 2d8:	62 0b       	sbc	r22, r18
 2da:	73 0b       	sbc	r23, r19
 2dc:	84 0b       	sbc	r24, r20
 2de:	ba f0       	brmi	.+46     	; 0x30e <__addsf3x+0x98>
 2e0:	91 50       	subi	r25, 0x01	; 1
 2e2:	a1 f0       	breq	.+40     	; 0x30c <__addsf3x+0x96>
 2e4:	ff 0f       	add	r31, r31
 2e6:	bb 1f       	adc	r27, r27
 2e8:	66 1f       	adc	r22, r22
 2ea:	77 1f       	adc	r23, r23
 2ec:	88 1f       	adc	r24, r24
 2ee:	c2 f7       	brpl	.-16     	; 0x2e0 <__addsf3x+0x6a>
 2f0:	0e c0       	rjmp	.+28     	; 0x30e <__addsf3x+0x98>
 2f2:	ba 0f       	add	r27, r26
 2f4:	62 1f       	adc	r22, r18
 2f6:	73 1f       	adc	r23, r19
 2f8:	84 1f       	adc	r24, r20
 2fa:	48 f4       	brcc	.+18     	; 0x30e <__addsf3x+0x98>
 2fc:	87 95       	ror	r24
 2fe:	77 95       	ror	r23
 300:	67 95       	ror	r22
 302:	b7 95       	ror	r27
 304:	f7 95       	ror	r31
 306:	9e 3f       	cpi	r25, 0xFE	; 254
 308:	08 f0       	brcs	.+2      	; 0x30c <__addsf3x+0x96>
 30a:	b3 cf       	rjmp	.-154    	; 0x272 <__addsf3+0x1e>
 30c:	93 95       	inc	r25
 30e:	88 0f       	add	r24, r24
 310:	08 f0       	brcs	.+2      	; 0x314 <__addsf3x+0x9e>
 312:	99 27       	eor	r25, r25
 314:	ee 0f       	add	r30, r30
 316:	97 95       	ror	r25
 318:	87 95       	ror	r24
 31a:	08 95       	ret

0000031c <__cmpsf2>:
 31c:	d9 d0       	rcall	.+434    	; 0x4d0 <__fp_cmp>
 31e:	08 f4       	brcc	.+2      	; 0x322 <__cmpsf2+0x6>
 320:	81 e0       	ldi	r24, 0x01	; 1
 322:	08 95       	ret

00000324 <__divsf3>:
 324:	0c d0       	rcall	.+24     	; 0x33e <__divsf3x>
 326:	0f c1       	rjmp	.+542    	; 0x546 <__fp_round>
 328:	07 d1       	rcall	.+526    	; 0x538 <__fp_pscB>
 32a:	40 f0       	brcs	.+16     	; 0x33c <__divsf3+0x18>
 32c:	fe d0       	rcall	.+508    	; 0x52a <__fp_pscA>
 32e:	30 f0       	brcs	.+12     	; 0x33c <__divsf3+0x18>
 330:	21 f4       	brne	.+8      	; 0x33a <__divsf3+0x16>
 332:	5f 3f       	cpi	r21, 0xFF	; 255
 334:	19 f0       	breq	.+6      	; 0x33c <__divsf3+0x18>
 336:	f0 c0       	rjmp	.+480    	; 0x518 <__fp_inf>
 338:	51 11       	cpse	r21, r1
 33a:	39 c1       	rjmp	.+626    	; 0x5ae <__fp_szero>
 33c:	f3 c0       	rjmp	.+486    	; 0x524 <__fp_nan>

0000033e <__divsf3x>:
 33e:	14 d1       	rcall	.+552    	; 0x568 <__fp_split3>
 340:	98 f3       	brcs	.-26     	; 0x328 <__divsf3+0x4>

00000342 <__divsf3_pse>:
 342:	99 23       	and	r25, r25
 344:	c9 f3       	breq	.-14     	; 0x338 <__divsf3+0x14>
 346:	55 23       	and	r21, r21
 348:	b1 f3       	breq	.-20     	; 0x336 <__divsf3+0x12>
 34a:	95 1b       	sub	r25, r21
 34c:	55 0b       	sbc	r21, r21
 34e:	bb 27       	eor	r27, r27
 350:	aa 27       	eor	r26, r26
 352:	62 17       	cp	r22, r18
 354:	73 07       	cpc	r23, r19
 356:	84 07       	cpc	r24, r20
 358:	38 f0       	brcs	.+14     	; 0x368 <__divsf3_pse+0x26>
 35a:	9f 5f       	subi	r25, 0xFF	; 255
 35c:	5f 4f       	sbci	r21, 0xFF	; 255
 35e:	22 0f       	add	r18, r18
 360:	33 1f       	adc	r19, r19
 362:	44 1f       	adc	r20, r20
 364:	aa 1f       	adc	r26, r26
 366:	a9 f3       	breq	.-22     	; 0x352 <__divsf3_pse+0x10>
 368:	33 d0       	rcall	.+102    	; 0x3d0 <__divsf3_pse+0x8e>
 36a:	0e 2e       	mov	r0, r30
 36c:	3a f0       	brmi	.+14     	; 0x37c <__divsf3_pse+0x3a>
 36e:	e0 e8       	ldi	r30, 0x80	; 128
 370:	30 d0       	rcall	.+96     	; 0x3d2 <__divsf3_pse+0x90>
 372:	91 50       	subi	r25, 0x01	; 1
 374:	50 40       	sbci	r21, 0x00	; 0
 376:	e6 95       	lsr	r30
 378:	00 1c       	adc	r0, r0
 37a:	ca f7       	brpl	.-14     	; 0x36e <__divsf3_pse+0x2c>
 37c:	29 d0       	rcall	.+82     	; 0x3d0 <__divsf3_pse+0x8e>
 37e:	fe 2f       	mov	r31, r30
 380:	27 d0       	rcall	.+78     	; 0x3d0 <__divsf3_pse+0x8e>
 382:	66 0f       	add	r22, r22
 384:	77 1f       	adc	r23, r23
 386:	88 1f       	adc	r24, r24
 388:	bb 1f       	adc	r27, r27
 38a:	26 17       	cp	r18, r22
 38c:	37 07       	cpc	r19, r23
 38e:	48 07       	cpc	r20, r24
 390:	ab 07       	cpc	r26, r27
 392:	b0 e8       	ldi	r27, 0x80	; 128
 394:	09 f0       	breq	.+2      	; 0x398 <__divsf3_pse+0x56>
 396:	bb 0b       	sbc	r27, r27
 398:	80 2d       	mov	r24, r0
 39a:	bf 01       	movw	r22, r30
 39c:	ff 27       	eor	r31, r31
 39e:	93 58       	subi	r25, 0x83	; 131
 3a0:	5f 4f       	sbci	r21, 0xFF	; 255
 3a2:	2a f0       	brmi	.+10     	; 0x3ae <__divsf3_pse+0x6c>
 3a4:	9e 3f       	cpi	r25, 0xFE	; 254
 3a6:	51 05       	cpc	r21, r1
 3a8:	68 f0       	brcs	.+26     	; 0x3c4 <__divsf3_pse+0x82>
 3aa:	b6 c0       	rjmp	.+364    	; 0x518 <__fp_inf>
 3ac:	00 c1       	rjmp	.+512    	; 0x5ae <__fp_szero>
 3ae:	5f 3f       	cpi	r21, 0xFF	; 255
 3b0:	ec f3       	brlt	.-6      	; 0x3ac <__divsf3_pse+0x6a>
 3b2:	98 3e       	cpi	r25, 0xE8	; 232
 3b4:	dc f3       	brlt	.-10     	; 0x3ac <__divsf3_pse+0x6a>
 3b6:	86 95       	lsr	r24
 3b8:	77 95       	ror	r23
 3ba:	67 95       	ror	r22
 3bc:	b7 95       	ror	r27
 3be:	f7 95       	ror	r31
 3c0:	9f 5f       	subi	r25, 0xFF	; 255
 3c2:	c9 f7       	brne	.-14     	; 0x3b6 <__divsf3_pse+0x74>
 3c4:	88 0f       	add	r24, r24
 3c6:	91 1d       	adc	r25, r1
 3c8:	96 95       	lsr	r25
 3ca:	87 95       	ror	r24
 3cc:	97 f9       	bld	r25, 7
 3ce:	08 95       	ret
 3d0:	e1 e0       	ldi	r30, 0x01	; 1
 3d2:	66 0f       	add	r22, r22
 3d4:	77 1f       	adc	r23, r23
 3d6:	88 1f       	adc	r24, r24
 3d8:	bb 1f       	adc	r27, r27
 3da:	62 17       	cp	r22, r18
 3dc:	73 07       	cpc	r23, r19
 3de:	84 07       	cpc	r24, r20
 3e0:	ba 07       	cpc	r27, r26
 3e2:	20 f0       	brcs	.+8      	; 0x3ec <__divsf3_pse+0xaa>
 3e4:	62 1b       	sub	r22, r18
 3e6:	73 0b       	sbc	r23, r19
 3e8:	84 0b       	sbc	r24, r20
 3ea:	ba 0b       	sbc	r27, r26
 3ec:	ee 1f       	adc	r30, r30
 3ee:	88 f7       	brcc	.-30     	; 0x3d2 <__divsf3_pse+0x90>
 3f0:	e0 95       	com	r30
 3f2:	08 95       	ret

000003f4 <__fixsfsi>:
 3f4:	04 d0       	rcall	.+8      	; 0x3fe <__fixunssfsi>
 3f6:	68 94       	set
 3f8:	b1 11       	cpse	r27, r1
 3fa:	d9 c0       	rjmp	.+434    	; 0x5ae <__fp_szero>
 3fc:	08 95       	ret

000003fe <__fixunssfsi>:
 3fe:	bc d0       	rcall	.+376    	; 0x578 <__fp_splitA>
 400:	88 f0       	brcs	.+34     	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 402:	9f 57       	subi	r25, 0x7F	; 127
 404:	90 f0       	brcs	.+36     	; 0x42a <__DATA_REGION_LENGTH__+0x2a>
 406:	b9 2f       	mov	r27, r25
 408:	99 27       	eor	r25, r25
 40a:	b7 51       	subi	r27, 0x17	; 23
 40c:	a0 f0       	brcs	.+40     	; 0x436 <__DATA_REGION_LENGTH__+0x36>
 40e:	d1 f0       	breq	.+52     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 410:	66 0f       	add	r22, r22
 412:	77 1f       	adc	r23, r23
 414:	88 1f       	adc	r24, r24
 416:	99 1f       	adc	r25, r25
 418:	1a f0       	brmi	.+6      	; 0x420 <__DATA_REGION_LENGTH__+0x20>
 41a:	ba 95       	dec	r27
 41c:	c9 f7       	brne	.-14     	; 0x410 <__DATA_REGION_LENGTH__+0x10>
 41e:	12 c0       	rjmp	.+36     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 420:	b1 30       	cpi	r27, 0x01	; 1
 422:	81 f0       	breq	.+32     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 424:	c3 d0       	rcall	.+390    	; 0x5ac <__fp_zero>
 426:	b1 e0       	ldi	r27, 0x01	; 1
 428:	08 95       	ret
 42a:	c0 c0       	rjmp	.+384    	; 0x5ac <__fp_zero>
 42c:	67 2f       	mov	r22, r23
 42e:	78 2f       	mov	r23, r24
 430:	88 27       	eor	r24, r24
 432:	b8 5f       	subi	r27, 0xF8	; 248
 434:	39 f0       	breq	.+14     	; 0x444 <__DATA_REGION_LENGTH__+0x44>
 436:	b9 3f       	cpi	r27, 0xF9	; 249
 438:	cc f3       	brlt	.-14     	; 0x42c <__DATA_REGION_LENGTH__+0x2c>
 43a:	86 95       	lsr	r24
 43c:	77 95       	ror	r23
 43e:	67 95       	ror	r22
 440:	b3 95       	inc	r27
 442:	d9 f7       	brne	.-10     	; 0x43a <__DATA_REGION_LENGTH__+0x3a>
 444:	3e f4       	brtc	.+14     	; 0x454 <__DATA_REGION_LENGTH__+0x54>
 446:	90 95       	com	r25
 448:	80 95       	com	r24
 44a:	70 95       	com	r23
 44c:	61 95       	neg	r22
 44e:	7f 4f       	sbci	r23, 0xFF	; 255
 450:	8f 4f       	sbci	r24, 0xFF	; 255
 452:	9f 4f       	sbci	r25, 0xFF	; 255
 454:	08 95       	ret

00000456 <__floatunsisf>:
 456:	e8 94       	clt
 458:	09 c0       	rjmp	.+18     	; 0x46c <__floatsisf+0x12>

0000045a <__floatsisf>:
 45a:	97 fb       	bst	r25, 7
 45c:	3e f4       	brtc	.+14     	; 0x46c <__floatsisf+0x12>
 45e:	90 95       	com	r25
 460:	80 95       	com	r24
 462:	70 95       	com	r23
 464:	61 95       	neg	r22
 466:	7f 4f       	sbci	r23, 0xFF	; 255
 468:	8f 4f       	sbci	r24, 0xFF	; 255
 46a:	9f 4f       	sbci	r25, 0xFF	; 255
 46c:	99 23       	and	r25, r25
 46e:	a9 f0       	breq	.+42     	; 0x49a <__floatsisf+0x40>
 470:	f9 2f       	mov	r31, r25
 472:	96 e9       	ldi	r25, 0x96	; 150
 474:	bb 27       	eor	r27, r27
 476:	93 95       	inc	r25
 478:	f6 95       	lsr	r31
 47a:	87 95       	ror	r24
 47c:	77 95       	ror	r23
 47e:	67 95       	ror	r22
 480:	b7 95       	ror	r27
 482:	f1 11       	cpse	r31, r1
 484:	f8 cf       	rjmp	.-16     	; 0x476 <__floatsisf+0x1c>
 486:	fa f4       	brpl	.+62     	; 0x4c6 <__floatsisf+0x6c>
 488:	bb 0f       	add	r27, r27
 48a:	11 f4       	brne	.+4      	; 0x490 <__floatsisf+0x36>
 48c:	60 ff       	sbrs	r22, 0
 48e:	1b c0       	rjmp	.+54     	; 0x4c6 <__floatsisf+0x6c>
 490:	6f 5f       	subi	r22, 0xFF	; 255
 492:	7f 4f       	sbci	r23, 0xFF	; 255
 494:	8f 4f       	sbci	r24, 0xFF	; 255
 496:	9f 4f       	sbci	r25, 0xFF	; 255
 498:	16 c0       	rjmp	.+44     	; 0x4c6 <__floatsisf+0x6c>
 49a:	88 23       	and	r24, r24
 49c:	11 f0       	breq	.+4      	; 0x4a2 <__floatsisf+0x48>
 49e:	96 e9       	ldi	r25, 0x96	; 150
 4a0:	11 c0       	rjmp	.+34     	; 0x4c4 <__floatsisf+0x6a>
 4a2:	77 23       	and	r23, r23
 4a4:	21 f0       	breq	.+8      	; 0x4ae <__floatsisf+0x54>
 4a6:	9e e8       	ldi	r25, 0x8E	; 142
 4a8:	87 2f       	mov	r24, r23
 4aa:	76 2f       	mov	r23, r22
 4ac:	05 c0       	rjmp	.+10     	; 0x4b8 <__floatsisf+0x5e>
 4ae:	66 23       	and	r22, r22
 4b0:	71 f0       	breq	.+28     	; 0x4ce <__floatsisf+0x74>
 4b2:	96 e8       	ldi	r25, 0x86	; 134
 4b4:	86 2f       	mov	r24, r22
 4b6:	70 e0       	ldi	r23, 0x00	; 0
 4b8:	60 e0       	ldi	r22, 0x00	; 0
 4ba:	2a f0       	brmi	.+10     	; 0x4c6 <__floatsisf+0x6c>
 4bc:	9a 95       	dec	r25
 4be:	66 0f       	add	r22, r22
 4c0:	77 1f       	adc	r23, r23
 4c2:	88 1f       	adc	r24, r24
 4c4:	da f7       	brpl	.-10     	; 0x4bc <__floatsisf+0x62>
 4c6:	88 0f       	add	r24, r24
 4c8:	96 95       	lsr	r25
 4ca:	87 95       	ror	r24
 4cc:	97 f9       	bld	r25, 7
 4ce:	08 95       	ret

000004d0 <__fp_cmp>:
 4d0:	99 0f       	add	r25, r25
 4d2:	00 08       	sbc	r0, r0
 4d4:	55 0f       	add	r21, r21
 4d6:	aa 0b       	sbc	r26, r26
 4d8:	e0 e8       	ldi	r30, 0x80	; 128
 4da:	fe ef       	ldi	r31, 0xFE	; 254
 4dc:	16 16       	cp	r1, r22
 4de:	17 06       	cpc	r1, r23
 4e0:	e8 07       	cpc	r30, r24
 4e2:	f9 07       	cpc	r31, r25
 4e4:	c0 f0       	brcs	.+48     	; 0x516 <__stack+0x17>
 4e6:	12 16       	cp	r1, r18
 4e8:	13 06       	cpc	r1, r19
 4ea:	e4 07       	cpc	r30, r20
 4ec:	f5 07       	cpc	r31, r21
 4ee:	98 f0       	brcs	.+38     	; 0x516 <__stack+0x17>
 4f0:	62 1b       	sub	r22, r18
 4f2:	73 0b       	sbc	r23, r19
 4f4:	84 0b       	sbc	r24, r20
 4f6:	95 0b       	sbc	r25, r21
 4f8:	39 f4       	brne	.+14     	; 0x508 <__stack+0x9>
 4fa:	0a 26       	eor	r0, r26
 4fc:	61 f0       	breq	.+24     	; 0x516 <__stack+0x17>
 4fe:	23 2b       	or	r18, r19
 500:	24 2b       	or	r18, r20
 502:	25 2b       	or	r18, r21
 504:	21 f4       	brne	.+8      	; 0x50e <__stack+0xf>
 506:	08 95       	ret
 508:	0a 26       	eor	r0, r26
 50a:	09 f4       	brne	.+2      	; 0x50e <__stack+0xf>
 50c:	a1 40       	sbci	r26, 0x01	; 1
 50e:	a6 95       	lsr	r26
 510:	8f ef       	ldi	r24, 0xFF	; 255
 512:	81 1d       	adc	r24, r1
 514:	81 1d       	adc	r24, r1
 516:	08 95       	ret

00000518 <__fp_inf>:
 518:	97 f9       	bld	r25, 7
 51a:	9f 67       	ori	r25, 0x7F	; 127
 51c:	80 e8       	ldi	r24, 0x80	; 128
 51e:	70 e0       	ldi	r23, 0x00	; 0
 520:	60 e0       	ldi	r22, 0x00	; 0
 522:	08 95       	ret

00000524 <__fp_nan>:
 524:	9f ef       	ldi	r25, 0xFF	; 255
 526:	80 ec       	ldi	r24, 0xC0	; 192
 528:	08 95       	ret

0000052a <__fp_pscA>:
 52a:	00 24       	eor	r0, r0
 52c:	0a 94       	dec	r0
 52e:	16 16       	cp	r1, r22
 530:	17 06       	cpc	r1, r23
 532:	18 06       	cpc	r1, r24
 534:	09 06       	cpc	r0, r25
 536:	08 95       	ret

00000538 <__fp_pscB>:
 538:	00 24       	eor	r0, r0
 53a:	0a 94       	dec	r0
 53c:	12 16       	cp	r1, r18
 53e:	13 06       	cpc	r1, r19
 540:	14 06       	cpc	r1, r20
 542:	05 06       	cpc	r0, r21
 544:	08 95       	ret

00000546 <__fp_round>:
 546:	09 2e       	mov	r0, r25
 548:	03 94       	inc	r0
 54a:	00 0c       	add	r0, r0
 54c:	11 f4       	brne	.+4      	; 0x552 <__fp_round+0xc>
 54e:	88 23       	and	r24, r24
 550:	52 f0       	brmi	.+20     	; 0x566 <__fp_round+0x20>
 552:	bb 0f       	add	r27, r27
 554:	40 f4       	brcc	.+16     	; 0x566 <__fp_round+0x20>
 556:	bf 2b       	or	r27, r31
 558:	11 f4       	brne	.+4      	; 0x55e <__fp_round+0x18>
 55a:	60 ff       	sbrs	r22, 0
 55c:	04 c0       	rjmp	.+8      	; 0x566 <__fp_round+0x20>
 55e:	6f 5f       	subi	r22, 0xFF	; 255
 560:	7f 4f       	sbci	r23, 0xFF	; 255
 562:	8f 4f       	sbci	r24, 0xFF	; 255
 564:	9f 4f       	sbci	r25, 0xFF	; 255
 566:	08 95       	ret

00000568 <__fp_split3>:
 568:	57 fd       	sbrc	r21, 7
 56a:	90 58       	subi	r25, 0x80	; 128
 56c:	44 0f       	add	r20, r20
 56e:	55 1f       	adc	r21, r21
 570:	59 f0       	breq	.+22     	; 0x588 <__fp_splitA+0x10>
 572:	5f 3f       	cpi	r21, 0xFF	; 255
 574:	71 f0       	breq	.+28     	; 0x592 <__fp_splitA+0x1a>
 576:	47 95       	ror	r20

00000578 <__fp_splitA>:
 578:	88 0f       	add	r24, r24
 57a:	97 fb       	bst	r25, 7
 57c:	99 1f       	adc	r25, r25
 57e:	61 f0       	breq	.+24     	; 0x598 <__fp_splitA+0x20>
 580:	9f 3f       	cpi	r25, 0xFF	; 255
 582:	79 f0       	breq	.+30     	; 0x5a2 <__fp_splitA+0x2a>
 584:	87 95       	ror	r24
 586:	08 95       	ret
 588:	12 16       	cp	r1, r18
 58a:	13 06       	cpc	r1, r19
 58c:	14 06       	cpc	r1, r20
 58e:	55 1f       	adc	r21, r21
 590:	f2 cf       	rjmp	.-28     	; 0x576 <__fp_split3+0xe>
 592:	46 95       	lsr	r20
 594:	f1 df       	rcall	.-30     	; 0x578 <__fp_splitA>
 596:	08 c0       	rjmp	.+16     	; 0x5a8 <__fp_splitA+0x30>
 598:	16 16       	cp	r1, r22
 59a:	17 06       	cpc	r1, r23
 59c:	18 06       	cpc	r1, r24
 59e:	99 1f       	adc	r25, r25
 5a0:	f1 cf       	rjmp	.-30     	; 0x584 <__fp_splitA+0xc>
 5a2:	86 95       	lsr	r24
 5a4:	71 05       	cpc	r23, r1
 5a6:	61 05       	cpc	r22, r1
 5a8:	08 94       	sec
 5aa:	08 95       	ret

000005ac <__fp_zero>:
 5ac:	e8 94       	clt

000005ae <__fp_szero>:
 5ae:	bb 27       	eor	r27, r27
 5b0:	66 27       	eor	r22, r22
 5b2:	77 27       	eor	r23, r23
 5b4:	cb 01       	movw	r24, r22
 5b6:	97 f9       	bld	r25, 7
 5b8:	08 95       	ret

000005ba <__gesf2>:
 5ba:	8a df       	rcall	.-236    	; 0x4d0 <__fp_cmp>
 5bc:	08 f4       	brcc	.+2      	; 0x5c0 <__gesf2+0x6>
 5be:	8f ef       	ldi	r24, 0xFF	; 255
 5c0:	08 95       	ret

000005c2 <__mulsf3>:
 5c2:	0b d0       	rcall	.+22     	; 0x5da <__mulsf3x>
 5c4:	c0 cf       	rjmp	.-128    	; 0x546 <__fp_round>
 5c6:	b1 df       	rcall	.-158    	; 0x52a <__fp_pscA>
 5c8:	28 f0       	brcs	.+10     	; 0x5d4 <__mulsf3+0x12>
 5ca:	b6 df       	rcall	.-148    	; 0x538 <__fp_pscB>
 5cc:	18 f0       	brcs	.+6      	; 0x5d4 <__mulsf3+0x12>
 5ce:	95 23       	and	r25, r21
 5d0:	09 f0       	breq	.+2      	; 0x5d4 <__mulsf3+0x12>
 5d2:	a2 cf       	rjmp	.-188    	; 0x518 <__fp_inf>
 5d4:	a7 cf       	rjmp	.-178    	; 0x524 <__fp_nan>
 5d6:	11 24       	eor	r1, r1
 5d8:	ea cf       	rjmp	.-44     	; 0x5ae <__fp_szero>

000005da <__mulsf3x>:
 5da:	c6 df       	rcall	.-116    	; 0x568 <__fp_split3>
 5dc:	a0 f3       	brcs	.-24     	; 0x5c6 <__mulsf3+0x4>

000005de <__mulsf3_pse>:
 5de:	95 9f       	mul	r25, r21
 5e0:	d1 f3       	breq	.-12     	; 0x5d6 <__mulsf3+0x14>
 5e2:	95 0f       	add	r25, r21
 5e4:	50 e0       	ldi	r21, 0x00	; 0
 5e6:	55 1f       	adc	r21, r21
 5e8:	62 9f       	mul	r22, r18
 5ea:	f0 01       	movw	r30, r0
 5ec:	72 9f       	mul	r23, r18
 5ee:	bb 27       	eor	r27, r27
 5f0:	f0 0d       	add	r31, r0
 5f2:	b1 1d       	adc	r27, r1
 5f4:	63 9f       	mul	r22, r19
 5f6:	aa 27       	eor	r26, r26
 5f8:	f0 0d       	add	r31, r0
 5fa:	b1 1d       	adc	r27, r1
 5fc:	aa 1f       	adc	r26, r26
 5fe:	64 9f       	mul	r22, r20
 600:	66 27       	eor	r22, r22
 602:	b0 0d       	add	r27, r0
 604:	a1 1d       	adc	r26, r1
 606:	66 1f       	adc	r22, r22
 608:	82 9f       	mul	r24, r18
 60a:	22 27       	eor	r18, r18
 60c:	b0 0d       	add	r27, r0
 60e:	a1 1d       	adc	r26, r1
 610:	62 1f       	adc	r22, r18
 612:	73 9f       	mul	r23, r19
 614:	b0 0d       	add	r27, r0
 616:	a1 1d       	adc	r26, r1
 618:	62 1f       	adc	r22, r18
 61a:	83 9f       	mul	r24, r19
 61c:	a0 0d       	add	r26, r0
 61e:	61 1d       	adc	r22, r1
 620:	22 1f       	adc	r18, r18
 622:	74 9f       	mul	r23, r20
 624:	33 27       	eor	r19, r19
 626:	a0 0d       	add	r26, r0
 628:	61 1d       	adc	r22, r1
 62a:	23 1f       	adc	r18, r19
 62c:	84 9f       	mul	r24, r20
 62e:	60 0d       	add	r22, r0
 630:	21 1d       	adc	r18, r1
 632:	82 2f       	mov	r24, r18
 634:	76 2f       	mov	r23, r22
 636:	6a 2f       	mov	r22, r26
 638:	11 24       	eor	r1, r1
 63a:	9f 57       	subi	r25, 0x7F	; 127
 63c:	50 40       	sbci	r21, 0x00	; 0
 63e:	8a f0       	brmi	.+34     	; 0x662 <__mulsf3_pse+0x84>
 640:	e1 f0       	breq	.+56     	; 0x67a <__mulsf3_pse+0x9c>
 642:	88 23       	and	r24, r24
 644:	4a f0       	brmi	.+18     	; 0x658 <__mulsf3_pse+0x7a>
 646:	ee 0f       	add	r30, r30
 648:	ff 1f       	adc	r31, r31
 64a:	bb 1f       	adc	r27, r27
 64c:	66 1f       	adc	r22, r22
 64e:	77 1f       	adc	r23, r23
 650:	88 1f       	adc	r24, r24
 652:	91 50       	subi	r25, 0x01	; 1
 654:	50 40       	sbci	r21, 0x00	; 0
 656:	a9 f7       	brne	.-22     	; 0x642 <__mulsf3_pse+0x64>
 658:	9e 3f       	cpi	r25, 0xFE	; 254
 65a:	51 05       	cpc	r21, r1
 65c:	70 f0       	brcs	.+28     	; 0x67a <__mulsf3_pse+0x9c>
 65e:	5c cf       	rjmp	.-328    	; 0x518 <__fp_inf>
 660:	a6 cf       	rjmp	.-180    	; 0x5ae <__fp_szero>
 662:	5f 3f       	cpi	r21, 0xFF	; 255
 664:	ec f3       	brlt	.-6      	; 0x660 <__mulsf3_pse+0x82>
 666:	98 3e       	cpi	r25, 0xE8	; 232
 668:	dc f3       	brlt	.-10     	; 0x660 <__mulsf3_pse+0x82>
 66a:	86 95       	lsr	r24
 66c:	77 95       	ror	r23
 66e:	67 95       	ror	r22
 670:	b7 95       	ror	r27
 672:	f7 95       	ror	r31
 674:	e7 95       	ror	r30
 676:	9f 5f       	subi	r25, 0xFF	; 255
 678:	c1 f7       	brne	.-16     	; 0x66a <__mulsf3_pse+0x8c>
 67a:	fe 2b       	or	r31, r30
 67c:	88 0f       	add	r24, r24
 67e:	91 1d       	adc	r25, r1
 680:	96 95       	lsr	r25
 682:	87 95       	ror	r24
 684:	97 f9       	bld	r25, 7
 686:	08 95       	ret

00000688 <_exit>:
 688:	f8 94       	cli

0000068a <__stop_program>:
 68a:	ff cf       	rjmp	.-2      	; 0x68a <__stop_program>
