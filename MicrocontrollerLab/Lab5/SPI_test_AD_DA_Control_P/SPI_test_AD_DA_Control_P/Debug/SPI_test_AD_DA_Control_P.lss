
SPI_test_AD_DA_Control_P.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000000e  00800100  00000688  0000071c  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00000688  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000006  0080010e  0080010e  0000072a  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  0000072a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  0000075c  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000038  00000000  00000000  00000798  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   0000095e  00000000  00000000  000007d0  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 000007b8  00000000  00000000  0000112e  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000308  00000000  00000000  000018e6  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  0000005c  00000000  00000000  00001bf0  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    0000045c  00000000  00000000  00001c4c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000188  00000000  00000000  000020a8  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000028  00000000  00000000  00002230  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	19 c0       	rjmp	.+50     	; 0x34 <__ctors_end>
   2:	33 c0       	rjmp	.+102    	; 0x6a <__bad_interrupt>
   4:	32 c0       	rjmp	.+100    	; 0x6a <__bad_interrupt>
   6:	31 c0       	rjmp	.+98     	; 0x6a <__bad_interrupt>
   8:	30 c0       	rjmp	.+96     	; 0x6a <__bad_interrupt>
   a:	2f c0       	rjmp	.+94     	; 0x6a <__bad_interrupt>
   c:	2e c0       	rjmp	.+92     	; 0x6a <__bad_interrupt>
   e:	2d c0       	rjmp	.+90     	; 0x6a <__bad_interrupt>
  10:	2c c0       	rjmp	.+88     	; 0x6a <__bad_interrupt>
  12:	2b c0       	rjmp	.+86     	; 0x6a <__bad_interrupt>
  14:	2a c0       	rjmp	.+84     	; 0x6a <__bad_interrupt>
  16:	29 c0       	rjmp	.+82     	; 0x6a <__bad_interrupt>
  18:	28 c0       	rjmp	.+80     	; 0x6a <__bad_interrupt>
  1a:	27 c0       	rjmp	.+78     	; 0x6a <__bad_interrupt>
  1c:	26 c0       	rjmp	.+76     	; 0x6a <__bad_interrupt>
  1e:	25 c0       	rjmp	.+74     	; 0x6a <__bad_interrupt>
  20:	24 c0       	rjmp	.+72     	; 0x6a <__bad_interrupt>
  22:	23 c0       	rjmp	.+70     	; 0x6a <__bad_interrupt>
  24:	22 c0       	rjmp	.+68     	; 0x6a <__bad_interrupt>
  26:	21 c0       	rjmp	.+66     	; 0x6a <__bad_interrupt>
  28:	20 c0       	rjmp	.+64     	; 0x6a <__bad_interrupt>
  2a:	1f c0       	rjmp	.+62     	; 0x6a <__bad_interrupt>
  2c:	1e c0       	rjmp	.+60     	; 0x6a <__bad_interrupt>
  2e:	1d c0       	rjmp	.+58     	; 0x6a <__bad_interrupt>
  30:	1c c0       	rjmp	.+56     	; 0x6a <__bad_interrupt>
  32:	1b c0       	rjmp	.+54     	; 0x6a <__bad_interrupt>

00000034 <__ctors_end>:
  34:	11 24       	eor	r1, r1
  36:	1f be       	out	0x3f, r1	; 63
  38:	cf ef       	ldi	r28, 0xFF	; 255
  3a:	d4 e0       	ldi	r29, 0x04	; 4
  3c:	de bf       	out	0x3e, r29	; 62
  3e:	cd bf       	out	0x3d, r28	; 61

00000040 <__do_copy_data>:
  40:	11 e0       	ldi	r17, 0x01	; 1
  42:	a0 e0       	ldi	r26, 0x00	; 0
  44:	b1 e0       	ldi	r27, 0x01	; 1
  46:	e8 e8       	ldi	r30, 0x88	; 136
  48:	f6 e0       	ldi	r31, 0x06	; 6
  4a:	02 c0       	rjmp	.+4      	; 0x50 <__do_copy_data+0x10>
  4c:	05 90       	lpm	r0, Z+
  4e:	0d 92       	st	X+, r0
  50:	ae 30       	cpi	r26, 0x0E	; 14
  52:	b1 07       	cpc	r27, r17
  54:	d9 f7       	brne	.-10     	; 0x4c <__do_copy_data+0xc>

00000056 <__do_clear_bss>:
  56:	21 e0       	ldi	r18, 0x01	; 1
  58:	ae e0       	ldi	r26, 0x0E	; 14
  5a:	b1 e0       	ldi	r27, 0x01	; 1
  5c:	01 c0       	rjmp	.+2      	; 0x60 <.do_clear_bss_start>

0000005e <.do_clear_bss_loop>:
  5e:	1d 92       	st	X+, r1

00000060 <.do_clear_bss_start>:
  60:	a4 31       	cpi	r26, 0x14	; 20
  62:	b2 07       	cpc	r27, r18
  64:	e1 f7       	brne	.-8      	; 0x5e <.do_clear_bss_loop>
  66:	18 d0       	rcall	.+48     	; 0x98 <main>
  68:	0d c3       	rjmp	.+1562   	; 0x684 <_exit>

0000006a <__bad_interrupt>:
  6a:	ca cf       	rjmp	.-108    	; 0x0 <__vectors>

0000006c <uart_putchar>:


// USART Functions

static int uart_putchar(char c, FILE *stream)
{
  6c:	cf 93       	push	r28
  6e:	c8 2f       	mov	r28, r24
	if (c == '\n') uart_putchar('\r', stream);
  70:	8a 30       	cpi	r24, 0x0A	; 10
  72:	11 f4       	brne	.+4      	; 0x78 <uart_putchar+0xc>
  74:	8d e0       	ldi	r24, 0x0D	; 13
  76:	fa df       	rcall	.-12     	; 0x6c <uart_putchar>
	
	loop_until_bit_is_set(UCSR0A, UDRE0);
  78:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__TEXT_REGION_LENGTH__+0x7fe0c0>
  7c:	85 ff       	sbrs	r24, 5
  7e:	fc cf       	rjmp	.-8      	; 0x78 <uart_putchar+0xc>
	UDR0 = c;
  80:	c0 93 c6 00 	sts	0x00C6, r28	; 0x8000c6 <__TEXT_REGION_LENGTH__+0x7fe0c6>
	
	return 0;
}
  84:	80 e0       	ldi	r24, 0x00	; 0
  86:	90 e0       	ldi	r25, 0x00	; 0
  88:	cf 91       	pop	r28
  8a:	08 95       	ret

0000008c <spi_write_read>:
static FILE mystdout = FDEV_SETUP_STREAM(uart_putchar, NULL, _FDEV_SETUP_WRITE);

// SPI write read function
unsigned char spi_write_read(unsigned char spi_data)
{
	SPDR=spi_data;
  8c:	8e bd       	out	0x2e, r24	; 46
	while ((SPSR & (1<<SPIF))==0); // Wait until the data transfer is complete
  8e:	0d b4       	in	r0, 0x2d	; 45
  90:	07 fe       	sbrs	r0, 7
  92:	fd cf       	rjmp	.-6      	; 0x8e <spi_write_read+0x2>
	return SPDR;
  94:	8e b5       	in	r24, 0x2e	; 46
}
  96:	08 95       	ret

00000098 <main>:
	float	Control, Max_Voltage, Kp;
	float	adc_input_v;
	float	Error;

	//USART Setup
	UBRR0H = MYUBRR >> 8;
  98:	10 92 c5 00 	sts	0x00C5, r1	; 0x8000c5 <__TEXT_REGION_LENGTH__+0x7fe0c5>
	UBRR0L = MYUBRR;
  9c:	87 e6       	ldi	r24, 0x67	; 103
  9e:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__TEXT_REGION_LENGTH__+0x7fe0c4>
	UCSR0B = (1<<RXEN0)|(1<<TXEN0);
  a2:	88 e1       	ldi	r24, 0x18	; 24
  a4:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__TEXT_REGION_LENGTH__+0x7fe0c1>
	stdout = &mystdout; //Required for printf init
  a8:	80 e0       	ldi	r24, 0x00	; 0
  aa:	91 e0       	ldi	r25, 0x01	; 1
  ac:	90 93 11 01 	sts	0x0111, r25	; 0x800111 <__data_end+0x3>
  b0:	80 93 10 01 	sts	0x0110, r24	; 0x800110 <__data_end+0x2>


	// AD initialization
	ADMUX  = 0b00000000; //Input on AD Channel 0
  b4:	10 92 7c 00 	sts	0x007C, r1	; 0x80007c <__TEXT_REGION_LENGTH__+0x7fe07c>
	ADCSRA = 0b10000111; // ADC on, /128 for a 16 MHz clock, interrupt off
  b8:	87 e8       	ldi	r24, 0x87	; 135
  ba:	80 93 7a 00 	sts	0x007A, r24	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fe07a>

	DDRB=0b00101100; //Set Output Ports for the SPI Interface
  be:	8c e2       	ldi	r24, 0x2C	; 44
  c0:	84 b9       	out	0x04, r24	; 4
	DDRD=0b10000010; //Set Output Ports for the Chip select and USART
  c2:	82 e8       	ldi	r24, 0x82	; 130
  c4:	8a b9       	out	0x0a, r24	; 10
	
	// SPI initialization
	SPCR=0b01010010;
  c6:	82 e5       	ldi	r24, 0x52	; 82
  c8:	8c bd       	out	0x2c, r24	; 44
	SPSR=0b00000000;
  ca:	1d bc       	out	0x2d, r1	; 45

	Vel_Set_v = -3.0;
  cc:	0f 2e       	mov	r0, r31
  ce:	c1 2c       	mov	r12, r1
  d0:	d1 2c       	mov	r13, r1
  d2:	f0 e4       	ldi	r31, 0x40	; 64
  d4:	ef 2e       	mov	r14, r31
  d6:	f0 ec       	ldi	r31, 0xC0	; 192
  d8:	ff 2e       	mov	r15, r31
  da:	f0 2d       	mov	r31, r0
	
	// Note if you have print statments active this will slow the control loop dramatically
	
	while(1)
	{
		Vel_Set_v += .0005;									// The motor velocity voltage is cycled from -3 volts to +3 volts
  dc:	2f e6       	ldi	r18, 0x6F	; 111
  de:	32 e1       	ldi	r19, 0x12	; 18
  e0:	43 e0       	ldi	r20, 0x03	; 3
  e2:	5a e3       	ldi	r21, 0x3A	; 58
  e4:	c7 01       	movw	r24, r14
  e6:	b6 01       	movw	r22, r12
  e8:	69 d0       	rcall	.+210    	; 0x1bc <__addsf3>
  ea:	6b 01       	movw	r12, r22
  ec:	7c 01       	movw	r14, r24
		if(Vel_Set_v >= 3.0) Vel_Set_v = -3.0;
  ee:	20 e0       	ldi	r18, 0x00	; 0
  f0:	30 e0       	ldi	r19, 0x00	; 0
  f2:	40 e4       	ldi	r20, 0x40	; 64
  f4:	50 e4       	ldi	r21, 0x40	; 64
  f6:	3b d2       	rcall	.+1142   	; 0x56e <__gesf2>
  f8:	88 23       	and	r24, r24
  fa:	44 f0       	brlt	.+16     	; 0x10c <main+0x74>
  fc:	0f 2e       	mov	r0, r31
  fe:	c1 2c       	mov	r12, r1
 100:	d1 2c       	mov	r13, r1
 102:	f0 e4       	ldi	r31, 0x40	; 64
 104:	ef 2e       	mov	r14, r31
 106:	f0 ec       	ldi	r31, 0xC0	; 192
 108:	ff 2e       	mov	r15, r31
 10a:	f0 2d       	mov	r31, r0


		ADCSRA = ADCSRA | 0b01000000;  					// Start AD conversion
 10c:	ea e7       	ldi	r30, 0x7A	; 122
 10e:	f0 e0       	ldi	r31, 0x00	; 0
 110:	80 81       	ld	r24, Z
 112:	80 64       	ori	r24, 0x40	; 64
 114:	80 83       	st	Z, r24
		while ((ADCSRA & 0b01000000) == 0b01000000); 	// Wait while AD conversion is executed
 116:	80 91 7a 00 	lds	r24, 0x007A	; 0x80007a <__TEXT_REGION_LENGTH__+0x7fe07a>
 11a:	86 fd       	sbrc	r24, 6
 11c:	fc cf       	rjmp	.-8      	; 0x116 <main+0x7e>

		adc_input = ADCW; 									// Read AD value
 11e:	60 91 78 00 	lds	r22, 0x0078	; 0x800078 <__TEXT_REGION_LENGTH__+0x7fe078>
 122:	70 91 79 00 	lds	r23, 0x0079	; 0x800079 <__TEXT_REGION_LENGTH__+0x7fe079>
		adc_input_v = (float) adc_input*(10./1024.)- 5.0;	// Convert the adc_input digital value (0 to 1024) to a voltage
 126:	80 e0       	ldi	r24, 0x00	; 0
 128:	90 e0       	ldi	r25, 0x00	; 0
 12a:	40 d1       	rcall	.+640    	; 0x3ac <__floatunsisf>
 12c:	20 e0       	ldi	r18, 0x00	; 0
 12e:	30 e0       	ldi	r19, 0x00	; 0
 130:	40 e2       	ldi	r20, 0x20	; 32
 132:	5c e3       	ldi	r21, 0x3C	; 60
 134:	20 d2       	rcall	.+1088   	; 0x576 <__mulsf3>
 136:	20 e0       	ldi	r18, 0x00	; 0
 138:	30 e0       	ldi	r19, 0x00	; 0
 13a:	40 ea       	ldi	r20, 0xA0	; 160
 13c:	50 e4       	ldi	r21, 0x40	; 64
 13e:	3d d0       	rcall	.+122    	; 0x1ba <__subsf3>
 140:	9b 01       	movw	r18, r22
 142:	ac 01       	movw	r20, r24
		// Note the input is bipolar +- 5 volts
		// Note that the (10./1024.) term needs the decimal point
		// or else it is interrupted as an integer and the result is zero
		// Control Equation

		Error   = (Vel_Set_v - adc_input_v);			// Error (units are voltage +- 5 volts)
 144:	c7 01       	movw	r24, r14
 146:	b6 01       	movw	r22, r12
 148:	38 d0       	rcall	.+112    	; 0x1ba <__subsf3>
 14a:	4b 01       	movw	r8, r22
 14c:	5c 01       	movw	r10, r24
		Control = Kp * Error;  						    // Control (units are voltage  +- 5 volts)

		if(fabs(Control) >= Max_Voltage)				// Check Maximum voltage
 14e:	9f 77       	andi	r25, 0x7F	; 127
 150:	20 e0       	ldi	r18, 0x00	; 0
 152:	30 e0       	ldi	r19, 0x00	; 0
 154:	40 ea       	ldi	r20, 0xA0	; 160
 156:	50 e4       	ldi	r21, 0x40	; 64
 158:	0a d2       	rcall	.+1044   	; 0x56e <__gesf2>
 15a:	88 23       	and	r24, r24
 15c:	54 f0       	brlt	.+20     	; 0x172 <main+0xda>
    The copysign() function returns \a __x but with the sign of \a __y.
    They work even if \a __x or \a __y are NaN or zero.
*/
__ATTR_CONST__ static inline double copysign (double __x, double __y)
{
    __asm__ (
 15e:	80 e0       	ldi	r24, 0x00	; 0
 160:	90 e0       	ldi	r25, 0x00	; 0
 162:	a0 ea       	ldi	r26, 0xA0	; 160
 164:	b0 e4       	ldi	r27, 0x40	; 64
 166:	9c 01       	movw	r18, r24
 168:	ad 01       	movw	r20, r26
 16a:	b7 fa       	bst	r11, 7
 16c:	57 f9       	bld	r21, 7
 16e:	49 01       	movw	r8, r18
 170:	5a 01       	movw	r10, r20
		Control = copysign(Max_Voltage,Control);

		adc_output = floor((Control + 5.)*4096./10.);  			// Convert control voltage to a digital number for output
 172:	20 e0       	ldi	r18, 0x00	; 0
 174:	30 e0       	ldi	r19, 0x00	; 0
 176:	40 ea       	ldi	r20, 0xA0	; 160
 178:	50 e4       	ldi	r21, 0x40	; 64
 17a:	c5 01       	movw	r24, r10
 17c:	b4 01       	movw	r22, r8
 17e:	1e d0       	rcall	.+60     	; 0x1bc <__addsf3>
 180:	20 e0       	ldi	r18, 0x00	; 0
 182:	30 e0       	ldi	r19, 0x00	; 0
 184:	40 e8       	ldi	r20, 0x80	; 128
 186:	55 e4       	ldi	r21, 0x45	; 69
 188:	f6 d1       	rcall	.+1004   	; 0x576 <__mulsf3>
 18a:	20 e0       	ldi	r18, 0x00	; 0
 18c:	30 e0       	ldi	r19, 0x00	; 0
 18e:	40 e2       	ldi	r20, 0x20	; 32
 190:	51 e4       	ldi	r21, 0x41	; 65
 192:	78 d0       	rcall	.+240    	; 0x284 <__divsf3>
 194:	48 d1       	rcall	.+656    	; 0x426 <floor>
 196:	de d0       	rcall	.+444    	; 0x354 <__fixunssfsi>
 198:	4b 01       	movw	r8, r22
 19a:	5c 01       	movw	r10, r24
		
		// printf("Error, vel_Set_v, adc_input, adc_output %d    %d    %d    %d\n", (int) Error,(int) Vel_Set_v,adc_input,adc_output );
		
		// Output adc_output to DAC
		spi_data_0 = 0x00; 								// Zero spi_data_0
		spi_data_0 = (adc_output & 0x0F00) >> 8; 		// Set up the first byte to write by mapping bits 8-11
 19c:	cb 01       	movw	r24, r22
 19e:	88 27       	eor	r24, r24
 1a0:	9f 70       	andi	r25, 0x0F	; 15
		// to the lower 4 bit positions and
		spi_data_0 = spi_data_0 + 0b00110000; 			// Adding the upper 4 DA control bits
		spi_data_1 = (adc_output & 0xFF); 				// Set up the second byte to write by mapping
		// bits 0-7 to the lower 8 bit positions
		cbi(PORTD,7); 									// Activate the chip - set chip select to zero
 1a2:	8b b1       	in	r24, 0x0b	; 11
 1a4:	8f 77       	andi	r24, 0x7F	; 127
 1a6:	8b b9       	out	0x0b, r24	; 11
		dummy_read = spi_write_read(spi_data_0); 		// Write/Read first byte
 1a8:	80 e3       	ldi	r24, 0x30	; 48
 1aa:	89 0f       	add	r24, r25
 1ac:	6f df       	rcall	.-290    	; 0x8c <spi_write_read>
		dummy_read = spi_write_read(spi_data_1); 		// Write/Read second byte
 1ae:	88 2d       	mov	r24, r8
 1b0:	6d df       	rcall	.-294    	; 0x8c <spi_write_read>
		sbi(PORTD,7); 									// Release the chip - set chip select to one
 1b2:	8b b1       	in	r24, 0x0b	; 11
 1b4:	80 68       	ori	r24, 0x80	; 128
 1b6:	8b b9       	out	0x0b, r24	; 11
	}
 1b8:	91 cf       	rjmp	.-222    	; 0xdc <main+0x44>

000001ba <__subsf3>:
 1ba:	50 58       	subi	r21, 0x80	; 128

000001bc <__addsf3>:
 1bc:	bb 27       	eor	r27, r27
 1be:	aa 27       	eor	r26, r26
 1c0:	0e d0       	rcall	.+28     	; 0x1de <__addsf3x>
 1c2:	84 c1       	rjmp	.+776    	; 0x4cc <__fp_round>
 1c4:	75 d1       	rcall	.+746    	; 0x4b0 <__fp_pscA>
 1c6:	30 f0       	brcs	.+12     	; 0x1d4 <__addsf3+0x18>
 1c8:	7a d1       	rcall	.+756    	; 0x4be <__fp_pscB>
 1ca:	20 f0       	brcs	.+8      	; 0x1d4 <__addsf3+0x18>
 1cc:	31 f4       	brne	.+12     	; 0x1da <__addsf3+0x1e>
 1ce:	9f 3f       	cpi	r25, 0xFF	; 255
 1d0:	11 f4       	brne	.+4      	; 0x1d6 <__addsf3+0x1a>
 1d2:	1e f4       	brtc	.+6      	; 0x1da <__addsf3+0x1e>
 1d4:	6a c1       	rjmp	.+724    	; 0x4aa <__fp_nan>
 1d6:	0e f4       	brtc	.+2      	; 0x1da <__addsf3+0x1e>
 1d8:	e0 95       	com	r30
 1da:	e7 fb       	bst	r30, 7
 1dc:	37 c1       	rjmp	.+622    	; 0x44c <__fp_inf>

000001de <__addsf3x>:
 1de:	e9 2f       	mov	r30, r25
 1e0:	86 d1       	rcall	.+780    	; 0x4ee <__fp_split3>
 1e2:	80 f3       	brcs	.-32     	; 0x1c4 <__addsf3+0x8>
 1e4:	ba 17       	cp	r27, r26
 1e6:	62 07       	cpc	r22, r18
 1e8:	73 07       	cpc	r23, r19
 1ea:	84 07       	cpc	r24, r20
 1ec:	95 07       	cpc	r25, r21
 1ee:	18 f0       	brcs	.+6      	; 0x1f6 <__addsf3x+0x18>
 1f0:	71 f4       	brne	.+28     	; 0x20e <__EEPROM_REGION_LENGTH__+0xe>
 1f2:	9e f5       	brtc	.+102    	; 0x25a <__EEPROM_REGION_LENGTH__+0x5a>
 1f4:	b5 c1       	rjmp	.+874    	; 0x560 <__fp_zero>
 1f6:	0e f4       	brtc	.+2      	; 0x1fa <__addsf3x+0x1c>
 1f8:	e0 95       	com	r30
 1fa:	0b 2e       	mov	r0, r27
 1fc:	ba 2f       	mov	r27, r26
 1fe:	a0 2d       	mov	r26, r0
 200:	0b 01       	movw	r0, r22
 202:	b9 01       	movw	r22, r18
 204:	90 01       	movw	r18, r0
 206:	0c 01       	movw	r0, r24
 208:	ca 01       	movw	r24, r20
 20a:	a0 01       	movw	r20, r0
 20c:	11 24       	eor	r1, r1
 20e:	ff 27       	eor	r31, r31
 210:	59 1b       	sub	r21, r25
 212:	99 f0       	breq	.+38     	; 0x23a <__EEPROM_REGION_LENGTH__+0x3a>
 214:	59 3f       	cpi	r21, 0xF9	; 249
 216:	50 f4       	brcc	.+20     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 218:	50 3e       	cpi	r21, 0xE0	; 224
 21a:	68 f1       	brcs	.+90     	; 0x276 <__EEPROM_REGION_LENGTH__+0x76>
 21c:	1a 16       	cp	r1, r26
 21e:	f0 40       	sbci	r31, 0x00	; 0
 220:	a2 2f       	mov	r26, r18
 222:	23 2f       	mov	r18, r19
 224:	34 2f       	mov	r19, r20
 226:	44 27       	eor	r20, r20
 228:	58 5f       	subi	r21, 0xF8	; 248
 22a:	f3 cf       	rjmp	.-26     	; 0x212 <__EEPROM_REGION_LENGTH__+0x12>
 22c:	46 95       	lsr	r20
 22e:	37 95       	ror	r19
 230:	27 95       	ror	r18
 232:	a7 95       	ror	r26
 234:	f0 40       	sbci	r31, 0x00	; 0
 236:	53 95       	inc	r21
 238:	c9 f7       	brne	.-14     	; 0x22c <__EEPROM_REGION_LENGTH__+0x2c>
 23a:	7e f4       	brtc	.+30     	; 0x25a <__EEPROM_REGION_LENGTH__+0x5a>
 23c:	1f 16       	cp	r1, r31
 23e:	ba 0b       	sbc	r27, r26
 240:	62 0b       	sbc	r22, r18
 242:	73 0b       	sbc	r23, r19
 244:	84 0b       	sbc	r24, r20
 246:	ba f0       	brmi	.+46     	; 0x276 <__EEPROM_REGION_LENGTH__+0x76>
 248:	91 50       	subi	r25, 0x01	; 1
 24a:	a1 f0       	breq	.+40     	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
 24c:	ff 0f       	add	r31, r31
 24e:	bb 1f       	adc	r27, r27
 250:	66 1f       	adc	r22, r22
 252:	77 1f       	adc	r23, r23
 254:	88 1f       	adc	r24, r24
 256:	c2 f7       	brpl	.-16     	; 0x248 <__EEPROM_REGION_LENGTH__+0x48>
 258:	0e c0       	rjmp	.+28     	; 0x276 <__EEPROM_REGION_LENGTH__+0x76>
 25a:	ba 0f       	add	r27, r26
 25c:	62 1f       	adc	r22, r18
 25e:	73 1f       	adc	r23, r19
 260:	84 1f       	adc	r24, r20
 262:	48 f4       	brcc	.+18     	; 0x276 <__EEPROM_REGION_LENGTH__+0x76>
 264:	87 95       	ror	r24
 266:	77 95       	ror	r23
 268:	67 95       	ror	r22
 26a:	b7 95       	ror	r27
 26c:	f7 95       	ror	r31
 26e:	9e 3f       	cpi	r25, 0xFE	; 254
 270:	08 f0       	brcs	.+2      	; 0x274 <__EEPROM_REGION_LENGTH__+0x74>
 272:	b3 cf       	rjmp	.-154    	; 0x1da <__addsf3+0x1e>
 274:	93 95       	inc	r25
 276:	88 0f       	add	r24, r24
 278:	08 f0       	brcs	.+2      	; 0x27c <__EEPROM_REGION_LENGTH__+0x7c>
 27a:	99 27       	eor	r25, r25
 27c:	ee 0f       	add	r30, r30
 27e:	97 95       	ror	r25
 280:	87 95       	ror	r24
 282:	08 95       	ret

00000284 <__divsf3>:
 284:	0c d0       	rcall	.+24     	; 0x29e <__divsf3x>
 286:	22 c1       	rjmp	.+580    	; 0x4cc <__fp_round>
 288:	1a d1       	rcall	.+564    	; 0x4be <__fp_pscB>
 28a:	40 f0       	brcs	.+16     	; 0x29c <__divsf3+0x18>
 28c:	11 d1       	rcall	.+546    	; 0x4b0 <__fp_pscA>
 28e:	30 f0       	brcs	.+12     	; 0x29c <__divsf3+0x18>
 290:	21 f4       	brne	.+8      	; 0x29a <__divsf3+0x16>
 292:	5f 3f       	cpi	r21, 0xFF	; 255
 294:	19 f0       	breq	.+6      	; 0x29c <__divsf3+0x18>
 296:	da c0       	rjmp	.+436    	; 0x44c <__fp_inf>
 298:	51 11       	cpse	r21, r1
 29a:	63 c1       	rjmp	.+710    	; 0x562 <__fp_szero>
 29c:	06 c1       	rjmp	.+524    	; 0x4aa <__fp_nan>

0000029e <__divsf3x>:
 29e:	27 d1       	rcall	.+590    	; 0x4ee <__fp_split3>
 2a0:	98 f3       	brcs	.-26     	; 0x288 <__divsf3+0x4>

000002a2 <__divsf3_pse>:
 2a2:	99 23       	and	r25, r25
 2a4:	c9 f3       	breq	.-14     	; 0x298 <__divsf3+0x14>
 2a6:	55 23       	and	r21, r21
 2a8:	b1 f3       	breq	.-20     	; 0x296 <__divsf3+0x12>
 2aa:	95 1b       	sub	r25, r21
 2ac:	55 0b       	sbc	r21, r21
 2ae:	bb 27       	eor	r27, r27
 2b0:	aa 27       	eor	r26, r26
 2b2:	62 17       	cp	r22, r18
 2b4:	73 07       	cpc	r23, r19
 2b6:	84 07       	cpc	r24, r20
 2b8:	38 f0       	brcs	.+14     	; 0x2c8 <__divsf3_pse+0x26>
 2ba:	9f 5f       	subi	r25, 0xFF	; 255
 2bc:	5f 4f       	sbci	r21, 0xFF	; 255
 2be:	22 0f       	add	r18, r18
 2c0:	33 1f       	adc	r19, r19
 2c2:	44 1f       	adc	r20, r20
 2c4:	aa 1f       	adc	r26, r26
 2c6:	a9 f3       	breq	.-22     	; 0x2b2 <__divsf3_pse+0x10>
 2c8:	33 d0       	rcall	.+102    	; 0x330 <__divsf3_pse+0x8e>
 2ca:	0e 2e       	mov	r0, r30
 2cc:	3a f0       	brmi	.+14     	; 0x2dc <__divsf3_pse+0x3a>
 2ce:	e0 e8       	ldi	r30, 0x80	; 128
 2d0:	30 d0       	rcall	.+96     	; 0x332 <__divsf3_pse+0x90>
 2d2:	91 50       	subi	r25, 0x01	; 1
 2d4:	50 40       	sbci	r21, 0x00	; 0
 2d6:	e6 95       	lsr	r30
 2d8:	00 1c       	adc	r0, r0
 2da:	ca f7       	brpl	.-14     	; 0x2ce <__divsf3_pse+0x2c>
 2dc:	29 d0       	rcall	.+82     	; 0x330 <__divsf3_pse+0x8e>
 2de:	fe 2f       	mov	r31, r30
 2e0:	27 d0       	rcall	.+78     	; 0x330 <__divsf3_pse+0x8e>
 2e2:	66 0f       	add	r22, r22
 2e4:	77 1f       	adc	r23, r23
 2e6:	88 1f       	adc	r24, r24
 2e8:	bb 1f       	adc	r27, r27
 2ea:	26 17       	cp	r18, r22
 2ec:	37 07       	cpc	r19, r23
 2ee:	48 07       	cpc	r20, r24
 2f0:	ab 07       	cpc	r26, r27
 2f2:	b0 e8       	ldi	r27, 0x80	; 128
 2f4:	09 f0       	breq	.+2      	; 0x2f8 <__divsf3_pse+0x56>
 2f6:	bb 0b       	sbc	r27, r27
 2f8:	80 2d       	mov	r24, r0
 2fa:	bf 01       	movw	r22, r30
 2fc:	ff 27       	eor	r31, r31
 2fe:	93 58       	subi	r25, 0x83	; 131
 300:	5f 4f       	sbci	r21, 0xFF	; 255
 302:	2a f0       	brmi	.+10     	; 0x30e <__divsf3_pse+0x6c>
 304:	9e 3f       	cpi	r25, 0xFE	; 254
 306:	51 05       	cpc	r21, r1
 308:	68 f0       	brcs	.+26     	; 0x324 <__divsf3_pse+0x82>
 30a:	a0 c0       	rjmp	.+320    	; 0x44c <__fp_inf>
 30c:	2a c1       	rjmp	.+596    	; 0x562 <__fp_szero>
 30e:	5f 3f       	cpi	r21, 0xFF	; 255
 310:	ec f3       	brlt	.-6      	; 0x30c <__divsf3_pse+0x6a>
 312:	98 3e       	cpi	r25, 0xE8	; 232
 314:	dc f3       	brlt	.-10     	; 0x30c <__divsf3_pse+0x6a>
 316:	86 95       	lsr	r24
 318:	77 95       	ror	r23
 31a:	67 95       	ror	r22
 31c:	b7 95       	ror	r27
 31e:	f7 95       	ror	r31
 320:	9f 5f       	subi	r25, 0xFF	; 255
 322:	c9 f7       	brne	.-14     	; 0x316 <__divsf3_pse+0x74>
 324:	88 0f       	add	r24, r24
 326:	91 1d       	adc	r25, r1
 328:	96 95       	lsr	r25
 32a:	87 95       	ror	r24
 32c:	97 f9       	bld	r25, 7
 32e:	08 95       	ret
 330:	e1 e0       	ldi	r30, 0x01	; 1
 332:	66 0f       	add	r22, r22
 334:	77 1f       	adc	r23, r23
 336:	88 1f       	adc	r24, r24
 338:	bb 1f       	adc	r27, r27
 33a:	62 17       	cp	r22, r18
 33c:	73 07       	cpc	r23, r19
 33e:	84 07       	cpc	r24, r20
 340:	ba 07       	cpc	r27, r26
 342:	20 f0       	brcs	.+8      	; 0x34c <__divsf3_pse+0xaa>
 344:	62 1b       	sub	r22, r18
 346:	73 0b       	sbc	r23, r19
 348:	84 0b       	sbc	r24, r20
 34a:	ba 0b       	sbc	r27, r26
 34c:	ee 1f       	adc	r30, r30
 34e:	88 f7       	brcc	.-30     	; 0x332 <__divsf3_pse+0x90>
 350:	e0 95       	com	r30
 352:	08 95       	ret

00000354 <__fixunssfsi>:
 354:	d4 d0       	rcall	.+424    	; 0x4fe <__fp_splitA>
 356:	88 f0       	brcs	.+34     	; 0x37a <__fixunssfsi+0x26>
 358:	9f 57       	subi	r25, 0x7F	; 127
 35a:	90 f0       	brcs	.+36     	; 0x380 <__fixunssfsi+0x2c>
 35c:	b9 2f       	mov	r27, r25
 35e:	99 27       	eor	r25, r25
 360:	b7 51       	subi	r27, 0x17	; 23
 362:	a0 f0       	brcs	.+40     	; 0x38c <__fixunssfsi+0x38>
 364:	d1 f0       	breq	.+52     	; 0x39a <__fixunssfsi+0x46>
 366:	66 0f       	add	r22, r22
 368:	77 1f       	adc	r23, r23
 36a:	88 1f       	adc	r24, r24
 36c:	99 1f       	adc	r25, r25
 36e:	1a f0       	brmi	.+6      	; 0x376 <__fixunssfsi+0x22>
 370:	ba 95       	dec	r27
 372:	c9 f7       	brne	.-14     	; 0x366 <__fixunssfsi+0x12>
 374:	12 c0       	rjmp	.+36     	; 0x39a <__fixunssfsi+0x46>
 376:	b1 30       	cpi	r27, 0x01	; 1
 378:	81 f0       	breq	.+32     	; 0x39a <__fixunssfsi+0x46>
 37a:	f2 d0       	rcall	.+484    	; 0x560 <__fp_zero>
 37c:	b1 e0       	ldi	r27, 0x01	; 1
 37e:	08 95       	ret
 380:	ef c0       	rjmp	.+478    	; 0x560 <__fp_zero>
 382:	67 2f       	mov	r22, r23
 384:	78 2f       	mov	r23, r24
 386:	88 27       	eor	r24, r24
 388:	b8 5f       	subi	r27, 0xF8	; 248
 38a:	39 f0       	breq	.+14     	; 0x39a <__fixunssfsi+0x46>
 38c:	b9 3f       	cpi	r27, 0xF9	; 249
 38e:	cc f3       	brlt	.-14     	; 0x382 <__fixunssfsi+0x2e>
 390:	86 95       	lsr	r24
 392:	77 95       	ror	r23
 394:	67 95       	ror	r22
 396:	b3 95       	inc	r27
 398:	d9 f7       	brne	.-10     	; 0x390 <__fixunssfsi+0x3c>
 39a:	3e f4       	brtc	.+14     	; 0x3aa <__fixunssfsi+0x56>
 39c:	90 95       	com	r25
 39e:	80 95       	com	r24
 3a0:	70 95       	com	r23
 3a2:	61 95       	neg	r22
 3a4:	7f 4f       	sbci	r23, 0xFF	; 255
 3a6:	8f 4f       	sbci	r24, 0xFF	; 255
 3a8:	9f 4f       	sbci	r25, 0xFF	; 255
 3aa:	08 95       	ret

000003ac <__floatunsisf>:
 3ac:	e8 94       	clt
 3ae:	09 c0       	rjmp	.+18     	; 0x3c2 <__floatsisf+0x12>

000003b0 <__floatsisf>:
 3b0:	97 fb       	bst	r25, 7
 3b2:	3e f4       	brtc	.+14     	; 0x3c2 <__floatsisf+0x12>
 3b4:	90 95       	com	r25
 3b6:	80 95       	com	r24
 3b8:	70 95       	com	r23
 3ba:	61 95       	neg	r22
 3bc:	7f 4f       	sbci	r23, 0xFF	; 255
 3be:	8f 4f       	sbci	r24, 0xFF	; 255
 3c0:	9f 4f       	sbci	r25, 0xFF	; 255
 3c2:	99 23       	and	r25, r25
 3c4:	a9 f0       	breq	.+42     	; 0x3f0 <__floatsisf+0x40>
 3c6:	f9 2f       	mov	r31, r25
 3c8:	96 e9       	ldi	r25, 0x96	; 150
 3ca:	bb 27       	eor	r27, r27
 3cc:	93 95       	inc	r25
 3ce:	f6 95       	lsr	r31
 3d0:	87 95       	ror	r24
 3d2:	77 95       	ror	r23
 3d4:	67 95       	ror	r22
 3d6:	b7 95       	ror	r27
 3d8:	f1 11       	cpse	r31, r1
 3da:	f8 cf       	rjmp	.-16     	; 0x3cc <__floatsisf+0x1c>
 3dc:	fa f4       	brpl	.+62     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3de:	bb 0f       	add	r27, r27
 3e0:	11 f4       	brne	.+4      	; 0x3e6 <__floatsisf+0x36>
 3e2:	60 ff       	sbrs	r22, 0
 3e4:	1b c0       	rjmp	.+54     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3e6:	6f 5f       	subi	r22, 0xFF	; 255
 3e8:	7f 4f       	sbci	r23, 0xFF	; 255
 3ea:	8f 4f       	sbci	r24, 0xFF	; 255
 3ec:	9f 4f       	sbci	r25, 0xFF	; 255
 3ee:	16 c0       	rjmp	.+44     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 3f0:	88 23       	and	r24, r24
 3f2:	11 f0       	breq	.+4      	; 0x3f8 <__floatsisf+0x48>
 3f4:	96 e9       	ldi	r25, 0x96	; 150
 3f6:	11 c0       	rjmp	.+34     	; 0x41a <__DATA_REGION_LENGTH__+0x1a>
 3f8:	77 23       	and	r23, r23
 3fa:	21 f0       	breq	.+8      	; 0x404 <__DATA_REGION_LENGTH__+0x4>
 3fc:	9e e8       	ldi	r25, 0x8E	; 142
 3fe:	87 2f       	mov	r24, r23
 400:	76 2f       	mov	r23, r22
 402:	05 c0       	rjmp	.+10     	; 0x40e <__DATA_REGION_LENGTH__+0xe>
 404:	66 23       	and	r22, r22
 406:	71 f0       	breq	.+28     	; 0x424 <__DATA_REGION_LENGTH__+0x24>
 408:	96 e8       	ldi	r25, 0x86	; 134
 40a:	86 2f       	mov	r24, r22
 40c:	70 e0       	ldi	r23, 0x00	; 0
 40e:	60 e0       	ldi	r22, 0x00	; 0
 410:	2a f0       	brmi	.+10     	; 0x41c <__DATA_REGION_LENGTH__+0x1c>
 412:	9a 95       	dec	r25
 414:	66 0f       	add	r22, r22
 416:	77 1f       	adc	r23, r23
 418:	88 1f       	adc	r24, r24
 41a:	da f7       	brpl	.-10     	; 0x412 <__DATA_REGION_LENGTH__+0x12>
 41c:	88 0f       	add	r24, r24
 41e:	96 95       	lsr	r25
 420:	87 95       	ror	r24
 422:	97 f9       	bld	r25, 7
 424:	08 95       	ret

00000426 <floor>:
 426:	85 d0       	rcall	.+266    	; 0x532 <__fp_trunc>
 428:	80 f0       	brcs	.+32     	; 0x44a <floor+0x24>
 42a:	9f 37       	cpi	r25, 0x7F	; 127
 42c:	40 f4       	brcc	.+16     	; 0x43e <floor+0x18>
 42e:	91 11       	cpse	r25, r1
 430:	0e f0       	brts	.+2      	; 0x434 <floor+0xe>
 432:	97 c0       	rjmp	.+302    	; 0x562 <__fp_szero>
 434:	60 e0       	ldi	r22, 0x00	; 0
 436:	70 e0       	ldi	r23, 0x00	; 0
 438:	80 e8       	ldi	r24, 0x80	; 128
 43a:	9f eb       	ldi	r25, 0xBF	; 191
 43c:	08 95       	ret
 43e:	26 f4       	brtc	.+8      	; 0x448 <floor+0x22>
 440:	1b 16       	cp	r1, r27
 442:	61 1d       	adc	r22, r1
 444:	71 1d       	adc	r23, r1
 446:	81 1d       	adc	r24, r1
 448:	07 c0       	rjmp	.+14     	; 0x458 <__fp_mintl>
 44a:	21 c0       	rjmp	.+66     	; 0x48e <__fp_mpack>

0000044c <__fp_inf>:
 44c:	97 f9       	bld	r25, 7
 44e:	9f 67       	ori	r25, 0x7F	; 127
 450:	80 e8       	ldi	r24, 0x80	; 128
 452:	70 e0       	ldi	r23, 0x00	; 0
 454:	60 e0       	ldi	r22, 0x00	; 0
 456:	08 95       	ret

00000458 <__fp_mintl>:
 458:	88 23       	and	r24, r24
 45a:	71 f4       	brne	.+28     	; 0x478 <__fp_mintl+0x20>
 45c:	77 23       	and	r23, r23
 45e:	21 f0       	breq	.+8      	; 0x468 <__fp_mintl+0x10>
 460:	98 50       	subi	r25, 0x08	; 8
 462:	87 2b       	or	r24, r23
 464:	76 2f       	mov	r23, r22
 466:	07 c0       	rjmp	.+14     	; 0x476 <__fp_mintl+0x1e>
 468:	66 23       	and	r22, r22
 46a:	11 f4       	brne	.+4      	; 0x470 <__fp_mintl+0x18>
 46c:	99 27       	eor	r25, r25
 46e:	0d c0       	rjmp	.+26     	; 0x48a <__fp_mintl+0x32>
 470:	90 51       	subi	r25, 0x10	; 16
 472:	86 2b       	or	r24, r22
 474:	70 e0       	ldi	r23, 0x00	; 0
 476:	60 e0       	ldi	r22, 0x00	; 0
 478:	2a f0       	brmi	.+10     	; 0x484 <__fp_mintl+0x2c>
 47a:	9a 95       	dec	r25
 47c:	66 0f       	add	r22, r22
 47e:	77 1f       	adc	r23, r23
 480:	88 1f       	adc	r24, r24
 482:	da f7       	brpl	.-10     	; 0x47a <__fp_mintl+0x22>
 484:	88 0f       	add	r24, r24
 486:	96 95       	lsr	r25
 488:	87 95       	ror	r24
 48a:	97 f9       	bld	r25, 7
 48c:	08 95       	ret

0000048e <__fp_mpack>:
 48e:	9f 3f       	cpi	r25, 0xFF	; 255
 490:	31 f0       	breq	.+12     	; 0x49e <__fp_mpack_finite+0xc>

00000492 <__fp_mpack_finite>:
 492:	91 50       	subi	r25, 0x01	; 1
 494:	20 f4       	brcc	.+8      	; 0x49e <__fp_mpack_finite+0xc>
 496:	87 95       	ror	r24
 498:	77 95       	ror	r23
 49a:	67 95       	ror	r22
 49c:	b7 95       	ror	r27
 49e:	88 0f       	add	r24, r24
 4a0:	91 1d       	adc	r25, r1
 4a2:	96 95       	lsr	r25
 4a4:	87 95       	ror	r24
 4a6:	97 f9       	bld	r25, 7
 4a8:	08 95       	ret

000004aa <__fp_nan>:
 4aa:	9f ef       	ldi	r25, 0xFF	; 255
 4ac:	80 ec       	ldi	r24, 0xC0	; 192
 4ae:	08 95       	ret

000004b0 <__fp_pscA>:
 4b0:	00 24       	eor	r0, r0
 4b2:	0a 94       	dec	r0
 4b4:	16 16       	cp	r1, r22
 4b6:	17 06       	cpc	r1, r23
 4b8:	18 06       	cpc	r1, r24
 4ba:	09 06       	cpc	r0, r25
 4bc:	08 95       	ret

000004be <__fp_pscB>:
 4be:	00 24       	eor	r0, r0
 4c0:	0a 94       	dec	r0
 4c2:	12 16       	cp	r1, r18
 4c4:	13 06       	cpc	r1, r19
 4c6:	14 06       	cpc	r1, r20
 4c8:	05 06       	cpc	r0, r21
 4ca:	08 95       	ret

000004cc <__fp_round>:
 4cc:	09 2e       	mov	r0, r25
 4ce:	03 94       	inc	r0
 4d0:	00 0c       	add	r0, r0
 4d2:	11 f4       	brne	.+4      	; 0x4d8 <__fp_round+0xc>
 4d4:	88 23       	and	r24, r24
 4d6:	52 f0       	brmi	.+20     	; 0x4ec <__fp_round+0x20>
 4d8:	bb 0f       	add	r27, r27
 4da:	40 f4       	brcc	.+16     	; 0x4ec <__fp_round+0x20>
 4dc:	bf 2b       	or	r27, r31
 4de:	11 f4       	brne	.+4      	; 0x4e4 <__fp_round+0x18>
 4e0:	60 ff       	sbrs	r22, 0
 4e2:	04 c0       	rjmp	.+8      	; 0x4ec <__fp_round+0x20>
 4e4:	6f 5f       	subi	r22, 0xFF	; 255
 4e6:	7f 4f       	sbci	r23, 0xFF	; 255
 4e8:	8f 4f       	sbci	r24, 0xFF	; 255
 4ea:	9f 4f       	sbci	r25, 0xFF	; 255
 4ec:	08 95       	ret

000004ee <__fp_split3>:
 4ee:	57 fd       	sbrc	r21, 7
 4f0:	90 58       	subi	r25, 0x80	; 128
 4f2:	44 0f       	add	r20, r20
 4f4:	55 1f       	adc	r21, r21
 4f6:	59 f0       	breq	.+22     	; 0x50e <__stack+0xf>
 4f8:	5f 3f       	cpi	r21, 0xFF	; 255
 4fa:	71 f0       	breq	.+28     	; 0x518 <__stack+0x19>
 4fc:	47 95       	ror	r20

000004fe <__fp_splitA>:
 4fe:	88 0f       	add	r24, r24
 500:	97 fb       	bst	r25, 7
 502:	99 1f       	adc	r25, r25
 504:	61 f0       	breq	.+24     	; 0x51e <__stack+0x1f>
 506:	9f 3f       	cpi	r25, 0xFF	; 255
 508:	79 f0       	breq	.+30     	; 0x528 <__stack+0x29>
 50a:	87 95       	ror	r24
 50c:	08 95       	ret
 50e:	12 16       	cp	r1, r18
 510:	13 06       	cpc	r1, r19
 512:	14 06       	cpc	r1, r20
 514:	55 1f       	adc	r21, r21
 516:	f2 cf       	rjmp	.-28     	; 0x4fc <__fp_split3+0xe>
 518:	46 95       	lsr	r20
 51a:	f1 df       	rcall	.-30     	; 0x4fe <__fp_splitA>
 51c:	08 c0       	rjmp	.+16     	; 0x52e <__stack+0x2f>
 51e:	16 16       	cp	r1, r22
 520:	17 06       	cpc	r1, r23
 522:	18 06       	cpc	r1, r24
 524:	99 1f       	adc	r25, r25
 526:	f1 cf       	rjmp	.-30     	; 0x50a <__stack+0xb>
 528:	86 95       	lsr	r24
 52a:	71 05       	cpc	r23, r1
 52c:	61 05       	cpc	r22, r1
 52e:	08 94       	sec
 530:	08 95       	ret

00000532 <__fp_trunc>:
 532:	e5 df       	rcall	.-54     	; 0x4fe <__fp_splitA>
 534:	a0 f0       	brcs	.+40     	; 0x55e <__fp_trunc+0x2c>
 536:	be e7       	ldi	r27, 0x7E	; 126
 538:	b9 17       	cp	r27, r25
 53a:	88 f4       	brcc	.+34     	; 0x55e <__fp_trunc+0x2c>
 53c:	bb 27       	eor	r27, r27
 53e:	9f 38       	cpi	r25, 0x8F	; 143
 540:	60 f4       	brcc	.+24     	; 0x55a <__fp_trunc+0x28>
 542:	16 16       	cp	r1, r22
 544:	b1 1d       	adc	r27, r1
 546:	67 2f       	mov	r22, r23
 548:	78 2f       	mov	r23, r24
 54a:	88 27       	eor	r24, r24
 54c:	98 5f       	subi	r25, 0xF8	; 248
 54e:	f7 cf       	rjmp	.-18     	; 0x53e <__fp_trunc+0xc>
 550:	86 95       	lsr	r24
 552:	77 95       	ror	r23
 554:	67 95       	ror	r22
 556:	b1 1d       	adc	r27, r1
 558:	93 95       	inc	r25
 55a:	96 39       	cpi	r25, 0x96	; 150
 55c:	c8 f3       	brcs	.-14     	; 0x550 <__fp_trunc+0x1e>
 55e:	08 95       	ret

00000560 <__fp_zero>:
 560:	e8 94       	clt

00000562 <__fp_szero>:
 562:	bb 27       	eor	r27, r27
 564:	66 27       	eor	r22, r22
 566:	77 27       	eor	r23, r23
 568:	cb 01       	movw	r24, r22
 56a:	97 f9       	bld	r25, 7
 56c:	08 95       	ret

0000056e <__gesf2>:
 56e:	66 d0       	rcall	.+204    	; 0x63c <__fp_cmp>
 570:	08 f4       	brcc	.+2      	; 0x574 <__gesf2+0x6>
 572:	8f ef       	ldi	r24, 0xFF	; 255
 574:	08 95       	ret

00000576 <__mulsf3>:
 576:	0b d0       	rcall	.+22     	; 0x58e <__mulsf3x>
 578:	a9 cf       	rjmp	.-174    	; 0x4cc <__fp_round>
 57a:	9a df       	rcall	.-204    	; 0x4b0 <__fp_pscA>
 57c:	28 f0       	brcs	.+10     	; 0x588 <__mulsf3+0x12>
 57e:	9f df       	rcall	.-194    	; 0x4be <__fp_pscB>
 580:	18 f0       	brcs	.+6      	; 0x588 <__mulsf3+0x12>
 582:	95 23       	and	r25, r21
 584:	09 f0       	breq	.+2      	; 0x588 <__mulsf3+0x12>
 586:	62 cf       	rjmp	.-316    	; 0x44c <__fp_inf>
 588:	90 cf       	rjmp	.-224    	; 0x4aa <__fp_nan>
 58a:	11 24       	eor	r1, r1
 58c:	ea cf       	rjmp	.-44     	; 0x562 <__fp_szero>

0000058e <__mulsf3x>:
 58e:	af df       	rcall	.-162    	; 0x4ee <__fp_split3>
 590:	a0 f3       	brcs	.-24     	; 0x57a <__mulsf3+0x4>

00000592 <__mulsf3_pse>:
 592:	95 9f       	mul	r25, r21
 594:	d1 f3       	breq	.-12     	; 0x58a <__mulsf3+0x14>
 596:	95 0f       	add	r25, r21
 598:	50 e0       	ldi	r21, 0x00	; 0
 59a:	55 1f       	adc	r21, r21
 59c:	62 9f       	mul	r22, r18
 59e:	f0 01       	movw	r30, r0
 5a0:	72 9f       	mul	r23, r18
 5a2:	bb 27       	eor	r27, r27
 5a4:	f0 0d       	add	r31, r0
 5a6:	b1 1d       	adc	r27, r1
 5a8:	63 9f       	mul	r22, r19
 5aa:	aa 27       	eor	r26, r26
 5ac:	f0 0d       	add	r31, r0
 5ae:	b1 1d       	adc	r27, r1
 5b0:	aa 1f       	adc	r26, r26
 5b2:	64 9f       	mul	r22, r20
 5b4:	66 27       	eor	r22, r22
 5b6:	b0 0d       	add	r27, r0
 5b8:	a1 1d       	adc	r26, r1
 5ba:	66 1f       	adc	r22, r22
 5bc:	82 9f       	mul	r24, r18
 5be:	22 27       	eor	r18, r18
 5c0:	b0 0d       	add	r27, r0
 5c2:	a1 1d       	adc	r26, r1
 5c4:	62 1f       	adc	r22, r18
 5c6:	73 9f       	mul	r23, r19
 5c8:	b0 0d       	add	r27, r0
 5ca:	a1 1d       	adc	r26, r1
 5cc:	62 1f       	adc	r22, r18
 5ce:	83 9f       	mul	r24, r19
 5d0:	a0 0d       	add	r26, r0
 5d2:	61 1d       	adc	r22, r1
 5d4:	22 1f       	adc	r18, r18
 5d6:	74 9f       	mul	r23, r20
 5d8:	33 27       	eor	r19, r19
 5da:	a0 0d       	add	r26, r0
 5dc:	61 1d       	adc	r22, r1
 5de:	23 1f       	adc	r18, r19
 5e0:	84 9f       	mul	r24, r20
 5e2:	60 0d       	add	r22, r0
 5e4:	21 1d       	adc	r18, r1
 5e6:	82 2f       	mov	r24, r18
 5e8:	76 2f       	mov	r23, r22
 5ea:	6a 2f       	mov	r22, r26
 5ec:	11 24       	eor	r1, r1
 5ee:	9f 57       	subi	r25, 0x7F	; 127
 5f0:	50 40       	sbci	r21, 0x00	; 0
 5f2:	8a f0       	brmi	.+34     	; 0x616 <__mulsf3_pse+0x84>
 5f4:	e1 f0       	breq	.+56     	; 0x62e <__mulsf3_pse+0x9c>
 5f6:	88 23       	and	r24, r24
 5f8:	4a f0       	brmi	.+18     	; 0x60c <__mulsf3_pse+0x7a>
 5fa:	ee 0f       	add	r30, r30
 5fc:	ff 1f       	adc	r31, r31
 5fe:	bb 1f       	adc	r27, r27
 600:	66 1f       	adc	r22, r22
 602:	77 1f       	adc	r23, r23
 604:	88 1f       	adc	r24, r24
 606:	91 50       	subi	r25, 0x01	; 1
 608:	50 40       	sbci	r21, 0x00	; 0
 60a:	a9 f7       	brne	.-22     	; 0x5f6 <__mulsf3_pse+0x64>
 60c:	9e 3f       	cpi	r25, 0xFE	; 254
 60e:	51 05       	cpc	r21, r1
 610:	70 f0       	brcs	.+28     	; 0x62e <__mulsf3_pse+0x9c>
 612:	1c cf       	rjmp	.-456    	; 0x44c <__fp_inf>
 614:	a6 cf       	rjmp	.-180    	; 0x562 <__fp_szero>
 616:	5f 3f       	cpi	r21, 0xFF	; 255
 618:	ec f3       	brlt	.-6      	; 0x614 <__mulsf3_pse+0x82>
 61a:	98 3e       	cpi	r25, 0xE8	; 232
 61c:	dc f3       	brlt	.-10     	; 0x614 <__mulsf3_pse+0x82>
 61e:	86 95       	lsr	r24
 620:	77 95       	ror	r23
 622:	67 95       	ror	r22
 624:	b7 95       	ror	r27
 626:	f7 95       	ror	r31
 628:	e7 95       	ror	r30
 62a:	9f 5f       	subi	r25, 0xFF	; 255
 62c:	c1 f7       	brne	.-16     	; 0x61e <__mulsf3_pse+0x8c>
 62e:	fe 2b       	or	r31, r30
 630:	88 0f       	add	r24, r24
 632:	91 1d       	adc	r25, r1
 634:	96 95       	lsr	r25
 636:	87 95       	ror	r24
 638:	97 f9       	bld	r25, 7
 63a:	08 95       	ret

0000063c <__fp_cmp>:
 63c:	99 0f       	add	r25, r25
 63e:	00 08       	sbc	r0, r0
 640:	55 0f       	add	r21, r21
 642:	aa 0b       	sbc	r26, r26
 644:	e0 e8       	ldi	r30, 0x80	; 128
 646:	fe ef       	ldi	r31, 0xFE	; 254
 648:	16 16       	cp	r1, r22
 64a:	17 06       	cpc	r1, r23
 64c:	e8 07       	cpc	r30, r24
 64e:	f9 07       	cpc	r31, r25
 650:	c0 f0       	brcs	.+48     	; 0x682 <__fp_cmp+0x46>
 652:	12 16       	cp	r1, r18
 654:	13 06       	cpc	r1, r19
 656:	e4 07       	cpc	r30, r20
 658:	f5 07       	cpc	r31, r21
 65a:	98 f0       	brcs	.+38     	; 0x682 <__fp_cmp+0x46>
 65c:	62 1b       	sub	r22, r18
 65e:	73 0b       	sbc	r23, r19
 660:	84 0b       	sbc	r24, r20
 662:	95 0b       	sbc	r25, r21
 664:	39 f4       	brne	.+14     	; 0x674 <__fp_cmp+0x38>
 666:	0a 26       	eor	r0, r26
 668:	61 f0       	breq	.+24     	; 0x682 <__fp_cmp+0x46>
 66a:	23 2b       	or	r18, r19
 66c:	24 2b       	or	r18, r20
 66e:	25 2b       	or	r18, r21
 670:	21 f4       	brne	.+8      	; 0x67a <__fp_cmp+0x3e>
 672:	08 95       	ret
 674:	0a 26       	eor	r0, r26
 676:	09 f4       	brne	.+2      	; 0x67a <__fp_cmp+0x3e>
 678:	a1 40       	sbci	r26, 0x01	; 1
 67a:	a6 95       	lsr	r26
 67c:	8f ef       	ldi	r24, 0xFF	; 255
 67e:	81 1d       	adc	r24, r1
 680:	81 1d       	adc	r24, r1
 682:	08 95       	ret

00000684 <_exit>:
 684:	f8 94       	cli

00000686 <__stop_program>:
 686:	ff cf       	rjmp	.-2      	; 0x686 <__stop_program>
