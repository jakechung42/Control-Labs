
xmega_HDD_StateSpace_fullObs_Integrator.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         00001b48  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         0000008e  00802000  00001b48  00001bdc  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000064  0080208e  0080208e  00001c6a  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00001c6a  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00001cc8  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000078  00000000  00000000  00001d08  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00006073  00000000  00000000  00001d80  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00003e79  00000000  00000000  00007df3  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00000887  00000000  00000000  0000bc6c  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000188  00000000  00000000  0000c4f4  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000049df  00000000  00000000  0000c67c  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000003a0  00000000  00000000  0001105b  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000068  00000000  00000000  000113fb  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 00 01 	jmp	0x200	; 0x200 <__ctors_end>
       4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
       8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
       c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      10:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      14:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      18:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      1c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      20:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      24:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      28:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      2c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      30:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      34:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      38:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      3c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      40:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      44:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      48:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      4c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      50:	0c 94 39 01 	jmp	0x272	; 0x272 <__vector_20>
      54:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      58:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      5c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      60:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      64:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      68:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      6c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      70:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      74:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      78:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      7c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      80:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      84:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      88:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      8c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      90:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      94:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      98:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      9c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      a0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      a4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      a8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      ac:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      b0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      b4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      b8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      bc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      c0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      c4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      c8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      cc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      d0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      d4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      d8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      dc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      e0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      e4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      e8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      ec:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      f0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      f4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      f8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
      fc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     100:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     104:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     108:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     10c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     110:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     114:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     118:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     11c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     120:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     124:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     128:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     12c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     130:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     134:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     138:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     13c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     140:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     144:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     148:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     14c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     150:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     154:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     158:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     15c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     160:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     164:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     168:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     16c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     170:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     174:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     178:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     17c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     180:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     184:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     188:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     18c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     190:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     194:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     198:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     19c:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1a0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1a4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1a8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1ac:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1b0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1b4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1b8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1bc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1c0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1c4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1c8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1cc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1d0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1d4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1d8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1dc:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1e0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1e4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1e8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1ec:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1f0:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1f4:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>
     1f8:	0c 94 26 01 	jmp	0x24c	; 0x24c <__bad_interrupt>

000001fc <__trampolines_start>:
     1fc:	0c 94 28 01 	jmp	0x250	; 0x250 <put_char>

00000200 <__ctors_end>:
     200:	11 24       	eor	r1, r1
     202:	1f be       	out	0x3f, r1	; 63
     204:	cf ef       	ldi	r28, 0xFF	; 255
     206:	cd bf       	out	0x3d, r28	; 61
     208:	df e3       	ldi	r29, 0x3F	; 63
     20a:	de bf       	out	0x3e, r29	; 62
     20c:	00 e0       	ldi	r16, 0x00	; 0
     20e:	0c bf       	out	0x3c, r16	; 60
     210:	18 be       	out	0x38, r1	; 56
     212:	19 be       	out	0x39, r1	; 57
     214:	1a be       	out	0x3a, r1	; 58
     216:	1b be       	out	0x3b, r1	; 59

00000218 <__do_copy_data>:
     218:	10 e2       	ldi	r17, 0x20	; 32
     21a:	a0 e0       	ldi	r26, 0x00	; 0
     21c:	b0 e2       	ldi	r27, 0x20	; 32
     21e:	e8 e4       	ldi	r30, 0x48	; 72
     220:	fb e1       	ldi	r31, 0x1B	; 27
     222:	00 e0       	ldi	r16, 0x00	; 0
     224:	0b bf       	out	0x3b, r16	; 59
     226:	02 c0       	rjmp	.+4      	; 0x22c <__do_copy_data+0x14>
     228:	07 90       	elpm	r0, Z+
     22a:	0d 92       	st	X+, r0
     22c:	ae 38       	cpi	r26, 0x8E	; 142
     22e:	b1 07       	cpc	r27, r17
     230:	d9 f7       	brne	.-10     	; 0x228 <__do_copy_data+0x10>
     232:	1b be       	out	0x3b, r1	; 59

00000234 <__do_clear_bss>:
     234:	20 e2       	ldi	r18, 0x20	; 32
     236:	ae e8       	ldi	r26, 0x8E	; 142
     238:	b0 e2       	ldi	r27, 0x20	; 32
     23a:	01 c0       	rjmp	.+2      	; 0x23e <.do_clear_bss_start>

0000023c <.do_clear_bss_loop>:
     23c:	1d 92       	st	X+, r1

0000023e <.do_clear_bss_start>:
     23e:	a2 3f       	cpi	r26, 0xF2	; 242
     240:	b2 07       	cpc	r27, r18
     242:	e1 f7       	brne	.-8      	; 0x23c <.do_clear_bss_loop>
     244:	0e 94 bc 06 	call	0xd78	; 0xd78 <main>
     248:	0c 94 a2 0d 	jmp	0x1b44	; 0x1b44 <_exit>

0000024c <__bad_interrupt>:
     24c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000250 <put_char>:
	fdevopen(&put_char,NULL);

}

static int put_char(char c, FILE *stream)
{
     250:	cf 93       	push	r28
     252:	c8 2f       	mov	r28, r24
	if (c == '\n') put_char('\r',stream);		//add return to newline character for term
     254:	8a 30       	cpi	r24, 0x0A	; 10
     256:	19 f4       	brne	.+6      	; 0x25e <put_char+0xe>
     258:	8d e0       	ldi	r24, 0x0D	; 13
     25a:	0e 94 28 01 	call	0x250	; 0x250 <put_char>

	while(!(USARTC0.STATUS & USART_DREIF_bm)); //loop until Tx is ready
     25e:	80 91 a1 08 	lds	r24, 0x08A1	; 0x8008a1 <__TEXT_REGION_LENGTH__+0x7de8a1>
     262:	85 ff       	sbrs	r24, 5
     264:	fc cf       	rjmp	.-8      	; 0x25e <put_char+0xe>
	USARTC0.DATA = c;
     266:	c0 93 a0 08 	sts	0x08A0, r28	; 0x8008a0 <__TEXT_REGION_LENGTH__+0x7de8a0>
	return 0;
}
     26a:	80 e0       	ldi	r24, 0x00	; 0
     26c:	90 e0       	ldi	r25, 0x00	; 0
     26e:	cf 91       	pop	r28
     270:	08 95       	ret

00000272 <__vector_20>:
/************************************************************************/
/* Interrupt Service Routine for TCC1 overflow.  This is where the		*/
/* control loop runs.                                                   */
/************************************************************************/
ISR(TCC1_OVF_vect)
{
     272:	1f 92       	push	r1
     274:	0f 92       	push	r0
     276:	0f b6       	in	r0, 0x3f	; 63
     278:	0f 92       	push	r0
     27a:	11 24       	eor	r1, r1
     27c:	08 b6       	in	r0, 0x38	; 56
     27e:	0f 92       	push	r0
     280:	18 be       	out	0x38, r1	; 56
     282:	09 b6       	in	r0, 0x39	; 57
     284:	0f 92       	push	r0
     286:	19 be       	out	0x39, r1	; 57
     288:	0a b6       	in	r0, 0x3a	; 58
     28a:	0f 92       	push	r0
     28c:	1a be       	out	0x3a, r1	; 58
     28e:	0b b6       	in	r0, 0x3b	; 59
     290:	0f 92       	push	r0
     292:	1b be       	out	0x3b, r1	; 59
     294:	4f 92       	push	r4
     296:	5f 92       	push	r5
     298:	6f 92       	push	r6
     29a:	7f 92       	push	r7
     29c:	8f 92       	push	r8
     29e:	9f 92       	push	r9
     2a0:	af 92       	push	r10
     2a2:	bf 92       	push	r11
     2a4:	cf 92       	push	r12
     2a6:	df 92       	push	r13
     2a8:	ef 92       	push	r14
     2aa:	ff 92       	push	r15
     2ac:	2f 93       	push	r18
     2ae:	3f 93       	push	r19
     2b0:	4f 93       	push	r20
     2b2:	5f 93       	push	r21
     2b4:	6f 93       	push	r22
     2b6:	7f 93       	push	r23
     2b8:	8f 93       	push	r24
     2ba:	9f 93       	push	r25
     2bc:	af 93       	push	r26
     2be:	bf 93       	push	r27
     2c0:	ef 93       	push	r30
     2c2:	ff 93       	push	r31
     2c4:	cf 93       	push	r28
     2c6:	df 93       	push	r29
     2c8:	cd b7       	in	r28, 0x3d	; 61
     2ca:	de b7       	in	r29, 0x3e	; 62
     2cc:	28 97       	sbiw	r28, 0x08	; 8
     2ce:	cd bf       	out	0x3d, r28	; 61
     2d0:	de bf       	out	0x3e, r29	; 62
	//read value input
	adcIn = ADCA.CH0.RES;				//read setpoint from ADC
     2d2:	80 91 24 02 	lds	r24, 0x0224	; 0x800224 <__TEXT_REGION_LENGTH__+0x7de224>
     2d6:	90 91 25 02 	lds	r25, 0x0225	; 0x800225 <__TEXT_REGION_LENGTH__+0x7de225>
     2da:	80 93 be 20 	sts	0x20BE, r24	; 0x8020be <adcIn>
     2de:	90 93 bf 20 	sts	0x20BF, r25	; 0x8020bf <adcIn+0x1>
	setPoint = (adcIn/4095.)-0.030;		//convert to voltage
     2e2:	60 91 be 20 	lds	r22, 0x20BE	; 0x8020be <adcIn>
     2e6:	70 91 bf 20 	lds	r23, 0x20BF	; 0x8020bf <adcIn+0x1>
     2ea:	80 e0       	ldi	r24, 0x00	; 0
     2ec:	90 e0       	ldi	r25, 0x00	; 0
     2ee:	0e 94 27 08 	call	0x104e	; 0x104e <__floatunsisf>
     2f2:	20 e0       	ldi	r18, 0x00	; 0
     2f4:	30 ef       	ldi	r19, 0xF0	; 240
     2f6:	4f e7       	ldi	r20, 0x7F	; 127
     2f8:	55 e4       	ldi	r21, 0x45	; 69
     2fa:	0e 94 7f 07 	call	0xefe	; 0xefe <__divsf3>
     2fe:	2f e8       	ldi	r18, 0x8F	; 143
     300:	32 ec       	ldi	r19, 0xC2	; 194
     302:	45 ef       	ldi	r20, 0xF5	; 245
     304:	5c e3       	ldi	r21, 0x3C	; 60
     306:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__subsf3>
     30a:	60 93 ba 20 	sts	0x20BA, r22	; 0x8020ba <setPoint>
     30e:	70 93 bb 20 	sts	0x20BB, r23	; 0x8020bb <setPoint+0x1>
     312:	80 93 bc 20 	sts	0x20BC, r24	; 0x8020bc <setPoint+0x2>
     316:	90 93 bd 20 	sts	0x20BD, r25	; 0x8020bd <setPoint+0x3>
    Rin      = setPoint;
     31a:	80 91 ba 20 	lds	r24, 0x20BA	; 0x8020ba <setPoint>
     31e:	90 91 bb 20 	lds	r25, 0x20BB	; 0x8020bb <setPoint+0x1>
     322:	a0 91 bc 20 	lds	r26, 0x20BC	; 0x8020bc <setPoint+0x2>
     326:	b0 91 bd 20 	lds	r27, 0x20BD	; 0x8020bd <setPoint+0x3>
     32a:	80 93 d4 20 	sts	0x20D4, r24	; 0x8020d4 <Rin>
     32e:	90 93 d5 20 	sts	0x20D5, r25	; 0x8020d5 <Rin+0x1>
     332:	a0 93 d6 20 	sts	0x20D6, r26	; 0x8020d6 <Rin+0x2>
     336:	b0 93 d7 20 	sts	0x20D7, r27	; 0x8020d7 <Rin+0x3>
	
    //handle the encoder
	encCount = TCC0.CNT;			//read encoder
     33a:	80 91 20 08 	lds	r24, 0x0820	; 0x800820 <__TEXT_REGION_LENGTH__+0x7de820>
     33e:	90 91 21 08 	lds	r25, 0x0821	; 0x800821 <__TEXT_REGION_LENGTH__+0x7de821>
     342:	80 93 c8 20 	sts	0x20C8, r24	; 0x8020c8 <encCount>
     346:	90 93 c9 20 	sts	0x20C9, r25	; 0x8020c9 <encCount+0x1>
	if(encCount < 0) encCount = 0;	//out of bounds check  (encoder count should not be below zero)
     34a:	80 91 c8 20 	lds	r24, 0x20C8	; 0x8020c8 <encCount>
     34e:	90 91 c9 20 	lds	r25, 0x20C9	; 0x8020c9 <encCount+0x1>
     352:	99 23       	and	r25, r25
     354:	24 f4       	brge	.+8      	; 0x35e <__vector_20+0xec>
     356:	10 92 c8 20 	sts	0x20C8, r1	; 0x8020c8 <encCount>
     35a:	10 92 c9 20 	sts	0x20C9, r1	; 0x8020c9 <encCount+0x1>
	
	position = encCount/700.;		//encoder range of 0-700 mapped to 0-1V
     35e:	60 91 c8 20 	lds	r22, 0x20C8	; 0x8020c8 <encCount>
     362:	70 91 c9 20 	lds	r23, 0x20C9	; 0x8020c9 <encCount+0x1>
     366:	07 2e       	mov	r0, r23
     368:	00 0c       	add	r0, r0
     36a:	88 0b       	sbc	r24, r24
     36c:	99 0b       	sbc	r25, r25
     36e:	0e 94 29 08 	call	0x1052	; 0x1052 <__floatsisf>
     372:	20 e0       	ldi	r18, 0x00	; 0
     374:	30 e0       	ldi	r19, 0x00	; 0
     376:	4f e2       	ldi	r20, 0x2F	; 47
     378:	54 e4       	ldi	r21, 0x44	; 68
     37a:	0e 94 7f 07 	call	0xefe	; 0xefe <__divsf3>
     37e:	60 93 c4 20 	sts	0x20C4, r22	; 0x8020c4 <position>
     382:	70 93 c5 20 	sts	0x20C5, r23	; 0x8020c5 <position+0x1>
     386:	80 93 c6 20 	sts	0x20C6, r24	; 0x8020c6 <position+0x2>
     38a:	90 93 c7 20 	sts	0x20C7, r25	; 0x8020c7 <position+0x3>
	positionDAC = (position*4095.);	//convert arm postition to DAC output
     38e:	60 91 c4 20 	lds	r22, 0x20C4	; 0x8020c4 <position>
     392:	70 91 c5 20 	lds	r23, 0x20C5	; 0x8020c5 <position+0x1>
     396:	80 91 c6 20 	lds	r24, 0x20C6	; 0x8020c6 <position+0x2>
     39a:	90 91 c7 20 	lds	r25, 0x20C7	; 0x8020c7 <position+0x3>
     39e:	20 e0       	ldi	r18, 0x00	; 0
     3a0:	30 ef       	ldi	r19, 0xF0	; 240
     3a2:	4f e7       	ldi	r20, 0x7F	; 127
     3a4:	55 e4       	ldi	r21, 0x45	; 69
     3a6:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     3aa:	60 93 c0 20 	sts	0x20C0, r22	; 0x8020c0 <positionDAC>
     3ae:	70 93 c1 20 	sts	0x20C1, r23	; 0x8020c1 <positionDAC+0x1>
     3b2:	80 93 c2 20 	sts	0x20C2, r24	; 0x8020c2 <positionDAC+0x2>
     3b6:	90 93 c3 20 	sts	0x20C3, r25	; 0x8020c3 <positionDAC+0x3>
	if(positionDAC < 0) positionDAC = 0;	//rollover check
     3ba:	60 91 c0 20 	lds	r22, 0x20C0	; 0x8020c0 <positionDAC>
     3be:	70 91 c1 20 	lds	r23, 0x20C1	; 0x8020c1 <positionDAC+0x1>
     3c2:	80 91 c2 20 	lds	r24, 0x20C2	; 0x8020c2 <positionDAC+0x2>
     3c6:	90 91 c3 20 	lds	r25, 0x20C3	; 0x8020c3 <positionDAC+0x3>
     3ca:	20 e0       	ldi	r18, 0x00	; 0
     3cc:	30 e0       	ldi	r19, 0x00	; 0
     3ce:	a9 01       	movw	r20, r18
     3d0:	0e 94 7a 07 	call	0xef4	; 0xef4 <__cmpsf2>
     3d4:	88 23       	and	r24, r24
     3d6:	44 f4       	brge	.+16     	; 0x3e8 <__vector_20+0x176>
     3d8:	10 92 c0 20 	sts	0x20C0, r1	; 0x8020c0 <positionDAC>
     3dc:	10 92 c1 20 	sts	0x20C1, r1	; 0x8020c1 <positionDAC+0x1>
     3e0:	10 92 c2 20 	sts	0x20C2, r1	; 0x8020c2 <positionDAC+0x2>
     3e4:	10 92 c3 20 	sts	0x20C3, r1	; 0x8020c3 <positionDAC+0x3>
	
	/****** Control Equation ******/
	
	ctrlCorrection = 0.4;  // Initial value
     3e8:	8d ec       	ldi	r24, 0xCD	; 205
     3ea:	9c ec       	ldi	r25, 0xCC	; 204
     3ec:	ac ec       	ldi	r26, 0xCC	; 204
     3ee:	be e3       	ldi	r27, 0x3E	; 62
     3f0:	80 93 ae 20 	sts	0x20AE, r24	; 0x8020ae <ctrlCorrection>
     3f4:	90 93 af 20 	sts	0x20AF, r25	; 0x8020af <ctrlCorrection+0x1>
     3f8:	a0 93 b0 20 	sts	0x20B0, r26	; 0x8020b0 <ctrlCorrection+0x2>
     3fc:	b0 93 b1 20 	sts	0x20B1, r27	; 0x8020b1 <ctrlCorrection+0x3>
	
	/*
    State Space equations
    */

    ctrlOut = Ki*xI_k - (K1*x1_k + K2*x2_k + K3*x3_k);
     400:	60 91 1e 20 	lds	r22, 0x201E	; 0x80201e <Ki>
     404:	70 91 1f 20 	lds	r23, 0x201F	; 0x80201f <Ki+0x1>
     408:	80 91 20 20 	lds	r24, 0x2020	; 0x802020 <Ki+0x2>
     40c:	90 91 21 20 	lds	r25, 0x2021	; 0x802021 <Ki+0x3>
     410:	20 91 dc 20 	lds	r18, 0x20DC	; 0x8020dc <xI_k>
     414:	30 91 dd 20 	lds	r19, 0x20DD	; 0x8020dd <xI_k+0x1>
     418:	40 91 de 20 	lds	r20, 0x20DE	; 0x8020de <xI_k+0x2>
     41c:	50 91 df 20 	lds	r21, 0x20DF	; 0x8020df <xI_k+0x3>
     420:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     424:	6b 01       	movw	r12, r22
     426:	7c 01       	movw	r14, r24
     428:	60 91 1a 20 	lds	r22, 0x201A	; 0x80201a <K1>
     42c:	70 91 1b 20 	lds	r23, 0x201B	; 0x80201b <K1+0x1>
     430:	80 91 1c 20 	lds	r24, 0x201C	; 0x80201c <K1+0x2>
     434:	90 91 1d 20 	lds	r25, 0x201D	; 0x80201d <K1+0x3>
     438:	20 91 e4 20 	lds	r18, 0x20E4	; 0x8020e4 <x1_k>
     43c:	30 91 e5 20 	lds	r19, 0x20E5	; 0x8020e5 <x1_k+0x1>
     440:	40 91 e6 20 	lds	r20, 0x20E6	; 0x8020e6 <x1_k+0x2>
     444:	50 91 e7 20 	lds	r21, 0x20E7	; 0x8020e7 <x1_k+0x3>
     448:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     44c:	4b 01       	movw	r8, r22
     44e:	5c 01       	movw	r10, r24
     450:	60 91 16 20 	lds	r22, 0x2016	; 0x802016 <K2>
     454:	70 91 17 20 	lds	r23, 0x2017	; 0x802017 <K2+0x1>
     458:	80 91 18 20 	lds	r24, 0x2018	; 0x802018 <K2+0x2>
     45c:	90 91 19 20 	lds	r25, 0x2019	; 0x802019 <K2+0x3>
     460:	20 91 e0 20 	lds	r18, 0x20E0	; 0x8020e0 <x2_k>
     464:	30 91 e1 20 	lds	r19, 0x20E1	; 0x8020e1 <x2_k+0x1>
     468:	40 91 e2 20 	lds	r20, 0x20E2	; 0x8020e2 <x2_k+0x2>
     46c:	50 91 e3 20 	lds	r21, 0x20E3	; 0x8020e3 <x2_k+0x3>
     470:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     474:	9b 01       	movw	r18, r22
     476:	ac 01       	movw	r20, r24
     478:	c5 01       	movw	r24, r10
     47a:	b4 01       	movw	r22, r8
     47c:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     480:	4b 01       	movw	r8, r22
     482:	5c 01       	movw	r10, r24
     484:	60 91 12 20 	lds	r22, 0x2012	; 0x802012 <K3>
     488:	70 91 13 20 	lds	r23, 0x2013	; 0x802013 <K3+0x1>
     48c:	80 91 14 20 	lds	r24, 0x2014	; 0x802014 <K3+0x2>
     490:	90 91 15 20 	lds	r25, 0x2015	; 0x802015 <K3+0x3>
     494:	20 91 d0 20 	lds	r18, 0x20D0	; 0x8020d0 <x3_k>
     498:	30 91 d1 20 	lds	r19, 0x20D1	; 0x8020d1 <x3_k+0x1>
     49c:	40 91 d2 20 	lds	r20, 0x20D2	; 0x8020d2 <x3_k+0x2>
     4a0:	50 91 d3 20 	lds	r21, 0x20D3	; 0x8020d3 <x3_k+0x3>
     4a4:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     4a8:	9b 01       	movw	r18, r22
     4aa:	ac 01       	movw	r20, r24
     4ac:	c5 01       	movw	r24, r10
     4ae:	b4 01       	movw	r22, r8
     4b0:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     4b4:	9b 01       	movw	r18, r22
     4b6:	ac 01       	movw	r20, r24
     4b8:	c7 01       	movw	r24, r14
     4ba:	b6 01       	movw	r22, r12
     4bc:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__subsf3>
     4c0:	60 93 b6 20 	sts	0x20B6, r22	; 0x8020b6 <ctrlOut>
     4c4:	70 93 b7 20 	sts	0x20B7, r23	; 0x8020b7 <ctrlOut+0x1>
     4c8:	80 93 b8 20 	sts	0x20B8, r24	; 0x8020b8 <ctrlOut+0x2>
     4cc:	90 93 b9 20 	sts	0x20B9, r25	; 0x8020b9 <ctrlOut+0x3>
	// the Single ended to Bipolar circuit.  In a perfect world this value would be zero.
	// This value is used to calculate ctrlCorrection.  That is ctrlCorrection = -output value.
	
	/******************************/
	
	if (fabs(ctrlOut) >= maxVoltage)			//Saturation check
     4d0:	80 91 b6 20 	lds	r24, 0x20B6	; 0x8020b6 <ctrlOut>
     4d4:	90 91 b7 20 	lds	r25, 0x20B7	; 0x8020b7 <ctrlOut+0x1>
     4d8:	a0 91 b8 20 	lds	r26, 0x20B8	; 0x8020b8 <ctrlOut+0x2>
     4dc:	b0 91 b9 20 	lds	r27, 0x20B9	; 0x8020b9 <ctrlOut+0x3>
     4e0:	bc 01       	movw	r22, r24
     4e2:	cd 01       	movw	r24, r26
     4e4:	9f 77       	andi	r25, 0x7F	; 127
     4e6:	20 91 4a 20 	lds	r18, 0x204A	; 0x80204a <maxVoltage>
     4ea:	30 91 4b 20 	lds	r19, 0x204B	; 0x80204b <maxVoltage+0x1>
     4ee:	40 91 4c 20 	lds	r20, 0x204C	; 0x80204c <maxVoltage+0x2>
     4f2:	50 91 4d 20 	lds	r21, 0x204D	; 0x80204d <maxVoltage+0x3>
     4f6:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__gesf2>
     4fa:	88 23       	and	r24, r24
     4fc:	d4 f0       	brlt	.+52     	; 0x532 <__LOCK_REGION_LENGTH__+0x132>
	ctrlOut = copysign(maxVoltage, ctrlOut);
     4fe:	40 91 b6 20 	lds	r20, 0x20B6	; 0x8020b6 <ctrlOut>
     502:	50 91 b7 20 	lds	r21, 0x20B7	; 0x8020b7 <ctrlOut+0x1>
     506:	60 91 b8 20 	lds	r22, 0x20B8	; 0x8020b8 <ctrlOut+0x2>
     50a:	70 91 b9 20 	lds	r23, 0x20B9	; 0x8020b9 <ctrlOut+0x3>
     50e:	80 91 4a 20 	lds	r24, 0x204A	; 0x80204a <maxVoltage>
     512:	90 91 4b 20 	lds	r25, 0x204B	; 0x80204b <maxVoltage+0x1>
     516:	a0 91 4c 20 	lds	r26, 0x204C	; 0x80204c <maxVoltage+0x2>
     51a:	b0 91 4d 20 	lds	r27, 0x204D	; 0x80204d <maxVoltage+0x3>
    The copysign() function returns \a __x but with the sign of \a __y.
    They work even if \a __x or \a __y are NaN or zero.
*/
__ATTR_CONST__ static inline double copysign (double __x, double __y)
{
    __asm__ (
     51e:	77 fb       	bst	r23, 7
     520:	b7 f9       	bld	r27, 7
     522:	80 93 b6 20 	sts	0x20B6, r24	; 0x8020b6 <ctrlOut>
     526:	90 93 b7 20 	sts	0x20B7, r25	; 0x8020b7 <ctrlOut+0x1>
     52a:	a0 93 b8 20 	sts	0x20B8, r26	; 0x8020b8 <ctrlOut+0x2>
     52e:	b0 93 b9 20 	sts	0x20B9, r27	; 0x8020b9 <ctrlOut+0x3>
	
	ctrlDAC = ((ctrlOut+ ctrlCorrection)*dacConst)+2048.;	// Convert ctrl output voltage (including ctrlCorrection) to DAC value
     532:	60 91 b6 20 	lds	r22, 0x20B6	; 0x8020b6 <ctrlOut>
     536:	70 91 b7 20 	lds	r23, 0x20B7	; 0x8020b7 <ctrlOut+0x1>
     53a:	80 91 b8 20 	lds	r24, 0x20B8	; 0x8020b8 <ctrlOut+0x2>
     53e:	90 91 b9 20 	lds	r25, 0x20B9	; 0x8020b9 <ctrlOut+0x3>
     542:	20 91 ae 20 	lds	r18, 0x20AE	; 0x8020ae <ctrlCorrection>
     546:	30 91 af 20 	lds	r19, 0x20AF	; 0x8020af <ctrlCorrection+0x1>
     54a:	40 91 b0 20 	lds	r20, 0x20B0	; 0x8020b0 <ctrlCorrection+0x2>
     54e:	50 91 b1 20 	lds	r21, 0x20B1	; 0x8020b1 <ctrlCorrection+0x3>
     552:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     556:	20 91 8e 20 	lds	r18, 0x208E	; 0x80208e <__data_end>
     55a:	30 91 8f 20 	lds	r19, 0x208F	; 0x80208f <__data_end+0x1>
     55e:	40 91 90 20 	lds	r20, 0x2090	; 0x802090 <__data_end+0x2>
     562:	50 91 91 20 	lds	r21, 0x2091	; 0x802091 <__data_end+0x3>
     566:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     56a:	20 e0       	ldi	r18, 0x00	; 0
     56c:	30 e0       	ldi	r19, 0x00	; 0
     56e:	40 e0       	ldi	r20, 0x00	; 0
     570:	55 e4       	ldi	r21, 0x45	; 69
     572:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     576:	60 93 b2 20 	sts	0x20B2, r22	; 0x8020b2 <ctrlDAC>
     57a:	70 93 b3 20 	sts	0x20B3, r23	; 0x8020b3 <ctrlDAC+0x1>
     57e:	80 93 b4 20 	sts	0x20B4, r24	; 0x8020b4 <ctrlDAC+0x2>
     582:	90 93 b5 20 	sts	0x20B5, r25	; 0x8020b5 <ctrlDAC+0x3>
	if(ctrlDAC < 0) ctrlDAC=0;								// Check to make sure ctrlDAC is not less than zero
     586:	60 91 b2 20 	lds	r22, 0x20B2	; 0x8020b2 <ctrlDAC>
     58a:	70 91 b3 20 	lds	r23, 0x20B3	; 0x8020b3 <ctrlDAC+0x1>
     58e:	80 91 b4 20 	lds	r24, 0x20B4	; 0x8020b4 <ctrlDAC+0x2>
     592:	90 91 b5 20 	lds	r25, 0x20B5	; 0x8020b5 <ctrlDAC+0x3>
     596:	20 e0       	ldi	r18, 0x00	; 0
     598:	30 e0       	ldi	r19, 0x00	; 0
     59a:	a9 01       	movw	r20, r18
     59c:	0e 94 7a 07 	call	0xef4	; 0xef4 <__cmpsf2>
     5a0:	88 23       	and	r24, r24
     5a2:	44 f4       	brge	.+16     	; 0x5b4 <__LOCK_REGION_LENGTH__+0x1b4>
     5a4:	10 92 b2 20 	sts	0x20B2, r1	; 0x8020b2 <ctrlDAC>
     5a8:	10 92 b3 20 	sts	0x20B3, r1	; 0x8020b3 <ctrlDAC+0x1>
     5ac:	10 92 b4 20 	sts	0x20B4, r1	; 0x8020b4 <ctrlDAC+0x2>
     5b0:	10 92 b5 20 	sts	0x20B5, r1	; 0x8020b5 <ctrlDAC+0x3>
	if(ctrlDAC > 4095) ctrlDAC=4095;						// Check to make sure ctrlDAC is not greater than the maximum value
     5b4:	60 91 b2 20 	lds	r22, 0x20B2	; 0x8020b2 <ctrlDAC>
     5b8:	70 91 b3 20 	lds	r23, 0x20B3	; 0x8020b3 <ctrlDAC+0x1>
     5bc:	80 91 b4 20 	lds	r24, 0x20B4	; 0x8020b4 <ctrlDAC+0x2>
     5c0:	90 91 b5 20 	lds	r25, 0x20B5	; 0x8020b5 <ctrlDAC+0x3>
     5c4:	20 e0       	ldi	r18, 0x00	; 0
     5c6:	30 ef       	ldi	r19, 0xF0	; 240
     5c8:	4f e7       	ldi	r20, 0x7F	; 127
     5ca:	55 e4       	ldi	r21, 0x45	; 69
     5cc:	0e 94 d9 08 	call	0x11b2	; 0x11b2 <__gesf2>
     5d0:	18 16       	cp	r1, r24
     5d2:	64 f4       	brge	.+24     	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
     5d4:	80 e0       	ldi	r24, 0x00	; 0
     5d6:	90 ef       	ldi	r25, 0xF0	; 240
     5d8:	af e7       	ldi	r26, 0x7F	; 127
     5da:	b5 e4       	ldi	r27, 0x45	; 69
     5dc:	80 93 b2 20 	sts	0x20B2, r24	; 0x8020b2 <ctrlDAC>
     5e0:	90 93 b3 20 	sts	0x20B3, r25	; 0x8020b3 <ctrlDAC+0x1>
     5e4:	a0 93 b4 20 	sts	0x20B4, r26	; 0x8020b4 <ctrlDAC+0x2>
     5e8:	b0 93 b5 20 	sts	0x20B5, r27	; 0x8020b5 <ctrlDAC+0x3>
	
	//ctrlDAC = 0;											// Used to check the voltage of the DAC

	// flip the order to check channel 0 and channel 1
	while((DACB.STATUS & DAC_CH0DRE_bm)==0);
     5ec:	80 91 25 03 	lds	r24, 0x0325	; 0x800325 <__TEXT_REGION_LENGTH__+0x7de325>
     5f0:	80 ff       	sbrs	r24, 0
     5f2:	fc cf       	rjmp	.-8      	; 0x5ec <__LOCK_REGION_LENGTH__+0x1ec>
	DACB.CH0DATA = (int)positionDAC;				//Write arm position to DACB channel 0
     5f4:	60 91 c0 20 	lds	r22, 0x20C0	; 0x8020c0 <positionDAC>
     5f8:	70 91 c1 20 	lds	r23, 0x20C1	; 0x8020c1 <positionDAC+0x1>
     5fc:	80 91 c2 20 	lds	r24, 0x20C2	; 0x8020c2 <positionDAC+0x2>
     600:	90 91 c3 20 	lds	r25, 0x20C3	; 0x8020c3 <positionDAC+0x3>
     604:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     608:	60 93 38 03 	sts	0x0338, r22	; 0x800338 <__TEXT_REGION_LENGTH__+0x7de338>
     60c:	70 93 39 03 	sts	0x0339, r23	; 0x800339 <__TEXT_REGION_LENGTH__+0x7de339>
	while((DACB.STATUS & DAC_CH1DRE_bm)==0);
     610:	80 91 25 03 	lds	r24, 0x0325	; 0x800325 <__TEXT_REGION_LENGTH__+0x7de325>
     614:	81 ff       	sbrs	r24, 1
     616:	fc cf       	rjmp	.-8      	; 0x610 <__LOCK_REGION_LENGTH__+0x210>
	DACB.CH1DATA = (int)ctrlDAC;					//Write ctrl signal to DACB channel 1
     618:	60 91 b2 20 	lds	r22, 0x20B2	; 0x8020b2 <ctrlDAC>
     61c:	70 91 b3 20 	lds	r23, 0x20B3	; 0x8020b3 <ctrlDAC+0x1>
     620:	80 91 b4 20 	lds	r24, 0x20B4	; 0x8020b4 <ctrlDAC+0x2>
     624:	90 91 b5 20 	lds	r25, 0x20B5	; 0x8020b5 <ctrlDAC+0x3>
     628:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     62c:	60 93 3a 03 	sts	0x033A, r22	; 0x80033a <__TEXT_REGION_LENGTH__+0x7de33a>
     630:	70 93 3b 03 	sts	0x033B, r23	; 0x80033b <__TEXT_REGION_LENGTH__+0x7de33b>

	
	
	
	PORTD.OUTTGL = (1<<7);	//Toggle Pin D7 for timing
     634:	80 e8       	ldi	r24, 0x80	; 128
     636:	80 93 67 06 	sts	0x0667, r24	; 0x800667 <__TEXT_REGION_LENGTH__+0x7de667>

    C_k = position; //encoder data
     63a:	80 91 c4 20 	lds	r24, 0x20C4	; 0x8020c4 <position>
     63e:	90 91 c5 20 	lds	r25, 0x20C5	; 0x8020c5 <position+0x1>
     642:	a0 91 c6 20 	lds	r26, 0x20C6	; 0x8020c6 <position+0x2>
     646:	b0 91 c7 20 	lds	r27, 0x20C7	; 0x8020c7 <position+0x3>
     64a:	80 93 d8 20 	sts	0x20D8, r24	; 0x8020d8 <C_k>
     64e:	90 93 d9 20 	sts	0x20D9, r25	; 0x8020d9 <C_k+0x1>
     652:	a0 93 da 20 	sts	0x20DA, r26	; 0x8020da <C_k+0x2>
     656:	b0 93 db 20 	sts	0x20DB, r27	; 0x8020db <C_k+0x3>

    x1_k = (A1_11*x1_km1 + A1_12*x2_km1 + A1_13*x3_km1) + B1*Ki*xI_km1 + L1*C_km1;
     65a:	60 91 46 20 	lds	r22, 0x2046	; 0x802046 <A1_11>
     65e:	70 91 47 20 	lds	r23, 0x2047	; 0x802047 <A1_11+0x1>
     662:	80 91 48 20 	lds	r24, 0x2048	; 0x802048 <A1_11+0x2>
     666:	90 91 49 20 	lds	r25, 0x2049	; 0x802049 <A1_11+0x3>
     66a:	20 91 a6 20 	lds	r18, 0x20A6	; 0x8020a6 <x1_km1>
     66e:	30 91 a7 20 	lds	r19, 0x20A7	; 0x8020a7 <x1_km1+0x1>
     672:	40 91 a8 20 	lds	r20, 0x20A8	; 0x8020a8 <x1_km1+0x2>
     676:	50 91 a9 20 	lds	r21, 0x20A9	; 0x8020a9 <x1_km1+0x3>
     67a:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     67e:	6b 01       	movw	r12, r22
     680:	7c 01       	movw	r14, r24
     682:	60 91 42 20 	lds	r22, 0x2042	; 0x802042 <A1_12>
     686:	70 91 43 20 	lds	r23, 0x2043	; 0x802043 <A1_12+0x1>
     68a:	80 91 44 20 	lds	r24, 0x2044	; 0x802044 <A1_12+0x2>
     68e:	90 91 45 20 	lds	r25, 0x2045	; 0x802045 <A1_12+0x3>
     692:	20 91 a2 20 	lds	r18, 0x20A2	; 0x8020a2 <x2_km1>
     696:	30 91 a3 20 	lds	r19, 0x20A3	; 0x8020a3 <x2_km1+0x1>
     69a:	40 91 a4 20 	lds	r20, 0x20A4	; 0x8020a4 <x2_km1+0x2>
     69e:	50 91 a5 20 	lds	r21, 0x20A5	; 0x8020a5 <x2_km1+0x3>
     6a2:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     6a6:	9b 01       	movw	r18, r22
     6a8:	ac 01       	movw	r20, r24
     6aa:	c7 01       	movw	r24, r14
     6ac:	b6 01       	movw	r22, r12
     6ae:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     6b2:	6b 01       	movw	r12, r22
     6b4:	7c 01       	movw	r14, r24
     6b6:	60 91 96 20 	lds	r22, 0x2096	; 0x802096 <A1_13>
     6ba:	70 91 97 20 	lds	r23, 0x2097	; 0x802097 <A1_13+0x1>
     6be:	80 91 98 20 	lds	r24, 0x2098	; 0x802098 <A1_13+0x2>
     6c2:	90 91 99 20 	lds	r25, 0x2099	; 0x802099 <A1_13+0x3>
     6c6:	20 91 9e 20 	lds	r18, 0x209E	; 0x80209e <x3_km1>
     6ca:	30 91 9f 20 	lds	r19, 0x209F	; 0x80209f <x3_km1+0x1>
     6ce:	40 91 a0 20 	lds	r20, 0x20A0	; 0x8020a0 <x3_km1+0x2>
     6d2:	50 91 a1 20 	lds	r21, 0x20A1	; 0x8020a1 <x3_km1+0x3>
     6d6:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     6da:	9b 01       	movw	r18, r22
     6dc:	ac 01       	movw	r20, r24
     6de:	c7 01       	movw	r24, r14
     6e0:	b6 01       	movw	r22, r12
     6e2:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     6e6:	6b 01       	movw	r12, r22
     6e8:	7c 01       	movw	r14, r24
     6ea:	60 91 92 20 	lds	r22, 0x2092	; 0x802092 <B1>
     6ee:	70 91 93 20 	lds	r23, 0x2093	; 0x802093 <B1+0x1>
     6f2:	80 91 94 20 	lds	r24, 0x2094	; 0x802094 <B1+0x2>
     6f6:	90 91 95 20 	lds	r25, 0x2095	; 0x802095 <B1+0x3>
     6fa:	20 91 1e 20 	lds	r18, 0x201E	; 0x80201e <Ki>
     6fe:	30 91 1f 20 	lds	r19, 0x201F	; 0x80201f <Ki+0x1>
     702:	40 91 20 20 	lds	r20, 0x2020	; 0x802020 <Ki+0x2>
     706:	50 91 21 20 	lds	r21, 0x2021	; 0x802021 <Ki+0x3>
     70a:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     70e:	20 91 9a 20 	lds	r18, 0x209A	; 0x80209a <xI_km1>
     712:	30 91 9b 20 	lds	r19, 0x209B	; 0x80209b <xI_km1+0x1>
     716:	40 91 9c 20 	lds	r20, 0x209C	; 0x80209c <xI_km1+0x2>
     71a:	50 91 9d 20 	lds	r21, 0x209D	; 0x80209d <xI_km1+0x3>
     71e:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     722:	9b 01       	movw	r18, r22
     724:	ac 01       	movw	r20, r24
     726:	c7 01       	movw	r24, r14
     728:	b6 01       	movw	r22, r12
     72a:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     72e:	6b 01       	movw	r12, r22
     730:	7c 01       	movw	r14, r24
     732:	60 91 0e 20 	lds	r22, 0x200E	; 0x80200e <L1>
     736:	70 91 0f 20 	lds	r23, 0x200F	; 0x80200f <L1+0x1>
     73a:	80 91 10 20 	lds	r24, 0x2010	; 0x802010 <L1+0x2>
     73e:	90 91 11 20 	lds	r25, 0x2011	; 0x802011 <L1+0x3>
     742:	20 91 aa 20 	lds	r18, 0x20AA	; 0x8020aa <C_km1>
     746:	30 91 ab 20 	lds	r19, 0x20AB	; 0x8020ab <C_km1+0x1>
     74a:	40 91 ac 20 	lds	r20, 0x20AC	; 0x8020ac <C_km1+0x2>
     74e:	50 91 ad 20 	lds	r21, 0x20AD	; 0x8020ad <C_km1+0x3>
     752:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     756:	9b 01       	movw	r18, r22
     758:	ac 01       	movw	r20, r24
     75a:	c7 01       	movw	r24, r14
     75c:	b6 01       	movw	r22, r12
     75e:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     762:	60 93 e4 20 	sts	0x20E4, r22	; 0x8020e4 <x1_k>
     766:	70 93 e5 20 	sts	0x20E5, r23	; 0x8020e5 <x1_k+0x1>
     76a:	80 93 e6 20 	sts	0x20E6, r24	; 0x8020e6 <x1_k+0x2>
     76e:	90 93 e7 20 	sts	0x20E7, r25	; 0x8020e7 <x1_k+0x3>
    x2_k = (A1_21*x1_km1 + A1_22*x2_km1 + A1_23*x3_km1) + B2*Ki*xI_km1 + L2*C_km1;
     772:	60 91 3e 20 	lds	r22, 0x203E	; 0x80203e <A1_21>
     776:	70 91 3f 20 	lds	r23, 0x203F	; 0x80203f <A1_21+0x1>
     77a:	80 91 40 20 	lds	r24, 0x2040	; 0x802040 <A1_21+0x2>
     77e:	90 91 41 20 	lds	r25, 0x2041	; 0x802041 <A1_21+0x3>
     782:	20 91 a6 20 	lds	r18, 0x20A6	; 0x8020a6 <x1_km1>
     786:	30 91 a7 20 	lds	r19, 0x20A7	; 0x8020a7 <x1_km1+0x1>
     78a:	40 91 a8 20 	lds	r20, 0x20A8	; 0x8020a8 <x1_km1+0x2>
     78e:	50 91 a9 20 	lds	r21, 0x20A9	; 0x8020a9 <x1_km1+0x3>
     792:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     796:	6b 01       	movw	r12, r22
     798:	7c 01       	movw	r14, r24
     79a:	60 91 3a 20 	lds	r22, 0x203A	; 0x80203a <A1_22>
     79e:	70 91 3b 20 	lds	r23, 0x203B	; 0x80203b <A1_22+0x1>
     7a2:	80 91 3c 20 	lds	r24, 0x203C	; 0x80203c <A1_22+0x2>
     7a6:	90 91 3d 20 	lds	r25, 0x203D	; 0x80203d <A1_22+0x3>
     7aa:	20 91 a2 20 	lds	r18, 0x20A2	; 0x8020a2 <x2_km1>
     7ae:	30 91 a3 20 	lds	r19, 0x20A3	; 0x8020a3 <x2_km1+0x1>
     7b2:	40 91 a4 20 	lds	r20, 0x20A4	; 0x8020a4 <x2_km1+0x2>
     7b6:	50 91 a5 20 	lds	r21, 0x20A5	; 0x8020a5 <x2_km1+0x3>
     7ba:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     7be:	9b 01       	movw	r18, r22
     7c0:	ac 01       	movw	r20, r24
     7c2:	c7 01       	movw	r24, r14
     7c4:	b6 01       	movw	r22, r12
     7c6:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     7ca:	6b 01       	movw	r12, r22
     7cc:	7c 01       	movw	r14, r24
     7ce:	60 91 36 20 	lds	r22, 0x2036	; 0x802036 <A1_23>
     7d2:	70 91 37 20 	lds	r23, 0x2037	; 0x802037 <A1_23+0x1>
     7d6:	80 91 38 20 	lds	r24, 0x2038	; 0x802038 <A1_23+0x2>
     7da:	90 91 39 20 	lds	r25, 0x2039	; 0x802039 <A1_23+0x3>
     7de:	20 91 9e 20 	lds	r18, 0x209E	; 0x80209e <x3_km1>
     7e2:	30 91 9f 20 	lds	r19, 0x209F	; 0x80209f <x3_km1+0x1>
     7e6:	40 91 a0 20 	lds	r20, 0x20A0	; 0x8020a0 <x3_km1+0x2>
     7ea:	50 91 a1 20 	lds	r21, 0x20A1	; 0x8020a1 <x3_km1+0x3>
     7ee:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     7f2:	9b 01       	movw	r18, r22
     7f4:	ac 01       	movw	r20, r24
     7f6:	c7 01       	movw	r24, r14
     7f8:	b6 01       	movw	r22, r12
     7fa:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     7fe:	6b 01       	movw	r12, r22
     800:	7c 01       	movw	r14, r24
     802:	60 91 26 20 	lds	r22, 0x2026	; 0x802026 <B2>
     806:	70 91 27 20 	lds	r23, 0x2027	; 0x802027 <B2+0x1>
     80a:	80 91 28 20 	lds	r24, 0x2028	; 0x802028 <B2+0x2>
     80e:	90 91 29 20 	lds	r25, 0x2029	; 0x802029 <B2+0x3>
     812:	20 91 1e 20 	lds	r18, 0x201E	; 0x80201e <Ki>
     816:	30 91 1f 20 	lds	r19, 0x201F	; 0x80201f <Ki+0x1>
     81a:	40 91 20 20 	lds	r20, 0x2020	; 0x802020 <Ki+0x2>
     81e:	50 91 21 20 	lds	r21, 0x2021	; 0x802021 <Ki+0x3>
     822:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     826:	20 91 9a 20 	lds	r18, 0x209A	; 0x80209a <xI_km1>
     82a:	30 91 9b 20 	lds	r19, 0x209B	; 0x80209b <xI_km1+0x1>
     82e:	40 91 9c 20 	lds	r20, 0x209C	; 0x80209c <xI_km1+0x2>
     832:	50 91 9d 20 	lds	r21, 0x209D	; 0x80209d <xI_km1+0x3>
     836:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     83a:	9b 01       	movw	r18, r22
     83c:	ac 01       	movw	r20, r24
     83e:	c7 01       	movw	r24, r14
     840:	b6 01       	movw	r22, r12
     842:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     846:	6b 01       	movw	r12, r22
     848:	7c 01       	movw	r14, r24
     84a:	60 91 0a 20 	lds	r22, 0x200A	; 0x80200a <L2>
     84e:	70 91 0b 20 	lds	r23, 0x200B	; 0x80200b <L2+0x1>
     852:	80 91 0c 20 	lds	r24, 0x200C	; 0x80200c <L2+0x2>
     856:	90 91 0d 20 	lds	r25, 0x200D	; 0x80200d <L2+0x3>
     85a:	20 91 aa 20 	lds	r18, 0x20AA	; 0x8020aa <C_km1>
     85e:	30 91 ab 20 	lds	r19, 0x20AB	; 0x8020ab <C_km1+0x1>
     862:	40 91 ac 20 	lds	r20, 0x20AC	; 0x8020ac <C_km1+0x2>
     866:	50 91 ad 20 	lds	r21, 0x20AD	; 0x8020ad <C_km1+0x3>
     86a:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     86e:	9b 01       	movw	r18, r22
     870:	ac 01       	movw	r20, r24
     872:	c7 01       	movw	r24, r14
     874:	b6 01       	movw	r22, r12
     876:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     87a:	60 93 e0 20 	sts	0x20E0, r22	; 0x8020e0 <x2_k>
     87e:	70 93 e1 20 	sts	0x20E1, r23	; 0x8020e1 <x2_k+0x1>
     882:	80 93 e2 20 	sts	0x20E2, r24	; 0x8020e2 <x2_k+0x2>
     886:	90 93 e3 20 	sts	0x20E3, r25	; 0x8020e3 <x2_k+0x3>
    x3_k = (A1_31*x1_km1 + A1_32*x2_km1 + A1_33*x3_km1) + B3*Ki*xI_km1 + L3*C_km1;
     88a:	60 91 32 20 	lds	r22, 0x2032	; 0x802032 <A1_31>
     88e:	70 91 33 20 	lds	r23, 0x2033	; 0x802033 <A1_31+0x1>
     892:	80 91 34 20 	lds	r24, 0x2034	; 0x802034 <A1_31+0x2>
     896:	90 91 35 20 	lds	r25, 0x2035	; 0x802035 <A1_31+0x3>
     89a:	20 91 a6 20 	lds	r18, 0x20A6	; 0x8020a6 <x1_km1>
     89e:	30 91 a7 20 	lds	r19, 0x20A7	; 0x8020a7 <x1_km1+0x1>
     8a2:	40 91 a8 20 	lds	r20, 0x20A8	; 0x8020a8 <x1_km1+0x2>
     8a6:	50 91 a9 20 	lds	r21, 0x20A9	; 0x8020a9 <x1_km1+0x3>
     8aa:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     8ae:	6b 01       	movw	r12, r22
     8b0:	7c 01       	movw	r14, r24
     8b2:	60 91 2e 20 	lds	r22, 0x202E	; 0x80202e <A1_32>
     8b6:	70 91 2f 20 	lds	r23, 0x202F	; 0x80202f <A1_32+0x1>
     8ba:	80 91 30 20 	lds	r24, 0x2030	; 0x802030 <A1_32+0x2>
     8be:	90 91 31 20 	lds	r25, 0x2031	; 0x802031 <A1_32+0x3>
     8c2:	20 91 a2 20 	lds	r18, 0x20A2	; 0x8020a2 <x2_km1>
     8c6:	30 91 a3 20 	lds	r19, 0x20A3	; 0x8020a3 <x2_km1+0x1>
     8ca:	40 91 a4 20 	lds	r20, 0x20A4	; 0x8020a4 <x2_km1+0x2>
     8ce:	50 91 a5 20 	lds	r21, 0x20A5	; 0x8020a5 <x2_km1+0x3>
     8d2:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     8d6:	9b 01       	movw	r18, r22
     8d8:	ac 01       	movw	r20, r24
     8da:	c7 01       	movw	r24, r14
     8dc:	b6 01       	movw	r22, r12
     8de:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     8e2:	6b 01       	movw	r12, r22
     8e4:	7c 01       	movw	r14, r24
     8e6:	60 91 2a 20 	lds	r22, 0x202A	; 0x80202a <A1_33>
     8ea:	70 91 2b 20 	lds	r23, 0x202B	; 0x80202b <A1_33+0x1>
     8ee:	80 91 2c 20 	lds	r24, 0x202C	; 0x80202c <A1_33+0x2>
     8f2:	90 91 2d 20 	lds	r25, 0x202D	; 0x80202d <A1_33+0x3>
     8f6:	20 91 9e 20 	lds	r18, 0x209E	; 0x80209e <x3_km1>
     8fa:	30 91 9f 20 	lds	r19, 0x209F	; 0x80209f <x3_km1+0x1>
     8fe:	40 91 a0 20 	lds	r20, 0x20A0	; 0x8020a0 <x3_km1+0x2>
     902:	50 91 a1 20 	lds	r21, 0x20A1	; 0x8020a1 <x3_km1+0x3>
     906:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     90a:	9b 01       	movw	r18, r22
     90c:	ac 01       	movw	r20, r24
     90e:	c7 01       	movw	r24, r14
     910:	b6 01       	movw	r22, r12
     912:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     916:	6b 01       	movw	r12, r22
     918:	7c 01       	movw	r14, r24
     91a:	60 91 22 20 	lds	r22, 0x2022	; 0x802022 <B3>
     91e:	70 91 23 20 	lds	r23, 0x2023	; 0x802023 <B3+0x1>
     922:	80 91 24 20 	lds	r24, 0x2024	; 0x802024 <B3+0x2>
     926:	90 91 25 20 	lds	r25, 0x2025	; 0x802025 <B3+0x3>
     92a:	20 91 1e 20 	lds	r18, 0x201E	; 0x80201e <Ki>
     92e:	30 91 1f 20 	lds	r19, 0x201F	; 0x80201f <Ki+0x1>
     932:	40 91 20 20 	lds	r20, 0x2020	; 0x802020 <Ki+0x2>
     936:	50 91 21 20 	lds	r21, 0x2021	; 0x802021 <Ki+0x3>
     93a:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     93e:	20 91 9a 20 	lds	r18, 0x209A	; 0x80209a <xI_km1>
     942:	30 91 9b 20 	lds	r19, 0x209B	; 0x80209b <xI_km1+0x1>
     946:	40 91 9c 20 	lds	r20, 0x209C	; 0x80209c <xI_km1+0x2>
     94a:	50 91 9d 20 	lds	r21, 0x209D	; 0x80209d <xI_km1+0x3>
     94e:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     952:	9b 01       	movw	r18, r22
     954:	ac 01       	movw	r20, r24
     956:	c7 01       	movw	r24, r14
     958:	b6 01       	movw	r22, r12
     95a:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     95e:	6b 01       	movw	r12, r22
     960:	7c 01       	movw	r14, r24
     962:	60 91 06 20 	lds	r22, 0x2006	; 0x802006 <L3>
     966:	70 91 07 20 	lds	r23, 0x2007	; 0x802007 <L3+0x1>
     96a:	80 91 08 20 	lds	r24, 0x2008	; 0x802008 <L3+0x2>
     96e:	90 91 09 20 	lds	r25, 0x2009	; 0x802009 <L3+0x3>
     972:	20 91 aa 20 	lds	r18, 0x20AA	; 0x8020aa <C_km1>
     976:	30 91 ab 20 	lds	r19, 0x20AB	; 0x8020ab <C_km1+0x1>
     97a:	40 91 ac 20 	lds	r20, 0x20AC	; 0x8020ac <C_km1+0x2>
     97e:	50 91 ad 20 	lds	r21, 0x20AD	; 0x8020ad <C_km1+0x3>
     982:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     986:	9b 01       	movw	r18, r22
     988:	ac 01       	movw	r20, r24
     98a:	c7 01       	movw	r24, r14
     98c:	b6 01       	movw	r22, r12
     98e:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     992:	60 93 d0 20 	sts	0x20D0, r22	; 0x8020d0 <x3_k>
     996:	70 93 d1 20 	sts	0x20D1, r23	; 0x8020d1 <x3_k+0x1>
     99a:	80 93 d2 20 	sts	0x20D2, r24	; 0x8020d2 <x3_k+0x2>
     99e:	90 93 d3 20 	sts	0x20D3, r25	; 0x8020d3 <x3_k+0x3>

    xI_k = xI_km1 + (Rin - C_k);
     9a2:	60 91 d4 20 	lds	r22, 0x20D4	; 0x8020d4 <Rin>
     9a6:	70 91 d5 20 	lds	r23, 0x20D5	; 0x8020d5 <Rin+0x1>
     9aa:	80 91 d6 20 	lds	r24, 0x20D6	; 0x8020d6 <Rin+0x2>
     9ae:	90 91 d7 20 	lds	r25, 0x20D7	; 0x8020d7 <Rin+0x3>
     9b2:	20 91 d8 20 	lds	r18, 0x20D8	; 0x8020d8 <C_k>
     9b6:	30 91 d9 20 	lds	r19, 0x20D9	; 0x8020d9 <C_k+0x1>
     9ba:	40 91 da 20 	lds	r20, 0x20DA	; 0x8020da <C_k+0x2>
     9be:	50 91 db 20 	lds	r21, 0x20DB	; 0x8020db <C_k+0x3>
     9c2:	0e 94 0d 07 	call	0xe1a	; 0xe1a <__subsf3>
     9c6:	20 91 9a 20 	lds	r18, 0x209A	; 0x80209a <xI_km1>
     9ca:	30 91 9b 20 	lds	r19, 0x209B	; 0x80209b <xI_km1+0x1>
     9ce:	40 91 9c 20 	lds	r20, 0x209C	; 0x80209c <xI_km1+0x2>
     9d2:	50 91 9d 20 	lds	r21, 0x209D	; 0x80209d <xI_km1+0x3>
     9d6:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     9da:	60 93 dc 20 	sts	0x20DC, r22	; 0x8020dc <xI_k>
     9de:	70 93 dd 20 	sts	0x20DD, r23	; 0x8020dd <xI_k+0x1>
     9e2:	80 93 de 20 	sts	0x20DE, r24	; 0x8020de <xI_k+0x2>
     9e6:	90 93 df 20 	sts	0x20DF, r25	; 0x8020df <xI_k+0x3>

    //Update variables
    x1_km1 = x1_k;
     9ea:	80 91 e4 20 	lds	r24, 0x20E4	; 0x8020e4 <x1_k>
     9ee:	90 91 e5 20 	lds	r25, 0x20E5	; 0x8020e5 <x1_k+0x1>
     9f2:	a0 91 e6 20 	lds	r26, 0x20E6	; 0x8020e6 <x1_k+0x2>
     9f6:	b0 91 e7 20 	lds	r27, 0x20E7	; 0x8020e7 <x1_k+0x3>
     9fa:	80 93 a6 20 	sts	0x20A6, r24	; 0x8020a6 <x1_km1>
     9fe:	90 93 a7 20 	sts	0x20A7, r25	; 0x8020a7 <x1_km1+0x1>
     a02:	a0 93 a8 20 	sts	0x20A8, r26	; 0x8020a8 <x1_km1+0x2>
     a06:	b0 93 a9 20 	sts	0x20A9, r27	; 0x8020a9 <x1_km1+0x3>
    x2_km1 = x2_k;
     a0a:	80 91 e0 20 	lds	r24, 0x20E0	; 0x8020e0 <x2_k>
     a0e:	90 91 e1 20 	lds	r25, 0x20E1	; 0x8020e1 <x2_k+0x1>
     a12:	a0 91 e2 20 	lds	r26, 0x20E2	; 0x8020e2 <x2_k+0x2>
     a16:	b0 91 e3 20 	lds	r27, 0x20E3	; 0x8020e3 <x2_k+0x3>
     a1a:	80 93 a2 20 	sts	0x20A2, r24	; 0x8020a2 <x2_km1>
     a1e:	90 93 a3 20 	sts	0x20A3, r25	; 0x8020a3 <x2_km1+0x1>
     a22:	a0 93 a4 20 	sts	0x20A4, r26	; 0x8020a4 <x2_km1+0x2>
     a26:	b0 93 a5 20 	sts	0x20A5, r27	; 0x8020a5 <x2_km1+0x3>
    x3_km1 = x3_k;
     a2a:	80 91 d0 20 	lds	r24, 0x20D0	; 0x8020d0 <x3_k>
     a2e:	90 91 d1 20 	lds	r25, 0x20D1	; 0x8020d1 <x3_k+0x1>
     a32:	a0 91 d2 20 	lds	r26, 0x20D2	; 0x8020d2 <x3_k+0x2>
     a36:	b0 91 d3 20 	lds	r27, 0x20D3	; 0x8020d3 <x3_k+0x3>
     a3a:	80 93 9e 20 	sts	0x209E, r24	; 0x80209e <x3_km1>
     a3e:	90 93 9f 20 	sts	0x209F, r25	; 0x80209f <x3_km1+0x1>
     a42:	a0 93 a0 20 	sts	0x20A0, r26	; 0x8020a0 <x3_km1+0x2>
     a46:	b0 93 a1 20 	sts	0x20A1, r27	; 0x8020a1 <x3_km1+0x3>

    xI_km1 = xI_k;
     a4a:	80 91 dc 20 	lds	r24, 0x20DC	; 0x8020dc <xI_k>
     a4e:	90 91 dd 20 	lds	r25, 0x20DD	; 0x8020dd <xI_k+0x1>
     a52:	a0 91 de 20 	lds	r26, 0x20DE	; 0x8020de <xI_k+0x2>
     a56:	b0 91 df 20 	lds	r27, 0x20DF	; 0x8020df <xI_k+0x3>
     a5a:	80 93 9a 20 	sts	0x209A, r24	; 0x80209a <xI_km1>
     a5e:	90 93 9b 20 	sts	0x209B, r25	; 0x80209b <xI_km1+0x1>
     a62:	a0 93 9c 20 	sts	0x209C, r26	; 0x80209c <xI_km1+0x2>
     a66:	b0 93 9d 20 	sts	0x209D, r27	; 0x80209d <xI_km1+0x3>

    C_km1 = C_k;
     a6a:	80 91 d8 20 	lds	r24, 0x20D8	; 0x8020d8 <C_k>
     a6e:	90 91 d9 20 	lds	r25, 0x20D9	; 0x8020d9 <C_k+0x1>
     a72:	a0 91 da 20 	lds	r26, 0x20DA	; 0x8020da <C_k+0x2>
     a76:	b0 91 db 20 	lds	r27, 0x20DB	; 0x8020db <C_k+0x3>
     a7a:	80 93 aa 20 	sts	0x20AA, r24	; 0x8020aa <C_km1>
     a7e:	90 93 ab 20 	sts	0x20AB, r25	; 0x8020ab <C_km1+0x1>
     a82:	a0 93 ac 20 	sts	0x20AC, r26	; 0x8020ac <C_km1+0x2>
     a86:	b0 93 ad 20 	sts	0x20AD, r27	; 0x8020ad <C_km1+0x3>

    printf("Rin = %d, C_k = %d, x1_km1 = %d, x2_km1 = %d, ctrlOut = %d\n", (int)(Rin*100), (int)(C_k*100), (int)(x1_km1*100), (int)(x2_km1*100), (int)(ctrlOut*100));
     a8a:	60 91 b6 20 	lds	r22, 0x20B6	; 0x8020b6 <ctrlOut>
     a8e:	70 91 b7 20 	lds	r23, 0x20B7	; 0x8020b7 <ctrlOut+0x1>
     a92:	80 91 b8 20 	lds	r24, 0x20B8	; 0x8020b8 <ctrlOut+0x2>
     a96:	90 91 b9 20 	lds	r25, 0x20B9	; 0x8020b9 <ctrlOut+0x3>
     a9a:	20 e0       	ldi	r18, 0x00	; 0
     a9c:	30 e0       	ldi	r19, 0x00	; 0
     a9e:	48 ec       	ldi	r20, 0xC8	; 200
     aa0:	52 e4       	ldi	r21, 0x42	; 66
     aa2:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     aa6:	2b 01       	movw	r4, r22
     aa8:	3c 01       	movw	r6, r24
     aaa:	60 91 a2 20 	lds	r22, 0x20A2	; 0x8020a2 <x2_km1>
     aae:	70 91 a3 20 	lds	r23, 0x20A3	; 0x8020a3 <x2_km1+0x1>
     ab2:	80 91 a4 20 	lds	r24, 0x20A4	; 0x8020a4 <x2_km1+0x2>
     ab6:	90 91 a5 20 	lds	r25, 0x20A5	; 0x8020a5 <x2_km1+0x3>
     aba:	20 e0       	ldi	r18, 0x00	; 0
     abc:	30 e0       	ldi	r19, 0x00	; 0
     abe:	48 ec       	ldi	r20, 0xC8	; 200
     ac0:	52 e4       	ldi	r21, 0x42	; 66
     ac2:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     ac6:	4b 01       	movw	r8, r22
     ac8:	5c 01       	movw	r10, r24
     aca:	60 91 a6 20 	lds	r22, 0x20A6	; 0x8020a6 <x1_km1>
     ace:	70 91 a7 20 	lds	r23, 0x20A7	; 0x8020a7 <x1_km1+0x1>
     ad2:	80 91 a8 20 	lds	r24, 0x20A8	; 0x8020a8 <x1_km1+0x2>
     ad6:	90 91 a9 20 	lds	r25, 0x20A9	; 0x8020a9 <x1_km1+0x3>
     ada:	20 e0       	ldi	r18, 0x00	; 0
     adc:	30 e0       	ldi	r19, 0x00	; 0
     ade:	48 ec       	ldi	r20, 0xC8	; 200
     ae0:	52 e4       	ldi	r21, 0x42	; 66
     ae2:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     ae6:	6b 01       	movw	r12, r22
     ae8:	7c 01       	movw	r14, r24
     aea:	60 91 d8 20 	lds	r22, 0x20D8	; 0x8020d8 <C_k>
     aee:	70 91 d9 20 	lds	r23, 0x20D9	; 0x8020d9 <C_k+0x1>
     af2:	80 91 da 20 	lds	r24, 0x20DA	; 0x8020da <C_k+0x2>
     af6:	90 91 db 20 	lds	r25, 0x20DB	; 0x8020db <C_k+0x3>
     afa:	20 e0       	ldi	r18, 0x00	; 0
     afc:	30 e0       	ldi	r19, 0x00	; 0
     afe:	48 ec       	ldi	r20, 0xC8	; 200
     b00:	52 e4       	ldi	r21, 0x42	; 66
     b02:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     b06:	69 83       	std	Y+1, r22	; 0x01
     b08:	7a 83       	std	Y+2, r23	; 0x02
     b0a:	8b 83       	std	Y+3, r24	; 0x03
     b0c:	9c 83       	std	Y+4, r25	; 0x04
     b0e:	60 91 d4 20 	lds	r22, 0x20D4	; 0x8020d4 <Rin>
     b12:	70 91 d5 20 	lds	r23, 0x20D5	; 0x8020d5 <Rin+0x1>
     b16:	80 91 d6 20 	lds	r24, 0x20D6	; 0x8020d6 <Rin+0x2>
     b1a:	90 91 d7 20 	lds	r25, 0x20D7	; 0x8020d7 <Rin+0x3>
     b1e:	20 e0       	ldi	r18, 0x00	; 0
     b20:	30 e0       	ldi	r19, 0x00	; 0
     b22:	48 ec       	ldi	r20, 0xC8	; 200
     b24:	52 e4       	ldi	r21, 0x42	; 66
     b26:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     b2a:	6d 83       	std	Y+5, r22	; 0x05
     b2c:	7e 83       	std	Y+6, r23	; 0x06
     b2e:	8f 83       	std	Y+7, r24	; 0x07
     b30:	98 87       	std	Y+8, r25	; 0x08
     b32:	c3 01       	movw	r24, r6
     b34:	b2 01       	movw	r22, r4
     b36:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     b3a:	7f 93       	push	r23
     b3c:	6f 93       	push	r22
     b3e:	c5 01       	movw	r24, r10
     b40:	b4 01       	movw	r22, r8
     b42:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     b46:	7f 93       	push	r23
     b48:	6f 93       	push	r22
     b4a:	c7 01       	movw	r24, r14
     b4c:	b6 01       	movw	r22, r12
     b4e:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     b52:	7f 93       	push	r23
     b54:	6f 93       	push	r22
     b56:	69 81       	ldd	r22, Y+1	; 0x01
     b58:	7a 81       	ldd	r23, Y+2	; 0x02
     b5a:	8b 81       	ldd	r24, Y+3	; 0x03
     b5c:	9c 81       	ldd	r25, Y+4	; 0x04
     b5e:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     b62:	7f 93       	push	r23
     b64:	6f 93       	push	r22
     b66:	6d 81       	ldd	r22, Y+5	; 0x05
     b68:	7e 81       	ldd	r23, Y+6	; 0x06
     b6a:	8f 81       	ldd	r24, Y+7	; 0x07
     b6c:	98 85       	ldd	r25, Y+8	; 0x08
     b6e:	0e 94 f1 07 	call	0xfe2	; 0xfe2 <__fixsfsi>
     b72:	7f 93       	push	r23
     b74:	6f 93       	push	r22
     b76:	82 e5       	ldi	r24, 0x52	; 82
     b78:	90 e2       	ldi	r25, 0x20	; 32
     b7a:	9f 93       	push	r25
     b7c:	8f 93       	push	r24
     b7e:	0e 94 96 09 	call	0x132c	; 0x132c <printf>
}
     b82:	cd bf       	out	0x3d, r28	; 61
     b84:	de bf       	out	0x3e, r29	; 62
     b86:	28 96       	adiw	r28, 0x08	; 8
     b88:	cd bf       	out	0x3d, r28	; 61
     b8a:	de bf       	out	0x3e, r29	; 62
     b8c:	df 91       	pop	r29
     b8e:	cf 91       	pop	r28
     b90:	ff 91       	pop	r31
     b92:	ef 91       	pop	r30
     b94:	bf 91       	pop	r27
     b96:	af 91       	pop	r26
     b98:	9f 91       	pop	r25
     b9a:	8f 91       	pop	r24
     b9c:	7f 91       	pop	r23
     b9e:	6f 91       	pop	r22
     ba0:	5f 91       	pop	r21
     ba2:	4f 91       	pop	r20
     ba4:	3f 91       	pop	r19
     ba6:	2f 91       	pop	r18
     ba8:	ff 90       	pop	r15
     baa:	ef 90       	pop	r14
     bac:	df 90       	pop	r13
     bae:	cf 90       	pop	r12
     bb0:	bf 90       	pop	r11
     bb2:	af 90       	pop	r10
     bb4:	9f 90       	pop	r9
     bb6:	8f 90       	pop	r8
     bb8:	7f 90       	pop	r7
     bba:	6f 90       	pop	r6
     bbc:	5f 90       	pop	r5
     bbe:	4f 90       	pop	r4
     bc0:	0f 90       	pop	r0
     bc2:	0b be       	out	0x3b, r0	; 59
     bc4:	0f 90       	pop	r0
     bc6:	0a be       	out	0x3a, r0	; 58
     bc8:	0f 90       	pop	r0
     bca:	09 be       	out	0x39, r0	; 57
     bcc:	0f 90       	pop	r0
     bce:	08 be       	out	0x38, r0	; 56
     bd0:	0f 90       	pop	r0
     bd2:	0f be       	out	0x3f, r0	; 63
     bd4:	0f 90       	pop	r0
     bd6:	1f 90       	pop	r1
     bd8:	18 95       	reti

00000bda <clk_init>:
/*Initialization Functions for Hardware                                 */
/************************************************************************/

void clk_init(void)
{
	OSC.CTRL |= OSC_RC32MEN_bm;					//enable 32Mhz RC Osc
     bda:	e0 e5       	ldi	r30, 0x50	; 80
     bdc:	f0 e0       	ldi	r31, 0x00	; 0
     bde:	80 81       	ld	r24, Z
     be0:	82 60       	ori	r24, 0x02	; 2
     be2:	80 83       	st	Z, r24
	while(!(OSC.STATUS & OSC_RC32MRDY_bm));		//wait for 32MHz Osc to be stable
     be4:	80 91 51 00 	lds	r24, 0x0051	; 0x800051 <__TEXT_REGION_LENGTH__+0x7de051>
     be8:	81 ff       	sbrs	r24, 1
     bea:	fc cf       	rjmp	.-8      	; 0xbe4 <clk_init+0xa>
	CCP = CCP_IOREG_gc;							//enable access to system clock
     bec:	88 ed       	ldi	r24, 0xD8	; 216
     bee:	84 bf       	out	0x34, r24	; 52
	CLK.CTRL = CLK_SCLKSEL_RC32M_gc;			//set 32Mhz RC Osc as system clock
     bf0:	81 e0       	ldi	r24, 0x01	; 1
     bf2:	80 93 40 00 	sts	0x0040, r24	; 0x800040 <__TEXT_REGION_LENGTH__+0x7de040>
     bf6:	08 95       	ret

00000bf8 <usart_init>:

void usart_init(void)
{

	//Set TxD as output RxD as input
	PORTC.DIRSET = (1<<3);
     bf8:	e0 e4       	ldi	r30, 0x40	; 64
     bfa:	f6 e0       	ldi	r31, 0x06	; 6
     bfc:	88 e0       	ldi	r24, 0x08	; 8
     bfe:	81 83       	std	Z+1, r24	; 0x01
	PORTC.DIRCLR = (1<<2);
     c00:	84 e0       	ldi	r24, 0x04	; 4
     c02:	82 83       	std	Z+2, r24	; 0x02

	//Set mode, baud rate and frame format
	USARTC0.CTRLC |= USART_CMODE_ASYNCHRONOUS_gc | USART_CHSIZE_8BIT_gc;
     c04:	e0 ea       	ldi	r30, 0xA0	; 160
     c06:	f8 e0       	ldi	r31, 0x08	; 8
     c08:	85 81       	ldd	r24, Z+5	; 0x05
     c0a:	83 60       	ori	r24, 0x03	; 3
     c0c:	85 83       	std	Z+5, r24	; 0x05
	USARTC0.BAUDCTRLA = (uint8_t)BSEL;
     c0e:	8b e6       	ldi	r24, 0x6B	; 107
     c10:	86 83       	std	Z+6, r24	; 0x06
	USARTC0.BAUDCTRLB = (BSCALE<<USART_BSCALE0_bp) | (BSEL>>8);
     c12:	80 eb       	ldi	r24, 0xB0	; 176
     c14:	87 83       	std	Z+7, r24	; 0x07

	//enable Tx and Rx
	USARTC0.CTRLB |= USART_TXEN_bm;
     c16:	84 81       	ldd	r24, Z+4	; 0x04
     c18:	88 60       	ori	r24, 0x08	; 8
     c1a:	84 83       	std	Z+4, r24	; 0x04

	// setup printf to use serial port
	fdevopen(&put_char,NULL);
     c1c:	60 e0       	ldi	r22, 0x00	; 0
     c1e:	70 e0       	ldi	r23, 0x00	; 0
     c20:	88 e2       	ldi	r24, 0x28	; 40
     c22:	91 e0       	ldi	r25, 0x01	; 1
     c24:	0e 94 4b 09 	call	0x1296	; 0x1296 <fdevopen>
     c28:	08 95       	ret

00000c2a <encoder_init>:


void encoder_init(void)
{
	// set encoder pins as input
	PORTD.DIRCLR = (1<<0) | (1<<1);
     c2a:	e0 e6       	ldi	r30, 0x60	; 96
     c2c:	f6 e0       	ldi	r31, 0x06	; 6
     c2e:	83 e0       	ldi	r24, 0x03	; 3
     c30:	82 83       	std	Z+2, r24	; 0x02
	PORTD.PIN0CTRL |= PORT_ISC_LEVEL_gc;		//set Pin 0 to level sensing
     c32:	80 89       	ldd	r24, Z+16	; 0x10
     c34:	83 60       	ori	r24, 0x03	; 3
     c36:	80 8b       	std	Z+16, r24	; 0x10

	//setup event system
	EVSYS.CH0MUX = EVSYS_CHMUX_PORTD_PIN0_gc;	//route PIND0 to Event channel 0
     c38:	e0 e8       	ldi	r30, 0x80	; 128
     c3a:	f1 e0       	ldi	r31, 0x01	; 1
     c3c:	88 e6       	ldi	r24, 0x68	; 104
     c3e:	80 83       	st	Z, r24
	EVSYS.CH0CTRL |= EVSYS_QDEN_bm 				//enable quadrature decode
     c40:	80 85       	ldd	r24, Z+8	; 0x08
     c42:	89 60       	ori	r24, 0x09	; 9
     c44:	80 87       	std	Z+8, r24	; 0x08
	| EVSYS_DIGFILT_2SAMPLES_gc;					//set digital filter to 1 sample

	//setup timer
	TCC0.CTRLD |= TC_EVACT_QDEC_gc				//set timer to quadrature decode
     c46:	e0 e0       	ldi	r30, 0x00	; 0
     c48:	f8 e0       	ldi	r31, 0x08	; 8
     c4a:	83 81       	ldd	r24, Z+3	; 0x03
     c4c:	88 66       	ori	r24, 0x68	; 104
     c4e:	83 83       	std	Z+3, r24	; 0x03
	| TC_EVSEL_CH0_gc;							//set EVCH0 as source
	TCC0.CTRLA |= TC_CLKSEL_DIV1_gc;			//enables timer
     c50:	80 81       	ld	r24, Z
     c52:	81 60       	ori	r24, 0x01	; 1
     c54:	80 83       	st	Z, r24
     c56:	08 95       	ret

00000c58 <SP_ReadCalibrationByte>:
uint8_t SP_ReadCalibrationByte( uint8_t index )
{
	uint8_t result;

	/* Load the NVM Command register to read the calibration row. */
	NVM_CMD = NVM_CMD_READ_CALIB_ROW_gc;
     c58:	aa ec       	ldi	r26, 0xCA	; 202
     c5a:	b1 e0       	ldi	r27, 0x01	; 1
     c5c:	92 e0       	ldi	r25, 0x02	; 2
     c5e:	9c 93       	st	X, r25
	result = pgm_read_byte(index);
     c60:	e8 2f       	mov	r30, r24
     c62:	f0 e0       	ldi	r31, 0x00	; 0
     c64:	84 91       	lpm	r24, Z

	/* Clean up NVM Command register. */
	NVM_CMD = NVM_CMD_NO_OPERATION_gc;
     c66:	1c 92       	st	X, r1

	return result;
}
     c68:	08 95       	ret

00000c6a <ADC_CalibrationValues_Set>:
	ADCA.PRESCALER |= ADC_PRESCALER_DIV16_gc;	//maximum ADC clock of 2 MHz
	ADCA.CTRLA |= ADC_ENABLE_bm;				//enable ADCA
}

void ADC_CalibrationValues_Set(ADC_t * adc)
{
     c6a:	cf 93       	push	r28
     c6c:	df 93       	push	r29
     c6e:	ec 01       	movw	r28, r24
	if(&ADCA == adc){
     c70:	c1 15       	cp	r28, r1
     c72:	82 e0       	ldi	r24, 0x02	; 2
     c74:	d8 07       	cpc	r29, r24
     c76:	39 f4       	brne	.+14     	; 0xc86 <ADC_CalibrationValues_Set+0x1c>
		/* Get ADCCAL0 from byte address 0x20 (Word address 0x10. */
		adc->CAL = SP_ReadCalibrationByte(0x20);
     c78:	80 e2       	ldi	r24, 0x20	; 32
     c7a:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     c7e:	90 e0       	ldi	r25, 0x00	; 0
     c80:	8c 87       	std	Y+12, r24	; 0x0c
     c82:	9d 87       	std	Y+13, r25	; 0x0d
     c84:	06 c0       	rjmp	.+12     	; 0xc92 <ADC_CalibrationValues_Set+0x28>
		}else {
		/* Get ADCCAL0 from byte address 0x24 (Word address 0x12. */
		adc->CAL = SP_ReadCalibrationByte(0x24);
     c86:	84 e2       	ldi	r24, 0x24	; 36
     c88:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     c8c:	90 e0       	ldi	r25, 0x00	; 0
     c8e:	8c 87       	std	Y+12, r24	; 0x0c
     c90:	9d 87       	std	Y+13, r25	; 0x0d
	}
}
     c92:	df 91       	pop	r29
     c94:	cf 91       	pop	r28
     c96:	08 95       	ret

00000c98 <adc_init>:
	DACA.CTRLA |= DAC_ENABLE_bm | DAC_CH0EN_bm | DAC_CH1EN_bm;
}

void adc_init(void)
{
	ADC_CalibrationValues_Set(&ADCA);
     c98:	80 e0       	ldi	r24, 0x00	; 0
     c9a:	92 e0       	ldi	r25, 0x02	; 2
     c9c:	0e 94 35 06 	call	0xc6a	; 0xc6a <ADC_CalibrationValues_Set>
	ADCA.CTRLB |= ADC_FREERUN_bm;
     ca0:	e0 e0       	ldi	r30, 0x00	; 0
     ca2:	f2 e0       	ldi	r31, 0x02	; 2
     ca4:	81 81       	ldd	r24, Z+1	; 0x01
     ca6:	88 60       	ori	r24, 0x08	; 8
     ca8:	81 83       	std	Z+1, r24	; 0x01
	ADCA.REFCTRL |= ADC_BANDGAP_bm;				//enable bandgap for internal vref
     caa:	82 81       	ldd	r24, Z+2	; 0x02
     cac:	82 60       	ori	r24, 0x02	; 2
     cae:	82 83       	std	Z+2, r24	; 0x02
	ADCA.CH0.CTRL |= ADC_CH_INPUTMODE_SINGLEENDED_gc;
     cb0:	80 a1       	ldd	r24, Z+32	; 0x20
     cb2:	81 60       	ori	r24, 0x01	; 1
     cb4:	80 a3       	std	Z+32, r24	; 0x20
	ADCA.PRESCALER |= ADC_PRESCALER_DIV16_gc;	//maximum ADC clock of 2 MHz
     cb6:	84 81       	ldd	r24, Z+4	; 0x04
     cb8:	82 60       	ori	r24, 0x02	; 2
     cba:	84 83       	std	Z+4, r24	; 0x04
	ADCA.CTRLA |= ADC_ENABLE_bm;				//enable ADCA
     cbc:	80 81       	ld	r24, Z
     cbe:	81 60       	ori	r24, 0x01	; 1
     cc0:	80 83       	st	Z, r24
     cc2:	08 95       	ret

00000cc4 <DAC_CalibrationValues_Set>:
		adc->CAL = SP_ReadCalibrationByte(0x24);
	}
}

void DAC_CalibrationValues_Set(DAC_t * dac)
{
     cc4:	cf 93       	push	r28
     cc6:	df 93       	push	r29
     cc8:	ec 01       	movw	r28, r24
	if(&DACA == dac){
     cca:	c1 15       	cp	r28, r1
     ccc:	83 e0       	ldi	r24, 0x03	; 3
     cce:	d8 07       	cpc	r29, r24
     cd0:	89 f4       	brne	.+34     	; 0xcf4 <DAC_CalibrationValues_Set+0x30>
		/* Get DACA0OFFCAL from byte address 0x30 */
		dac->CH0OFFSETCAL = SP_ReadCalibrationByte(0x30);
     cd2:	80 e3       	ldi	r24, 0x30	; 48
     cd4:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     cd8:	89 87       	std	Y+9, r24	; 0x09
		/* Get DACA0GAINCAL from byte address 0x31 */
		dac->CH0GAINCAL = SP_ReadCalibrationByte(0x31);
     cda:	81 e3       	ldi	r24, 0x31	; 49
     cdc:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     ce0:	88 87       	std	Y+8, r24	; 0x08
		/* Get DACA1OFFCAL from byte address 0x34 */
		dac->CH1OFFSETCAL = SP_ReadCalibrationByte(0x34);
     ce2:	84 e3       	ldi	r24, 0x34	; 52
     ce4:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     ce8:	8b 87       	std	Y+11, r24	; 0x0b
		/* Get DACA1GAINCAL from byte address 0x35 */
		dac->CH1GAINCAL = SP_ReadCalibrationByte(0x35);
     cea:	85 e3       	ldi	r24, 0x35	; 53
     cec:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     cf0:	8a 87       	std	Y+10, r24	; 0x0a
     cf2:	10 c0       	rjmp	.+32     	; 0xd14 <DAC_CalibrationValues_Set+0x50>
		}else {
		/* Get DACB0OFFCAL from byte address 0x32 */
		dac->CH0OFFSETCAL = SP_ReadCalibrationByte(0x32);
     cf4:	82 e3       	ldi	r24, 0x32	; 50
     cf6:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     cfa:	89 87       	std	Y+9, r24	; 0x09
		/* Get DACB0GAINCAL from byte address 0x33 */
		dac->CH0GAINCAL = SP_ReadCalibrationByte(0x33);
     cfc:	83 e3       	ldi	r24, 0x33	; 51
     cfe:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     d02:	88 87       	std	Y+8, r24	; 0x08
		/* Get DACB1OFFCAL from byte address 0x36 */
		dac->CH1OFFSETCAL = SP_ReadCalibrationByte(0x36);
     d04:	86 e3       	ldi	r24, 0x36	; 54
     d06:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     d0a:	8b 87       	std	Y+11, r24	; 0x0b
		/* Get DACB1GAINCAL from byte address 0x37 */
		dac->CH1GAINCAL = SP_ReadCalibrationByte(0x37);
     d0c:	87 e3       	ldi	r24, 0x37	; 55
     d0e:	0e 94 2c 06 	call	0xc58	; 0xc58 <SP_ReadCalibrationByte>
     d12:	8a 87       	std	Y+10, r24	; 0x0a
	}
}
     d14:	df 91       	pop	r29
     d16:	cf 91       	pop	r28
     d18:	08 95       	ret

00000d1a <dac_init>:
}


void dac_init(void)
{
	DAC_CalibrationValues_Set(&DACB);
     d1a:	80 e2       	ldi	r24, 0x20	; 32
     d1c:	93 e0       	ldi	r25, 0x03	; 3
     d1e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <DAC_CalibrationValues_Set>
	DACB.CTRLB |= DAC_CHSEL_DUAL_gc;
     d22:	e0 e2       	ldi	r30, 0x20	; 32
     d24:	f3 e0       	ldi	r31, 0x03	; 3
     d26:	81 81       	ldd	r24, Z+1	; 0x01
     d28:	80 64       	ori	r24, 0x40	; 64
     d2a:	81 83       	std	Z+1, r24	; 0x01
	DACB.CTRLC |= DAC_REFSEL_INT1V_gc;	// 1 volt internal reference. bug in xmega makes 0-.75v output noisy when using reference above 2v
     d2c:	82 81       	ldd	r24, Z+2	; 0x02
     d2e:	82 83       	std	Z+2, r24	; 0x02
	// DACB.TIMCTRL |= DAC_CONINTVAL_32CLK_gc;
	DACB.CH0DATAH = 0x00;
     d30:	11 8e       	std	Z+25, r1	; 0x19
	DACB.CH1DATAH = 0x00;
     d32:	13 8e       	std	Z+27, r1	; 0x1b
	DACB.CTRLA |= DAC_ENABLE_bm | DAC_CH0EN_bm | DAC_CH1EN_bm;
     d34:	80 81       	ld	r24, Z
     d36:	8d 60       	ori	r24, 0x0D	; 13
     d38:	80 83       	st	Z, r24
	
	DAC_CalibrationValues_Set(&DACA);
     d3a:	80 e0       	ldi	r24, 0x00	; 0
     d3c:	93 e0       	ldi	r25, 0x03	; 3
     d3e:	0e 94 62 06 	call	0xcc4	; 0xcc4 <DAC_CalibrationValues_Set>
	DACA.CTRLB |= DAC_CHSEL_DUAL_gc;
     d42:	e0 e0       	ldi	r30, 0x00	; 0
     d44:	f3 e0       	ldi	r31, 0x03	; 3
     d46:	81 81       	ldd	r24, Z+1	; 0x01
     d48:	80 64       	ori	r24, 0x40	; 64
     d4a:	81 83       	std	Z+1, r24	; 0x01
	DACA.CTRLC |= DAC_REFSEL_INT1V_gc;	// 1 volt internal reference. bug in xmega makes 0-.75v output noisy when using reference above 2v
     d4c:	82 81       	ldd	r24, Z+2	; 0x02
     d4e:	82 83       	std	Z+2, r24	; 0x02
	//DACA.TIMCTRL |= DAC_CONINTVAL_32CLK_gc;
	DACA.CH0DATAH = 0x00;
     d50:	11 8e       	std	Z+25, r1	; 0x19
	DACA.CH1DATAH = 0x00;
     d52:	13 8e       	std	Z+27, r1	; 0x1b
	DACA.CTRLA |= DAC_ENABLE_bm | DAC_CH0EN_bm | DAC_CH1EN_bm;
     d54:	80 81       	ld	r24, Z
     d56:	8d 60       	ori	r24, 0x0D	; 13
     d58:	80 83       	st	Z, r24
     d5a:	08 95       	ret

00000d5c <timer_init>:

	return result;
}

void timer_init(uint16_t topCount)
{
     d5c:	9c 01       	movw	r18, r24
	TCC1.CTRLB |= TC_WGMODE_NORMAL_gc;		//Normal mode, Output Compare pins disconnected
     d5e:	e0 e4       	ldi	r30, 0x40	; 64
     d60:	f8 e0       	ldi	r31, 0x08	; 8
     d62:	81 81       	ldd	r24, Z+1	; 0x01
     d64:	81 83       	std	Z+1, r24	; 0x01
	TCC1.INTCTRLA |= TC_OVFINTLVL_LO_gc;	//Enable overflow interrrupt
     d66:	96 81       	ldd	r25, Z+6	; 0x06
     d68:	91 60       	ori	r25, 0x01	; 1
     d6a:	96 83       	std	Z+6, r25	; 0x06
	TCC1.PER = topCount;					//Set Period
     d6c:	26 a3       	std	Z+38, r18	; 0x26
     d6e:	37 a3       	std	Z+39, r19	; 0x27
	TCC1.CTRLA |= TC_CLKSEL_DIV4_gc;		//Start at Clk/4
     d70:	80 81       	ld	r24, Z
     d72:	83 60       	ori	r24, 0x03	; 3
     d74:	80 83       	st	Z, r24
     d76:	08 95       	ret

00000d78 <main>:


int main(void)
{
	
	clk_init();
     d78:	0e 94 ed 05 	call	0xbda	; 0xbda <clk_init>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d7c:	2f ef       	ldi	r18, 0xFF	; 255
     d7e:	83 ed       	ldi	r24, 0xD3	; 211
     d80:	90 e3       	ldi	r25, 0x30	; 48
     d82:	21 50       	subi	r18, 0x01	; 1
     d84:	80 40       	sbci	r24, 0x00	; 0
     d86:	90 40       	sbci	r25, 0x00	; 0
     d88:	e1 f7       	brne	.-8      	; 0xd82 <main+0xa>
     d8a:	00 c0       	rjmp	.+0      	; 0xd8c <main+0x14>
     d8c:	00 00       	nop
    _delay_ms(500); //add a delay 0.5 for the encoder to stablize
	encoder_init();
     d8e:	0e 94 15 06 	call	0xc2a	; 0xc2a <encoder_init>
	usart_init();
     d92:	0e 94 fc 05 	call	0xbf8	; 0xbf8 <usart_init>
	dac_init();
     d96:	0e 94 8d 06 	call	0xd1a	; 0xd1a <dac_init>
	adc_init();
     d9a:	0e 94 4c 06 	call	0xc98	; 0xc98 <adc_init>
	
	PORTD.DIRSET = (1<<7);	//set D7 as output for timing pin
     d9e:	80 e8       	ldi	r24, 0x80	; 128
     da0:	80 93 61 06 	sts	0x0661, r24	; 0x800661 <__TEXT_REGION_LENGTH__+0x7de661>
	dacConst = 4095./(2.0*maxVoltage);		//Conversion factor for Control voltage to DAC value
     da4:	60 91 4a 20 	lds	r22, 0x204A	; 0x80204a <maxVoltage>
     da8:	70 91 4b 20 	lds	r23, 0x204B	; 0x80204b <maxVoltage+0x1>
     dac:	80 91 4c 20 	lds	r24, 0x204C	; 0x80204c <maxVoltage+0x2>
     db0:	90 91 4d 20 	lds	r25, 0x204D	; 0x80204d <maxVoltage+0x3>
     db4:	9b 01       	movw	r18, r22
     db6:	ac 01       	movw	r20, r24
     db8:	0e 94 0e 07 	call	0xe1c	; 0xe1c <__addsf3>
     dbc:	9b 01       	movw	r18, r22
     dbe:	ac 01       	movw	r20, r24
     dc0:	60 e0       	ldi	r22, 0x00	; 0
     dc2:	70 ef       	ldi	r23, 0xF0	; 240
     dc4:	8f e7       	ldi	r24, 0x7F	; 127
     dc6:	95 e4       	ldi	r25, 0x45	; 69
     dc8:	0e 94 7f 07 	call	0xefe	; 0xefe <__divsf3>
     dcc:	60 93 8e 20 	sts	0x208E, r22	; 0x80208e <__data_end>
     dd0:	70 93 8f 20 	sts	0x208F, r23	; 0x80208f <__data_end+0x1>
     dd4:	80 93 90 20 	sts	0x2090, r24	; 0x802090 <__data_end+0x2>
     dd8:	90 93 91 20 	sts	0x2091, r25	; 0x802091 <__data_end+0x3>
	topCount = (uint16_t)(Ts*8000000.);		//Computed TOP value for TCC1
     ddc:	60 91 4e 20 	lds	r22, 0x204E	; 0x80204e <Ts>
     de0:	70 91 4f 20 	lds	r23, 0x204F	; 0x80204f <Ts+0x1>
     de4:	80 91 50 20 	lds	r24, 0x2050	; 0x802050 <Ts+0x2>
     de8:	90 91 51 20 	lds	r25, 0x2051	; 0x802051 <Ts+0x3>
     dec:	20 e0       	ldi	r18, 0x00	; 0
     dee:	34 e2       	ldi	r19, 0x24	; 36
     df0:	44 ef       	ldi	r20, 0xF4	; 244
     df2:	5a e4       	ldi	r21, 0x4A	; 74
     df4:	0e 94 de 08 	call	0x11bc	; 0x11bc <__mulsf3>
     df8:	0e 94 f8 07 	call	0xff0	; 0xff0 <__fixunssfsi>
     dfc:	60 93 ca 20 	sts	0x20CA, r22	; 0x8020ca <topCount>
     e00:	70 93 cb 20 	sts	0x20CB, r23	; 0x8020cb <topCount+0x1>
	
	timer_init(topCount);
     e04:	80 91 ca 20 	lds	r24, 0x20CA	; 0x8020ca <topCount>
     e08:	90 91 cb 20 	lds	r25, 0x20CB	; 0x8020cb <topCount+0x1>
     e0c:	0e 94 ae 06 	call	0xd5c	; 0xd5c <timer_init>
	
	//enable intterupts all levels
	PMIC.CTRL = PMIC_HILVLEN_bm | PMIC_MEDLVLEN_bm | PMIC_LOLVLEN_bm;
     e10:	87 e0       	ldi	r24, 0x07	; 7
     e12:	80 93 a2 00 	sts	0x00A2, r24	; 0x8000a2 <__TEXT_REGION_LENGTH__+0x7de0a2>
	sei();
     e16:	78 94       	sei
     e18:	ff cf       	rjmp	.-2      	; 0xe18 <main+0xa0>

00000e1a <__subsf3>:
     e1a:	50 58       	subi	r21, 0x80	; 128

00000e1c <__addsf3>:
     e1c:	bb 27       	eor	r27, r27
     e1e:	aa 27       	eor	r26, r26
     e20:	0e 94 25 07 	call	0xe4a	; 0xe4a <__addsf3x>
     e24:	0c 94 9f 08 	jmp	0x113e	; 0x113e <__fp_round>
     e28:	0e 94 91 08 	call	0x1122	; 0x1122 <__fp_pscA>
     e2c:	38 f0       	brcs	.+14     	; 0xe3c <__addsf3+0x20>
     e2e:	0e 94 98 08 	call	0x1130	; 0x1130 <__fp_pscB>
     e32:	20 f0       	brcs	.+8      	; 0xe3c <__addsf3+0x20>
     e34:	39 f4       	brne	.+14     	; 0xe44 <__addsf3+0x28>
     e36:	9f 3f       	cpi	r25, 0xFF	; 255
     e38:	19 f4       	brne	.+6      	; 0xe40 <__addsf3+0x24>
     e3a:	26 f4       	brtc	.+8      	; 0xe44 <__addsf3+0x28>
     e3c:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__fp_nan>
     e40:	0e f4       	brtc	.+2      	; 0xe44 <__addsf3+0x28>
     e42:	e0 95       	com	r30
     e44:	e7 fb       	bst	r30, 7
     e46:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__fp_inf>

00000e4a <__addsf3x>:
     e4a:	e9 2f       	mov	r30, r25
     e4c:	0e 94 b0 08 	call	0x1160	; 0x1160 <__fp_split3>
     e50:	58 f3       	brcs	.-42     	; 0xe28 <__addsf3+0xc>
     e52:	ba 17       	cp	r27, r26
     e54:	62 07       	cpc	r22, r18
     e56:	73 07       	cpc	r23, r19
     e58:	84 07       	cpc	r24, r20
     e5a:	95 07       	cpc	r25, r21
     e5c:	20 f0       	brcs	.+8      	; 0xe66 <__addsf3x+0x1c>
     e5e:	79 f4       	brne	.+30     	; 0xe7e <__addsf3x+0x34>
     e60:	a6 f5       	brtc	.+104    	; 0xeca <__addsf3x+0x80>
     e62:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__fp_zero>
     e66:	0e f4       	brtc	.+2      	; 0xe6a <__addsf3x+0x20>
     e68:	e0 95       	com	r30
     e6a:	0b 2e       	mov	r0, r27
     e6c:	ba 2f       	mov	r27, r26
     e6e:	a0 2d       	mov	r26, r0
     e70:	0b 01       	movw	r0, r22
     e72:	b9 01       	movw	r22, r18
     e74:	90 01       	movw	r18, r0
     e76:	0c 01       	movw	r0, r24
     e78:	ca 01       	movw	r24, r20
     e7a:	a0 01       	movw	r20, r0
     e7c:	11 24       	eor	r1, r1
     e7e:	ff 27       	eor	r31, r31
     e80:	59 1b       	sub	r21, r25
     e82:	99 f0       	breq	.+38     	; 0xeaa <__addsf3x+0x60>
     e84:	59 3f       	cpi	r21, 0xF9	; 249
     e86:	50 f4       	brcc	.+20     	; 0xe9c <__addsf3x+0x52>
     e88:	50 3e       	cpi	r21, 0xE0	; 224
     e8a:	68 f1       	brcs	.+90     	; 0xee6 <__addsf3x+0x9c>
     e8c:	1a 16       	cp	r1, r26
     e8e:	f0 40       	sbci	r31, 0x00	; 0
     e90:	a2 2f       	mov	r26, r18
     e92:	23 2f       	mov	r18, r19
     e94:	34 2f       	mov	r19, r20
     e96:	44 27       	eor	r20, r20
     e98:	58 5f       	subi	r21, 0xF8	; 248
     e9a:	f3 cf       	rjmp	.-26     	; 0xe82 <__addsf3x+0x38>
     e9c:	46 95       	lsr	r20
     e9e:	37 95       	ror	r19
     ea0:	27 95       	ror	r18
     ea2:	a7 95       	ror	r26
     ea4:	f0 40       	sbci	r31, 0x00	; 0
     ea6:	53 95       	inc	r21
     ea8:	c9 f7       	brne	.-14     	; 0xe9c <__addsf3x+0x52>
     eaa:	7e f4       	brtc	.+30     	; 0xeca <__addsf3x+0x80>
     eac:	1f 16       	cp	r1, r31
     eae:	ba 0b       	sbc	r27, r26
     eb0:	62 0b       	sbc	r22, r18
     eb2:	73 0b       	sbc	r23, r19
     eb4:	84 0b       	sbc	r24, r20
     eb6:	ba f0       	brmi	.+46     	; 0xee6 <__addsf3x+0x9c>
     eb8:	91 50       	subi	r25, 0x01	; 1
     eba:	a1 f0       	breq	.+40     	; 0xee4 <__addsf3x+0x9a>
     ebc:	ff 0f       	add	r31, r31
     ebe:	bb 1f       	adc	r27, r27
     ec0:	66 1f       	adc	r22, r22
     ec2:	77 1f       	adc	r23, r23
     ec4:	88 1f       	adc	r24, r24
     ec6:	c2 f7       	brpl	.-16     	; 0xeb8 <__addsf3x+0x6e>
     ec8:	0e c0       	rjmp	.+28     	; 0xee6 <__addsf3x+0x9c>
     eca:	ba 0f       	add	r27, r26
     ecc:	62 1f       	adc	r22, r18
     ece:	73 1f       	adc	r23, r19
     ed0:	84 1f       	adc	r24, r20
     ed2:	48 f4       	brcc	.+18     	; 0xee6 <__addsf3x+0x9c>
     ed4:	87 95       	ror	r24
     ed6:	77 95       	ror	r23
     ed8:	67 95       	ror	r22
     eda:	b7 95       	ror	r27
     edc:	f7 95       	ror	r31
     ede:	9e 3f       	cpi	r25, 0xFE	; 254
     ee0:	08 f0       	brcs	.+2      	; 0xee4 <__addsf3x+0x9a>
     ee2:	b0 cf       	rjmp	.-160    	; 0xe44 <__addsf3+0x28>
     ee4:	93 95       	inc	r25
     ee6:	88 0f       	add	r24, r24
     ee8:	08 f0       	brcs	.+2      	; 0xeec <__addsf3x+0xa2>
     eea:	99 27       	eor	r25, r25
     eec:	ee 0f       	add	r30, r30
     eee:	97 95       	ror	r25
     ef0:	87 95       	ror	r24
     ef2:	08 95       	ret

00000ef4 <__cmpsf2>:
     ef4:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__fp_cmp>
     ef8:	08 f4       	brcc	.+2      	; 0xefc <__cmpsf2+0x8>
     efa:	81 e0       	ldi	r24, 0x01	; 1
     efc:	08 95       	ret

00000efe <__divsf3>:
     efe:	0e 94 93 07 	call	0xf26	; 0xf26 <__divsf3x>
     f02:	0c 94 9f 08 	jmp	0x113e	; 0x113e <__fp_round>
     f06:	0e 94 98 08 	call	0x1130	; 0x1130 <__fp_pscB>
     f0a:	58 f0       	brcs	.+22     	; 0xf22 <__divsf3+0x24>
     f0c:	0e 94 91 08 	call	0x1122	; 0x1122 <__fp_pscA>
     f10:	40 f0       	brcs	.+16     	; 0xf22 <__divsf3+0x24>
     f12:	29 f4       	brne	.+10     	; 0xf1e <__divsf3+0x20>
     f14:	5f 3f       	cpi	r21, 0xFF	; 255
     f16:	29 f0       	breq	.+10     	; 0xf22 <__divsf3+0x24>
     f18:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__fp_inf>
     f1c:	51 11       	cpse	r21, r1
     f1e:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__fp_szero>
     f22:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__fp_nan>

00000f26 <__divsf3x>:
     f26:	0e 94 b0 08 	call	0x1160	; 0x1160 <__fp_split3>
     f2a:	68 f3       	brcs	.-38     	; 0xf06 <__divsf3+0x8>

00000f2c <__divsf3_pse>:
     f2c:	99 23       	and	r25, r25
     f2e:	b1 f3       	breq	.-20     	; 0xf1c <__divsf3+0x1e>
     f30:	55 23       	and	r21, r21
     f32:	91 f3       	breq	.-28     	; 0xf18 <__divsf3+0x1a>
     f34:	95 1b       	sub	r25, r21
     f36:	55 0b       	sbc	r21, r21
     f38:	bb 27       	eor	r27, r27
     f3a:	aa 27       	eor	r26, r26
     f3c:	62 17       	cp	r22, r18
     f3e:	73 07       	cpc	r23, r19
     f40:	84 07       	cpc	r24, r20
     f42:	38 f0       	brcs	.+14     	; 0xf52 <__divsf3_pse+0x26>
     f44:	9f 5f       	subi	r25, 0xFF	; 255
     f46:	5f 4f       	sbci	r21, 0xFF	; 255
     f48:	22 0f       	add	r18, r18
     f4a:	33 1f       	adc	r19, r19
     f4c:	44 1f       	adc	r20, r20
     f4e:	aa 1f       	adc	r26, r26
     f50:	a9 f3       	breq	.-22     	; 0xf3c <__divsf3_pse+0x10>
     f52:	35 d0       	rcall	.+106    	; 0xfbe <__divsf3_pse+0x92>
     f54:	0e 2e       	mov	r0, r30
     f56:	3a f0       	brmi	.+14     	; 0xf66 <__divsf3_pse+0x3a>
     f58:	e0 e8       	ldi	r30, 0x80	; 128
     f5a:	32 d0       	rcall	.+100    	; 0xfc0 <__divsf3_pse+0x94>
     f5c:	91 50       	subi	r25, 0x01	; 1
     f5e:	50 40       	sbci	r21, 0x00	; 0
     f60:	e6 95       	lsr	r30
     f62:	00 1c       	adc	r0, r0
     f64:	ca f7       	brpl	.-14     	; 0xf58 <__divsf3_pse+0x2c>
     f66:	2b d0       	rcall	.+86     	; 0xfbe <__divsf3_pse+0x92>
     f68:	fe 2f       	mov	r31, r30
     f6a:	29 d0       	rcall	.+82     	; 0xfbe <__divsf3_pse+0x92>
     f6c:	66 0f       	add	r22, r22
     f6e:	77 1f       	adc	r23, r23
     f70:	88 1f       	adc	r24, r24
     f72:	bb 1f       	adc	r27, r27
     f74:	26 17       	cp	r18, r22
     f76:	37 07       	cpc	r19, r23
     f78:	48 07       	cpc	r20, r24
     f7a:	ab 07       	cpc	r26, r27
     f7c:	b0 e8       	ldi	r27, 0x80	; 128
     f7e:	09 f0       	breq	.+2      	; 0xf82 <__divsf3_pse+0x56>
     f80:	bb 0b       	sbc	r27, r27
     f82:	80 2d       	mov	r24, r0
     f84:	bf 01       	movw	r22, r30
     f86:	ff 27       	eor	r31, r31
     f88:	93 58       	subi	r25, 0x83	; 131
     f8a:	5f 4f       	sbci	r21, 0xFF	; 255
     f8c:	3a f0       	brmi	.+14     	; 0xf9c <__divsf3_pse+0x70>
     f8e:	9e 3f       	cpi	r25, 0xFE	; 254
     f90:	51 05       	cpc	r21, r1
     f92:	78 f0       	brcs	.+30     	; 0xfb2 <__divsf3_pse+0x86>
     f94:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__fp_inf>
     f98:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__fp_szero>
     f9c:	5f 3f       	cpi	r21, 0xFF	; 255
     f9e:	e4 f3       	brlt	.-8      	; 0xf98 <__divsf3_pse+0x6c>
     fa0:	98 3e       	cpi	r25, 0xE8	; 232
     fa2:	d4 f3       	brlt	.-12     	; 0xf98 <__divsf3_pse+0x6c>
     fa4:	86 95       	lsr	r24
     fa6:	77 95       	ror	r23
     fa8:	67 95       	ror	r22
     faa:	b7 95       	ror	r27
     fac:	f7 95       	ror	r31
     fae:	9f 5f       	subi	r25, 0xFF	; 255
     fb0:	c9 f7       	brne	.-14     	; 0xfa4 <__divsf3_pse+0x78>
     fb2:	88 0f       	add	r24, r24
     fb4:	91 1d       	adc	r25, r1
     fb6:	96 95       	lsr	r25
     fb8:	87 95       	ror	r24
     fba:	97 f9       	bld	r25, 7
     fbc:	08 95       	ret
     fbe:	e1 e0       	ldi	r30, 0x01	; 1
     fc0:	66 0f       	add	r22, r22
     fc2:	77 1f       	adc	r23, r23
     fc4:	88 1f       	adc	r24, r24
     fc6:	bb 1f       	adc	r27, r27
     fc8:	62 17       	cp	r22, r18
     fca:	73 07       	cpc	r23, r19
     fcc:	84 07       	cpc	r24, r20
     fce:	ba 07       	cpc	r27, r26
     fd0:	20 f0       	brcs	.+8      	; 0xfda <__divsf3_pse+0xae>
     fd2:	62 1b       	sub	r22, r18
     fd4:	73 0b       	sbc	r23, r19
     fd6:	84 0b       	sbc	r24, r20
     fd8:	ba 0b       	sbc	r27, r26
     fda:	ee 1f       	adc	r30, r30
     fdc:	88 f7       	brcc	.-30     	; 0xfc0 <__divsf3_pse+0x94>
     fde:	e0 95       	com	r30
     fe0:	08 95       	ret

00000fe2 <__fixsfsi>:
     fe2:	0e 94 f8 07 	call	0xff0	; 0xff0 <__fixunssfsi>
     fe6:	68 94       	set
     fe8:	b1 11       	cpse	r27, r1
     fea:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__fp_szero>
     fee:	08 95       	ret

00000ff0 <__fixunssfsi>:
     ff0:	0e 94 b8 08 	call	0x1170	; 0x1170 <__fp_splitA>
     ff4:	88 f0       	brcs	.+34     	; 0x1018 <__fixunssfsi+0x28>
     ff6:	9f 57       	subi	r25, 0x7F	; 127
     ff8:	98 f0       	brcs	.+38     	; 0x1020 <__fixunssfsi+0x30>
     ffa:	b9 2f       	mov	r27, r25
     ffc:	99 27       	eor	r25, r25
     ffe:	b7 51       	subi	r27, 0x17	; 23
    1000:	b0 f0       	brcs	.+44     	; 0x102e <__fixunssfsi+0x3e>
    1002:	e1 f0       	breq	.+56     	; 0x103c <__fixunssfsi+0x4c>
    1004:	66 0f       	add	r22, r22
    1006:	77 1f       	adc	r23, r23
    1008:	88 1f       	adc	r24, r24
    100a:	99 1f       	adc	r25, r25
    100c:	1a f0       	brmi	.+6      	; 0x1014 <__fixunssfsi+0x24>
    100e:	ba 95       	dec	r27
    1010:	c9 f7       	brne	.-14     	; 0x1004 <__fixunssfsi+0x14>
    1012:	14 c0       	rjmp	.+40     	; 0x103c <__fixunssfsi+0x4c>
    1014:	b1 30       	cpi	r27, 0x01	; 1
    1016:	91 f0       	breq	.+36     	; 0x103c <__fixunssfsi+0x4c>
    1018:	0e 94 d2 08 	call	0x11a4	; 0x11a4 <__fp_zero>
    101c:	b1 e0       	ldi	r27, 0x01	; 1
    101e:	08 95       	ret
    1020:	0c 94 d2 08 	jmp	0x11a4	; 0x11a4 <__fp_zero>
    1024:	67 2f       	mov	r22, r23
    1026:	78 2f       	mov	r23, r24
    1028:	88 27       	eor	r24, r24
    102a:	b8 5f       	subi	r27, 0xF8	; 248
    102c:	39 f0       	breq	.+14     	; 0x103c <__fixunssfsi+0x4c>
    102e:	b9 3f       	cpi	r27, 0xF9	; 249
    1030:	cc f3       	brlt	.-14     	; 0x1024 <__fixunssfsi+0x34>
    1032:	86 95       	lsr	r24
    1034:	77 95       	ror	r23
    1036:	67 95       	ror	r22
    1038:	b3 95       	inc	r27
    103a:	d9 f7       	brne	.-10     	; 0x1032 <__fixunssfsi+0x42>
    103c:	3e f4       	brtc	.+14     	; 0x104c <__fixunssfsi+0x5c>
    103e:	90 95       	com	r25
    1040:	80 95       	com	r24
    1042:	70 95       	com	r23
    1044:	61 95       	neg	r22
    1046:	7f 4f       	sbci	r23, 0xFF	; 255
    1048:	8f 4f       	sbci	r24, 0xFF	; 255
    104a:	9f 4f       	sbci	r25, 0xFF	; 255
    104c:	08 95       	ret

0000104e <__floatunsisf>:
    104e:	e8 94       	clt
    1050:	09 c0       	rjmp	.+18     	; 0x1064 <__floatsisf+0x12>

00001052 <__floatsisf>:
    1052:	97 fb       	bst	r25, 7
    1054:	3e f4       	brtc	.+14     	; 0x1064 <__floatsisf+0x12>
    1056:	90 95       	com	r25
    1058:	80 95       	com	r24
    105a:	70 95       	com	r23
    105c:	61 95       	neg	r22
    105e:	7f 4f       	sbci	r23, 0xFF	; 255
    1060:	8f 4f       	sbci	r24, 0xFF	; 255
    1062:	9f 4f       	sbci	r25, 0xFF	; 255
    1064:	99 23       	and	r25, r25
    1066:	a9 f0       	breq	.+42     	; 0x1092 <__floatsisf+0x40>
    1068:	f9 2f       	mov	r31, r25
    106a:	96 e9       	ldi	r25, 0x96	; 150
    106c:	bb 27       	eor	r27, r27
    106e:	93 95       	inc	r25
    1070:	f6 95       	lsr	r31
    1072:	87 95       	ror	r24
    1074:	77 95       	ror	r23
    1076:	67 95       	ror	r22
    1078:	b7 95       	ror	r27
    107a:	f1 11       	cpse	r31, r1
    107c:	f8 cf       	rjmp	.-16     	; 0x106e <__floatsisf+0x1c>
    107e:	fa f4       	brpl	.+62     	; 0x10be <__floatsisf+0x6c>
    1080:	bb 0f       	add	r27, r27
    1082:	11 f4       	brne	.+4      	; 0x1088 <__floatsisf+0x36>
    1084:	60 ff       	sbrs	r22, 0
    1086:	1b c0       	rjmp	.+54     	; 0x10be <__floatsisf+0x6c>
    1088:	6f 5f       	subi	r22, 0xFF	; 255
    108a:	7f 4f       	sbci	r23, 0xFF	; 255
    108c:	8f 4f       	sbci	r24, 0xFF	; 255
    108e:	9f 4f       	sbci	r25, 0xFF	; 255
    1090:	16 c0       	rjmp	.+44     	; 0x10be <__floatsisf+0x6c>
    1092:	88 23       	and	r24, r24
    1094:	11 f0       	breq	.+4      	; 0x109a <__floatsisf+0x48>
    1096:	96 e9       	ldi	r25, 0x96	; 150
    1098:	11 c0       	rjmp	.+34     	; 0x10bc <__floatsisf+0x6a>
    109a:	77 23       	and	r23, r23
    109c:	21 f0       	breq	.+8      	; 0x10a6 <__floatsisf+0x54>
    109e:	9e e8       	ldi	r25, 0x8E	; 142
    10a0:	87 2f       	mov	r24, r23
    10a2:	76 2f       	mov	r23, r22
    10a4:	05 c0       	rjmp	.+10     	; 0x10b0 <__floatsisf+0x5e>
    10a6:	66 23       	and	r22, r22
    10a8:	71 f0       	breq	.+28     	; 0x10c6 <__floatsisf+0x74>
    10aa:	96 e8       	ldi	r25, 0x86	; 134
    10ac:	86 2f       	mov	r24, r22
    10ae:	70 e0       	ldi	r23, 0x00	; 0
    10b0:	60 e0       	ldi	r22, 0x00	; 0
    10b2:	2a f0       	brmi	.+10     	; 0x10be <__floatsisf+0x6c>
    10b4:	9a 95       	dec	r25
    10b6:	66 0f       	add	r22, r22
    10b8:	77 1f       	adc	r23, r23
    10ba:	88 1f       	adc	r24, r24
    10bc:	da f7       	brpl	.-10     	; 0x10b4 <__floatsisf+0x62>
    10be:	88 0f       	add	r24, r24
    10c0:	96 95       	lsr	r25
    10c2:	87 95       	ror	r24
    10c4:	97 f9       	bld	r25, 7
    10c6:	08 95       	ret

000010c8 <__fp_cmp>:
    10c8:	99 0f       	add	r25, r25
    10ca:	00 08       	sbc	r0, r0
    10cc:	55 0f       	add	r21, r21
    10ce:	aa 0b       	sbc	r26, r26
    10d0:	e0 e8       	ldi	r30, 0x80	; 128
    10d2:	fe ef       	ldi	r31, 0xFE	; 254
    10d4:	16 16       	cp	r1, r22
    10d6:	17 06       	cpc	r1, r23
    10d8:	e8 07       	cpc	r30, r24
    10da:	f9 07       	cpc	r31, r25
    10dc:	c0 f0       	brcs	.+48     	; 0x110e <__fp_cmp+0x46>
    10de:	12 16       	cp	r1, r18
    10e0:	13 06       	cpc	r1, r19
    10e2:	e4 07       	cpc	r30, r20
    10e4:	f5 07       	cpc	r31, r21
    10e6:	98 f0       	brcs	.+38     	; 0x110e <__fp_cmp+0x46>
    10e8:	62 1b       	sub	r22, r18
    10ea:	73 0b       	sbc	r23, r19
    10ec:	84 0b       	sbc	r24, r20
    10ee:	95 0b       	sbc	r25, r21
    10f0:	39 f4       	brne	.+14     	; 0x1100 <__fp_cmp+0x38>
    10f2:	0a 26       	eor	r0, r26
    10f4:	61 f0       	breq	.+24     	; 0x110e <__fp_cmp+0x46>
    10f6:	23 2b       	or	r18, r19
    10f8:	24 2b       	or	r18, r20
    10fa:	25 2b       	or	r18, r21
    10fc:	21 f4       	brne	.+8      	; 0x1106 <__fp_cmp+0x3e>
    10fe:	08 95       	ret
    1100:	0a 26       	eor	r0, r26
    1102:	09 f4       	brne	.+2      	; 0x1106 <__fp_cmp+0x3e>
    1104:	a1 40       	sbci	r26, 0x01	; 1
    1106:	a6 95       	lsr	r26
    1108:	8f ef       	ldi	r24, 0xFF	; 255
    110a:	81 1d       	adc	r24, r1
    110c:	81 1d       	adc	r24, r1
    110e:	08 95       	ret

00001110 <__fp_inf>:
    1110:	97 f9       	bld	r25, 7
    1112:	9f 67       	ori	r25, 0x7F	; 127
    1114:	80 e8       	ldi	r24, 0x80	; 128
    1116:	70 e0       	ldi	r23, 0x00	; 0
    1118:	60 e0       	ldi	r22, 0x00	; 0
    111a:	08 95       	ret

0000111c <__fp_nan>:
    111c:	9f ef       	ldi	r25, 0xFF	; 255
    111e:	80 ec       	ldi	r24, 0xC0	; 192
    1120:	08 95       	ret

00001122 <__fp_pscA>:
    1122:	00 24       	eor	r0, r0
    1124:	0a 94       	dec	r0
    1126:	16 16       	cp	r1, r22
    1128:	17 06       	cpc	r1, r23
    112a:	18 06       	cpc	r1, r24
    112c:	09 06       	cpc	r0, r25
    112e:	08 95       	ret

00001130 <__fp_pscB>:
    1130:	00 24       	eor	r0, r0
    1132:	0a 94       	dec	r0
    1134:	12 16       	cp	r1, r18
    1136:	13 06       	cpc	r1, r19
    1138:	14 06       	cpc	r1, r20
    113a:	05 06       	cpc	r0, r21
    113c:	08 95       	ret

0000113e <__fp_round>:
    113e:	09 2e       	mov	r0, r25
    1140:	03 94       	inc	r0
    1142:	00 0c       	add	r0, r0
    1144:	11 f4       	brne	.+4      	; 0x114a <__fp_round+0xc>
    1146:	88 23       	and	r24, r24
    1148:	52 f0       	brmi	.+20     	; 0x115e <__fp_round+0x20>
    114a:	bb 0f       	add	r27, r27
    114c:	40 f4       	brcc	.+16     	; 0x115e <__fp_round+0x20>
    114e:	bf 2b       	or	r27, r31
    1150:	11 f4       	brne	.+4      	; 0x1156 <__fp_round+0x18>
    1152:	60 ff       	sbrs	r22, 0
    1154:	04 c0       	rjmp	.+8      	; 0x115e <__fp_round+0x20>
    1156:	6f 5f       	subi	r22, 0xFF	; 255
    1158:	7f 4f       	sbci	r23, 0xFF	; 255
    115a:	8f 4f       	sbci	r24, 0xFF	; 255
    115c:	9f 4f       	sbci	r25, 0xFF	; 255
    115e:	08 95       	ret

00001160 <__fp_split3>:
    1160:	57 fd       	sbrc	r21, 7
    1162:	90 58       	subi	r25, 0x80	; 128
    1164:	44 0f       	add	r20, r20
    1166:	55 1f       	adc	r21, r21
    1168:	59 f0       	breq	.+22     	; 0x1180 <__fp_splitA+0x10>
    116a:	5f 3f       	cpi	r21, 0xFF	; 255
    116c:	71 f0       	breq	.+28     	; 0x118a <__fp_splitA+0x1a>
    116e:	47 95       	ror	r20

00001170 <__fp_splitA>:
    1170:	88 0f       	add	r24, r24
    1172:	97 fb       	bst	r25, 7
    1174:	99 1f       	adc	r25, r25
    1176:	61 f0       	breq	.+24     	; 0x1190 <__fp_splitA+0x20>
    1178:	9f 3f       	cpi	r25, 0xFF	; 255
    117a:	79 f0       	breq	.+30     	; 0x119a <__fp_splitA+0x2a>
    117c:	87 95       	ror	r24
    117e:	08 95       	ret
    1180:	12 16       	cp	r1, r18
    1182:	13 06       	cpc	r1, r19
    1184:	14 06       	cpc	r1, r20
    1186:	55 1f       	adc	r21, r21
    1188:	f2 cf       	rjmp	.-28     	; 0x116e <__fp_split3+0xe>
    118a:	46 95       	lsr	r20
    118c:	f1 df       	rcall	.-30     	; 0x1170 <__fp_splitA>
    118e:	08 c0       	rjmp	.+16     	; 0x11a0 <__fp_splitA+0x30>
    1190:	16 16       	cp	r1, r22
    1192:	17 06       	cpc	r1, r23
    1194:	18 06       	cpc	r1, r24
    1196:	99 1f       	adc	r25, r25
    1198:	f1 cf       	rjmp	.-30     	; 0x117c <__fp_splitA+0xc>
    119a:	86 95       	lsr	r24
    119c:	71 05       	cpc	r23, r1
    119e:	61 05       	cpc	r22, r1
    11a0:	08 94       	sec
    11a2:	08 95       	ret

000011a4 <__fp_zero>:
    11a4:	e8 94       	clt

000011a6 <__fp_szero>:
    11a6:	bb 27       	eor	r27, r27
    11a8:	66 27       	eor	r22, r22
    11aa:	77 27       	eor	r23, r23
    11ac:	cb 01       	movw	r24, r22
    11ae:	97 f9       	bld	r25, 7
    11b0:	08 95       	ret

000011b2 <__gesf2>:
    11b2:	0e 94 64 08 	call	0x10c8	; 0x10c8 <__fp_cmp>
    11b6:	08 f4       	brcc	.+2      	; 0x11ba <__gesf2+0x8>
    11b8:	8f ef       	ldi	r24, 0xFF	; 255
    11ba:	08 95       	ret

000011bc <__mulsf3>:
    11bc:	0e 94 f1 08 	call	0x11e2	; 0x11e2 <__mulsf3x>
    11c0:	0c 94 9f 08 	jmp	0x113e	; 0x113e <__fp_round>
    11c4:	0e 94 91 08 	call	0x1122	; 0x1122 <__fp_pscA>
    11c8:	38 f0       	brcs	.+14     	; 0x11d8 <__mulsf3+0x1c>
    11ca:	0e 94 98 08 	call	0x1130	; 0x1130 <__fp_pscB>
    11ce:	20 f0       	brcs	.+8      	; 0x11d8 <__mulsf3+0x1c>
    11d0:	95 23       	and	r25, r21
    11d2:	11 f0       	breq	.+4      	; 0x11d8 <__mulsf3+0x1c>
    11d4:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__fp_inf>
    11d8:	0c 94 8e 08 	jmp	0x111c	; 0x111c <__fp_nan>
    11dc:	11 24       	eor	r1, r1
    11de:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__fp_szero>

000011e2 <__mulsf3x>:
    11e2:	0e 94 b0 08 	call	0x1160	; 0x1160 <__fp_split3>
    11e6:	70 f3       	brcs	.-36     	; 0x11c4 <__mulsf3+0x8>

000011e8 <__mulsf3_pse>:
    11e8:	95 9f       	mul	r25, r21
    11ea:	c1 f3       	breq	.-16     	; 0x11dc <__mulsf3+0x20>
    11ec:	95 0f       	add	r25, r21
    11ee:	50 e0       	ldi	r21, 0x00	; 0
    11f0:	55 1f       	adc	r21, r21
    11f2:	62 9f       	mul	r22, r18
    11f4:	f0 01       	movw	r30, r0
    11f6:	72 9f       	mul	r23, r18
    11f8:	bb 27       	eor	r27, r27
    11fa:	f0 0d       	add	r31, r0
    11fc:	b1 1d       	adc	r27, r1
    11fe:	63 9f       	mul	r22, r19
    1200:	aa 27       	eor	r26, r26
    1202:	f0 0d       	add	r31, r0
    1204:	b1 1d       	adc	r27, r1
    1206:	aa 1f       	adc	r26, r26
    1208:	64 9f       	mul	r22, r20
    120a:	66 27       	eor	r22, r22
    120c:	b0 0d       	add	r27, r0
    120e:	a1 1d       	adc	r26, r1
    1210:	66 1f       	adc	r22, r22
    1212:	82 9f       	mul	r24, r18
    1214:	22 27       	eor	r18, r18
    1216:	b0 0d       	add	r27, r0
    1218:	a1 1d       	adc	r26, r1
    121a:	62 1f       	adc	r22, r18
    121c:	73 9f       	mul	r23, r19
    121e:	b0 0d       	add	r27, r0
    1220:	a1 1d       	adc	r26, r1
    1222:	62 1f       	adc	r22, r18
    1224:	83 9f       	mul	r24, r19
    1226:	a0 0d       	add	r26, r0
    1228:	61 1d       	adc	r22, r1
    122a:	22 1f       	adc	r18, r18
    122c:	74 9f       	mul	r23, r20
    122e:	33 27       	eor	r19, r19
    1230:	a0 0d       	add	r26, r0
    1232:	61 1d       	adc	r22, r1
    1234:	23 1f       	adc	r18, r19
    1236:	84 9f       	mul	r24, r20
    1238:	60 0d       	add	r22, r0
    123a:	21 1d       	adc	r18, r1
    123c:	82 2f       	mov	r24, r18
    123e:	76 2f       	mov	r23, r22
    1240:	6a 2f       	mov	r22, r26
    1242:	11 24       	eor	r1, r1
    1244:	9f 57       	subi	r25, 0x7F	; 127
    1246:	50 40       	sbci	r21, 0x00	; 0
    1248:	9a f0       	brmi	.+38     	; 0x1270 <__mulsf3_pse+0x88>
    124a:	f1 f0       	breq	.+60     	; 0x1288 <__mulsf3_pse+0xa0>
    124c:	88 23       	and	r24, r24
    124e:	4a f0       	brmi	.+18     	; 0x1262 <__mulsf3_pse+0x7a>
    1250:	ee 0f       	add	r30, r30
    1252:	ff 1f       	adc	r31, r31
    1254:	bb 1f       	adc	r27, r27
    1256:	66 1f       	adc	r22, r22
    1258:	77 1f       	adc	r23, r23
    125a:	88 1f       	adc	r24, r24
    125c:	91 50       	subi	r25, 0x01	; 1
    125e:	50 40       	sbci	r21, 0x00	; 0
    1260:	a9 f7       	brne	.-22     	; 0x124c <__mulsf3_pse+0x64>
    1262:	9e 3f       	cpi	r25, 0xFE	; 254
    1264:	51 05       	cpc	r21, r1
    1266:	80 f0       	brcs	.+32     	; 0x1288 <__mulsf3_pse+0xa0>
    1268:	0c 94 88 08 	jmp	0x1110	; 0x1110 <__fp_inf>
    126c:	0c 94 d3 08 	jmp	0x11a6	; 0x11a6 <__fp_szero>
    1270:	5f 3f       	cpi	r21, 0xFF	; 255
    1272:	e4 f3       	brlt	.-8      	; 0x126c <__mulsf3_pse+0x84>
    1274:	98 3e       	cpi	r25, 0xE8	; 232
    1276:	d4 f3       	brlt	.-12     	; 0x126c <__mulsf3_pse+0x84>
    1278:	86 95       	lsr	r24
    127a:	77 95       	ror	r23
    127c:	67 95       	ror	r22
    127e:	b7 95       	ror	r27
    1280:	f7 95       	ror	r31
    1282:	e7 95       	ror	r30
    1284:	9f 5f       	subi	r25, 0xFF	; 255
    1286:	c1 f7       	brne	.-16     	; 0x1278 <__mulsf3_pse+0x90>
    1288:	fe 2b       	or	r31, r30
    128a:	88 0f       	add	r24, r24
    128c:	91 1d       	adc	r25, r1
    128e:	96 95       	lsr	r25
    1290:	87 95       	ror	r24
    1292:	97 f9       	bld	r25, 7
    1294:	08 95       	ret

00001296 <fdevopen>:
    1296:	0f 93       	push	r16
    1298:	1f 93       	push	r17
    129a:	cf 93       	push	r28
    129c:	df 93       	push	r29
    129e:	00 97       	sbiw	r24, 0x00	; 0
    12a0:	31 f4       	brne	.+12     	; 0x12ae <fdevopen+0x18>
    12a2:	61 15       	cp	r22, r1
    12a4:	71 05       	cpc	r23, r1
    12a6:	19 f4       	brne	.+6      	; 0x12ae <fdevopen+0x18>
    12a8:	80 e0       	ldi	r24, 0x00	; 0
    12aa:	90 e0       	ldi	r25, 0x00	; 0
    12ac:	3a c0       	rjmp	.+116    	; 0x1322 <fdevopen+0x8c>
    12ae:	8b 01       	movw	r16, r22
    12b0:	ec 01       	movw	r28, r24
    12b2:	6e e0       	ldi	r22, 0x0E	; 14
    12b4:	70 e0       	ldi	r23, 0x00	; 0
    12b6:	81 e0       	ldi	r24, 0x01	; 1
    12b8:	90 e0       	ldi	r25, 0x00	; 0
    12ba:	0e 94 ae 0b 	call	0x175c	; 0x175c <calloc>
    12be:	fc 01       	movw	r30, r24
    12c0:	89 2b       	or	r24, r25
    12c2:	91 f3       	breq	.-28     	; 0x12a8 <fdevopen+0x12>
    12c4:	80 e8       	ldi	r24, 0x80	; 128
    12c6:	83 83       	std	Z+3, r24	; 0x03
    12c8:	01 15       	cp	r16, r1
    12ca:	11 05       	cpc	r17, r1
    12cc:	71 f0       	breq	.+28     	; 0x12ea <fdevopen+0x54>
    12ce:	02 87       	std	Z+10, r16	; 0x0a
    12d0:	13 87       	std	Z+11, r17	; 0x0b
    12d2:	81 e8       	ldi	r24, 0x81	; 129
    12d4:	83 83       	std	Z+3, r24	; 0x03
    12d6:	80 91 e8 20 	lds	r24, 0x20E8	; 0x8020e8 <__iob>
    12da:	90 91 e9 20 	lds	r25, 0x20E9	; 0x8020e9 <__iob+0x1>
    12de:	89 2b       	or	r24, r25
    12e0:	21 f4       	brne	.+8      	; 0x12ea <fdevopen+0x54>
    12e2:	e0 93 e8 20 	sts	0x20E8, r30	; 0x8020e8 <__iob>
    12e6:	f0 93 e9 20 	sts	0x20E9, r31	; 0x8020e9 <__iob+0x1>
    12ea:	20 97       	sbiw	r28, 0x00	; 0
    12ec:	c9 f0       	breq	.+50     	; 0x1320 <fdevopen+0x8a>
    12ee:	c0 87       	std	Z+8, r28	; 0x08
    12f0:	d1 87       	std	Z+9, r29	; 0x09
    12f2:	83 81       	ldd	r24, Z+3	; 0x03
    12f4:	82 60       	ori	r24, 0x02	; 2
    12f6:	83 83       	std	Z+3, r24	; 0x03
    12f8:	80 91 ea 20 	lds	r24, 0x20EA	; 0x8020ea <__iob+0x2>
    12fc:	90 91 eb 20 	lds	r25, 0x20EB	; 0x8020eb <__iob+0x3>
    1300:	89 2b       	or	r24, r25
    1302:	71 f4       	brne	.+28     	; 0x1320 <fdevopen+0x8a>
    1304:	e0 93 ea 20 	sts	0x20EA, r30	; 0x8020ea <__iob+0x2>
    1308:	f0 93 eb 20 	sts	0x20EB, r31	; 0x8020eb <__iob+0x3>
    130c:	80 91 ec 20 	lds	r24, 0x20EC	; 0x8020ec <__iob+0x4>
    1310:	90 91 ed 20 	lds	r25, 0x20ED	; 0x8020ed <__iob+0x5>
    1314:	89 2b       	or	r24, r25
    1316:	21 f4       	brne	.+8      	; 0x1320 <fdevopen+0x8a>
    1318:	e0 93 ec 20 	sts	0x20EC, r30	; 0x8020ec <__iob+0x4>
    131c:	f0 93 ed 20 	sts	0x20ED, r31	; 0x8020ed <__iob+0x5>
    1320:	cf 01       	movw	r24, r30
    1322:	df 91       	pop	r29
    1324:	cf 91       	pop	r28
    1326:	1f 91       	pop	r17
    1328:	0f 91       	pop	r16
    132a:	08 95       	ret

0000132c <printf>:
    132c:	cf 93       	push	r28
    132e:	df 93       	push	r29
    1330:	cd b7       	in	r28, 0x3d	; 61
    1332:	de b7       	in	r29, 0x3e	; 62
    1334:	ae 01       	movw	r20, r28
    1336:	4a 5f       	subi	r20, 0xFA	; 250
    1338:	5f 4f       	sbci	r21, 0xFF	; 255
    133a:	fa 01       	movw	r30, r20
    133c:	61 91       	ld	r22, Z+
    133e:	71 91       	ld	r23, Z+
    1340:	af 01       	movw	r20, r30
    1342:	80 91 ea 20 	lds	r24, 0x20EA	; 0x8020ea <__iob+0x2>
    1346:	90 91 eb 20 	lds	r25, 0x20EB	; 0x8020eb <__iob+0x3>
    134a:	0e 94 aa 09 	call	0x1354	; 0x1354 <vfprintf>
    134e:	df 91       	pop	r29
    1350:	cf 91       	pop	r28
    1352:	08 95       	ret

00001354 <vfprintf>:
    1354:	2f 92       	push	r2
    1356:	3f 92       	push	r3
    1358:	4f 92       	push	r4
    135a:	5f 92       	push	r5
    135c:	6f 92       	push	r6
    135e:	7f 92       	push	r7
    1360:	8f 92       	push	r8
    1362:	9f 92       	push	r9
    1364:	af 92       	push	r10
    1366:	bf 92       	push	r11
    1368:	cf 92       	push	r12
    136a:	df 92       	push	r13
    136c:	ef 92       	push	r14
    136e:	ff 92       	push	r15
    1370:	0f 93       	push	r16
    1372:	1f 93       	push	r17
    1374:	cf 93       	push	r28
    1376:	df 93       	push	r29
    1378:	cd b7       	in	r28, 0x3d	; 61
    137a:	de b7       	in	r29, 0x3e	; 62
    137c:	2b 97       	sbiw	r28, 0x0b	; 11
    137e:	cd bf       	out	0x3d, r28	; 61
    1380:	de bf       	out	0x3e, r29	; 62
    1382:	6c 01       	movw	r12, r24
    1384:	7b 01       	movw	r14, r22
    1386:	8a 01       	movw	r16, r20
    1388:	fc 01       	movw	r30, r24
    138a:	16 82       	std	Z+6, r1	; 0x06
    138c:	17 82       	std	Z+7, r1	; 0x07
    138e:	83 81       	ldd	r24, Z+3	; 0x03
    1390:	81 ff       	sbrs	r24, 1
    1392:	cc c1       	rjmp	.+920    	; 0x172c <vfprintf+0x3d8>
    1394:	ce 01       	movw	r24, r28
    1396:	01 96       	adiw	r24, 0x01	; 1
    1398:	3c 01       	movw	r6, r24
    139a:	f6 01       	movw	r30, r12
    139c:	93 81       	ldd	r25, Z+3	; 0x03
    139e:	f7 01       	movw	r30, r14
    13a0:	93 fd       	sbrc	r25, 3
    13a2:	85 91       	lpm	r24, Z+
    13a4:	93 ff       	sbrs	r25, 3
    13a6:	81 91       	ld	r24, Z+
    13a8:	7f 01       	movw	r14, r30
    13aa:	88 23       	and	r24, r24
    13ac:	09 f4       	brne	.+2      	; 0x13b0 <vfprintf+0x5c>
    13ae:	ba c1       	rjmp	.+884    	; 0x1724 <vfprintf+0x3d0>
    13b0:	85 32       	cpi	r24, 0x25	; 37
    13b2:	39 f4       	brne	.+14     	; 0x13c2 <vfprintf+0x6e>
    13b4:	93 fd       	sbrc	r25, 3
    13b6:	85 91       	lpm	r24, Z+
    13b8:	93 ff       	sbrs	r25, 3
    13ba:	81 91       	ld	r24, Z+
    13bc:	7f 01       	movw	r14, r30
    13be:	85 32       	cpi	r24, 0x25	; 37
    13c0:	29 f4       	brne	.+10     	; 0x13cc <vfprintf+0x78>
    13c2:	b6 01       	movw	r22, r12
    13c4:	90 e0       	ldi	r25, 0x00	; 0
    13c6:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    13ca:	e7 cf       	rjmp	.-50     	; 0x139a <vfprintf+0x46>
    13cc:	91 2c       	mov	r9, r1
    13ce:	21 2c       	mov	r2, r1
    13d0:	31 2c       	mov	r3, r1
    13d2:	ff e1       	ldi	r31, 0x1F	; 31
    13d4:	f3 15       	cp	r31, r3
    13d6:	d8 f0       	brcs	.+54     	; 0x140e <vfprintf+0xba>
    13d8:	8b 32       	cpi	r24, 0x2B	; 43
    13da:	79 f0       	breq	.+30     	; 0x13fa <vfprintf+0xa6>
    13dc:	38 f4       	brcc	.+14     	; 0x13ec <vfprintf+0x98>
    13de:	80 32       	cpi	r24, 0x20	; 32
    13e0:	79 f0       	breq	.+30     	; 0x1400 <vfprintf+0xac>
    13e2:	83 32       	cpi	r24, 0x23	; 35
    13e4:	a1 f4       	brne	.+40     	; 0x140e <vfprintf+0xba>
    13e6:	23 2d       	mov	r18, r3
    13e8:	20 61       	ori	r18, 0x10	; 16
    13ea:	1d c0       	rjmp	.+58     	; 0x1426 <vfprintf+0xd2>
    13ec:	8d 32       	cpi	r24, 0x2D	; 45
    13ee:	61 f0       	breq	.+24     	; 0x1408 <vfprintf+0xb4>
    13f0:	80 33       	cpi	r24, 0x30	; 48
    13f2:	69 f4       	brne	.+26     	; 0x140e <vfprintf+0xba>
    13f4:	23 2d       	mov	r18, r3
    13f6:	21 60       	ori	r18, 0x01	; 1
    13f8:	16 c0       	rjmp	.+44     	; 0x1426 <vfprintf+0xd2>
    13fa:	83 2d       	mov	r24, r3
    13fc:	82 60       	ori	r24, 0x02	; 2
    13fe:	38 2e       	mov	r3, r24
    1400:	e3 2d       	mov	r30, r3
    1402:	e4 60       	ori	r30, 0x04	; 4
    1404:	3e 2e       	mov	r3, r30
    1406:	2a c0       	rjmp	.+84     	; 0x145c <vfprintf+0x108>
    1408:	f3 2d       	mov	r31, r3
    140a:	f8 60       	ori	r31, 0x08	; 8
    140c:	1d c0       	rjmp	.+58     	; 0x1448 <vfprintf+0xf4>
    140e:	37 fc       	sbrc	r3, 7
    1410:	2d c0       	rjmp	.+90     	; 0x146c <vfprintf+0x118>
    1412:	20 ed       	ldi	r18, 0xD0	; 208
    1414:	28 0f       	add	r18, r24
    1416:	2a 30       	cpi	r18, 0x0A	; 10
    1418:	40 f0       	brcs	.+16     	; 0x142a <vfprintf+0xd6>
    141a:	8e 32       	cpi	r24, 0x2E	; 46
    141c:	b9 f4       	brne	.+46     	; 0x144c <vfprintf+0xf8>
    141e:	36 fc       	sbrc	r3, 6
    1420:	81 c1       	rjmp	.+770    	; 0x1724 <vfprintf+0x3d0>
    1422:	23 2d       	mov	r18, r3
    1424:	20 64       	ori	r18, 0x40	; 64
    1426:	32 2e       	mov	r3, r18
    1428:	19 c0       	rjmp	.+50     	; 0x145c <vfprintf+0x108>
    142a:	36 fe       	sbrs	r3, 6
    142c:	06 c0       	rjmp	.+12     	; 0x143a <vfprintf+0xe6>
    142e:	8a e0       	ldi	r24, 0x0A	; 10
    1430:	98 9e       	mul	r9, r24
    1432:	20 0d       	add	r18, r0
    1434:	11 24       	eor	r1, r1
    1436:	92 2e       	mov	r9, r18
    1438:	11 c0       	rjmp	.+34     	; 0x145c <vfprintf+0x108>
    143a:	ea e0       	ldi	r30, 0x0A	; 10
    143c:	2e 9e       	mul	r2, r30
    143e:	20 0d       	add	r18, r0
    1440:	11 24       	eor	r1, r1
    1442:	22 2e       	mov	r2, r18
    1444:	f3 2d       	mov	r31, r3
    1446:	f0 62       	ori	r31, 0x20	; 32
    1448:	3f 2e       	mov	r3, r31
    144a:	08 c0       	rjmp	.+16     	; 0x145c <vfprintf+0x108>
    144c:	8c 36       	cpi	r24, 0x6C	; 108
    144e:	21 f4       	brne	.+8      	; 0x1458 <vfprintf+0x104>
    1450:	83 2d       	mov	r24, r3
    1452:	80 68       	ori	r24, 0x80	; 128
    1454:	38 2e       	mov	r3, r24
    1456:	02 c0       	rjmp	.+4      	; 0x145c <vfprintf+0x108>
    1458:	88 36       	cpi	r24, 0x68	; 104
    145a:	41 f4       	brne	.+16     	; 0x146c <vfprintf+0x118>
    145c:	f7 01       	movw	r30, r14
    145e:	93 fd       	sbrc	r25, 3
    1460:	85 91       	lpm	r24, Z+
    1462:	93 ff       	sbrs	r25, 3
    1464:	81 91       	ld	r24, Z+
    1466:	7f 01       	movw	r14, r30
    1468:	81 11       	cpse	r24, r1
    146a:	b3 cf       	rjmp	.-154    	; 0x13d2 <vfprintf+0x7e>
    146c:	98 2f       	mov	r25, r24
    146e:	9f 7d       	andi	r25, 0xDF	; 223
    1470:	95 54       	subi	r25, 0x45	; 69
    1472:	93 30       	cpi	r25, 0x03	; 3
    1474:	28 f4       	brcc	.+10     	; 0x1480 <vfprintf+0x12c>
    1476:	0c 5f       	subi	r16, 0xFC	; 252
    1478:	1f 4f       	sbci	r17, 0xFF	; 255
    147a:	9f e3       	ldi	r25, 0x3F	; 63
    147c:	99 83       	std	Y+1, r25	; 0x01
    147e:	0d c0       	rjmp	.+26     	; 0x149a <vfprintf+0x146>
    1480:	83 36       	cpi	r24, 0x63	; 99
    1482:	31 f0       	breq	.+12     	; 0x1490 <vfprintf+0x13c>
    1484:	83 37       	cpi	r24, 0x73	; 115
    1486:	71 f0       	breq	.+28     	; 0x14a4 <vfprintf+0x150>
    1488:	83 35       	cpi	r24, 0x53	; 83
    148a:	09 f0       	breq	.+2      	; 0x148e <vfprintf+0x13a>
    148c:	59 c0       	rjmp	.+178    	; 0x1540 <vfprintf+0x1ec>
    148e:	21 c0       	rjmp	.+66     	; 0x14d2 <vfprintf+0x17e>
    1490:	f8 01       	movw	r30, r16
    1492:	80 81       	ld	r24, Z
    1494:	89 83       	std	Y+1, r24	; 0x01
    1496:	0e 5f       	subi	r16, 0xFE	; 254
    1498:	1f 4f       	sbci	r17, 0xFF	; 255
    149a:	88 24       	eor	r8, r8
    149c:	83 94       	inc	r8
    149e:	91 2c       	mov	r9, r1
    14a0:	53 01       	movw	r10, r6
    14a2:	13 c0       	rjmp	.+38     	; 0x14ca <vfprintf+0x176>
    14a4:	28 01       	movw	r4, r16
    14a6:	f2 e0       	ldi	r31, 0x02	; 2
    14a8:	4f 0e       	add	r4, r31
    14aa:	51 1c       	adc	r5, r1
    14ac:	f8 01       	movw	r30, r16
    14ae:	a0 80       	ld	r10, Z
    14b0:	b1 80       	ldd	r11, Z+1	; 0x01
    14b2:	36 fe       	sbrs	r3, 6
    14b4:	03 c0       	rjmp	.+6      	; 0x14bc <vfprintf+0x168>
    14b6:	69 2d       	mov	r22, r9
    14b8:	70 e0       	ldi	r23, 0x00	; 0
    14ba:	02 c0       	rjmp	.+4      	; 0x14c0 <vfprintf+0x16c>
    14bc:	6f ef       	ldi	r22, 0xFF	; 255
    14be:	7f ef       	ldi	r23, 0xFF	; 255
    14c0:	c5 01       	movw	r24, r10
    14c2:	0e 94 fd 0c 	call	0x19fa	; 0x19fa <strnlen>
    14c6:	4c 01       	movw	r8, r24
    14c8:	82 01       	movw	r16, r4
    14ca:	f3 2d       	mov	r31, r3
    14cc:	ff 77       	andi	r31, 0x7F	; 127
    14ce:	3f 2e       	mov	r3, r31
    14d0:	16 c0       	rjmp	.+44     	; 0x14fe <vfprintf+0x1aa>
    14d2:	28 01       	movw	r4, r16
    14d4:	22 e0       	ldi	r18, 0x02	; 2
    14d6:	42 0e       	add	r4, r18
    14d8:	51 1c       	adc	r5, r1
    14da:	f8 01       	movw	r30, r16
    14dc:	a0 80       	ld	r10, Z
    14de:	b1 80       	ldd	r11, Z+1	; 0x01
    14e0:	36 fe       	sbrs	r3, 6
    14e2:	03 c0       	rjmp	.+6      	; 0x14ea <vfprintf+0x196>
    14e4:	69 2d       	mov	r22, r9
    14e6:	70 e0       	ldi	r23, 0x00	; 0
    14e8:	02 c0       	rjmp	.+4      	; 0x14ee <vfprintf+0x19a>
    14ea:	6f ef       	ldi	r22, 0xFF	; 255
    14ec:	7f ef       	ldi	r23, 0xFF	; 255
    14ee:	c5 01       	movw	r24, r10
    14f0:	0e 94 eb 0c 	call	0x19d6	; 0x19d6 <strnlen_P>
    14f4:	4c 01       	movw	r8, r24
    14f6:	f3 2d       	mov	r31, r3
    14f8:	f0 68       	ori	r31, 0x80	; 128
    14fa:	3f 2e       	mov	r3, r31
    14fc:	82 01       	movw	r16, r4
    14fe:	33 fc       	sbrc	r3, 3
    1500:	1b c0       	rjmp	.+54     	; 0x1538 <vfprintf+0x1e4>
    1502:	82 2d       	mov	r24, r2
    1504:	90 e0       	ldi	r25, 0x00	; 0
    1506:	88 16       	cp	r8, r24
    1508:	99 06       	cpc	r9, r25
    150a:	b0 f4       	brcc	.+44     	; 0x1538 <vfprintf+0x1e4>
    150c:	b6 01       	movw	r22, r12
    150e:	80 e2       	ldi	r24, 0x20	; 32
    1510:	90 e0       	ldi	r25, 0x00	; 0
    1512:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    1516:	2a 94       	dec	r2
    1518:	f4 cf       	rjmp	.-24     	; 0x1502 <vfprintf+0x1ae>
    151a:	f5 01       	movw	r30, r10
    151c:	37 fc       	sbrc	r3, 7
    151e:	85 91       	lpm	r24, Z+
    1520:	37 fe       	sbrs	r3, 7
    1522:	81 91       	ld	r24, Z+
    1524:	5f 01       	movw	r10, r30
    1526:	b6 01       	movw	r22, r12
    1528:	90 e0       	ldi	r25, 0x00	; 0
    152a:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    152e:	21 10       	cpse	r2, r1
    1530:	2a 94       	dec	r2
    1532:	21 e0       	ldi	r18, 0x01	; 1
    1534:	82 1a       	sub	r8, r18
    1536:	91 08       	sbc	r9, r1
    1538:	81 14       	cp	r8, r1
    153a:	91 04       	cpc	r9, r1
    153c:	71 f7       	brne	.-36     	; 0x151a <vfprintf+0x1c6>
    153e:	e8 c0       	rjmp	.+464    	; 0x1710 <vfprintf+0x3bc>
    1540:	84 36       	cpi	r24, 0x64	; 100
    1542:	11 f0       	breq	.+4      	; 0x1548 <vfprintf+0x1f4>
    1544:	89 36       	cpi	r24, 0x69	; 105
    1546:	41 f5       	brne	.+80     	; 0x1598 <vfprintf+0x244>
    1548:	f8 01       	movw	r30, r16
    154a:	37 fe       	sbrs	r3, 7
    154c:	07 c0       	rjmp	.+14     	; 0x155c <vfprintf+0x208>
    154e:	60 81       	ld	r22, Z
    1550:	71 81       	ldd	r23, Z+1	; 0x01
    1552:	82 81       	ldd	r24, Z+2	; 0x02
    1554:	93 81       	ldd	r25, Z+3	; 0x03
    1556:	0c 5f       	subi	r16, 0xFC	; 252
    1558:	1f 4f       	sbci	r17, 0xFF	; 255
    155a:	08 c0       	rjmp	.+16     	; 0x156c <vfprintf+0x218>
    155c:	60 81       	ld	r22, Z
    155e:	71 81       	ldd	r23, Z+1	; 0x01
    1560:	07 2e       	mov	r0, r23
    1562:	00 0c       	add	r0, r0
    1564:	88 0b       	sbc	r24, r24
    1566:	99 0b       	sbc	r25, r25
    1568:	0e 5f       	subi	r16, 0xFE	; 254
    156a:	1f 4f       	sbci	r17, 0xFF	; 255
    156c:	f3 2d       	mov	r31, r3
    156e:	ff 76       	andi	r31, 0x6F	; 111
    1570:	3f 2e       	mov	r3, r31
    1572:	97 ff       	sbrs	r25, 7
    1574:	09 c0       	rjmp	.+18     	; 0x1588 <vfprintf+0x234>
    1576:	90 95       	com	r25
    1578:	80 95       	com	r24
    157a:	70 95       	com	r23
    157c:	61 95       	neg	r22
    157e:	7f 4f       	sbci	r23, 0xFF	; 255
    1580:	8f 4f       	sbci	r24, 0xFF	; 255
    1582:	9f 4f       	sbci	r25, 0xFF	; 255
    1584:	f0 68       	ori	r31, 0x80	; 128
    1586:	3f 2e       	mov	r3, r31
    1588:	2a e0       	ldi	r18, 0x0A	; 10
    158a:	30 e0       	ldi	r19, 0x00	; 0
    158c:	a3 01       	movw	r20, r6
    158e:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <__ultoa_invert>
    1592:	88 2e       	mov	r8, r24
    1594:	86 18       	sub	r8, r6
    1596:	45 c0       	rjmp	.+138    	; 0x1622 <vfprintf+0x2ce>
    1598:	85 37       	cpi	r24, 0x75	; 117
    159a:	31 f4       	brne	.+12     	; 0x15a8 <vfprintf+0x254>
    159c:	23 2d       	mov	r18, r3
    159e:	2f 7e       	andi	r18, 0xEF	; 239
    15a0:	b2 2e       	mov	r11, r18
    15a2:	2a e0       	ldi	r18, 0x0A	; 10
    15a4:	30 e0       	ldi	r19, 0x00	; 0
    15a6:	25 c0       	rjmp	.+74     	; 0x15f2 <vfprintf+0x29e>
    15a8:	93 2d       	mov	r25, r3
    15aa:	99 7f       	andi	r25, 0xF9	; 249
    15ac:	b9 2e       	mov	r11, r25
    15ae:	8f 36       	cpi	r24, 0x6F	; 111
    15b0:	c1 f0       	breq	.+48     	; 0x15e2 <vfprintf+0x28e>
    15b2:	18 f4       	brcc	.+6      	; 0x15ba <vfprintf+0x266>
    15b4:	88 35       	cpi	r24, 0x58	; 88
    15b6:	79 f0       	breq	.+30     	; 0x15d6 <vfprintf+0x282>
    15b8:	b5 c0       	rjmp	.+362    	; 0x1724 <vfprintf+0x3d0>
    15ba:	80 37       	cpi	r24, 0x70	; 112
    15bc:	19 f0       	breq	.+6      	; 0x15c4 <vfprintf+0x270>
    15be:	88 37       	cpi	r24, 0x78	; 120
    15c0:	21 f0       	breq	.+8      	; 0x15ca <vfprintf+0x276>
    15c2:	b0 c0       	rjmp	.+352    	; 0x1724 <vfprintf+0x3d0>
    15c4:	e9 2f       	mov	r30, r25
    15c6:	e0 61       	ori	r30, 0x10	; 16
    15c8:	be 2e       	mov	r11, r30
    15ca:	b4 fe       	sbrs	r11, 4
    15cc:	0d c0       	rjmp	.+26     	; 0x15e8 <vfprintf+0x294>
    15ce:	fb 2d       	mov	r31, r11
    15d0:	f4 60       	ori	r31, 0x04	; 4
    15d2:	bf 2e       	mov	r11, r31
    15d4:	09 c0       	rjmp	.+18     	; 0x15e8 <vfprintf+0x294>
    15d6:	34 fe       	sbrs	r3, 4
    15d8:	0a c0       	rjmp	.+20     	; 0x15ee <vfprintf+0x29a>
    15da:	29 2f       	mov	r18, r25
    15dc:	26 60       	ori	r18, 0x06	; 6
    15de:	b2 2e       	mov	r11, r18
    15e0:	06 c0       	rjmp	.+12     	; 0x15ee <vfprintf+0x29a>
    15e2:	28 e0       	ldi	r18, 0x08	; 8
    15e4:	30 e0       	ldi	r19, 0x00	; 0
    15e6:	05 c0       	rjmp	.+10     	; 0x15f2 <vfprintf+0x29e>
    15e8:	20 e1       	ldi	r18, 0x10	; 16
    15ea:	30 e0       	ldi	r19, 0x00	; 0
    15ec:	02 c0       	rjmp	.+4      	; 0x15f2 <vfprintf+0x29e>
    15ee:	20 e1       	ldi	r18, 0x10	; 16
    15f0:	32 e0       	ldi	r19, 0x02	; 2
    15f2:	f8 01       	movw	r30, r16
    15f4:	b7 fe       	sbrs	r11, 7
    15f6:	07 c0       	rjmp	.+14     	; 0x1606 <vfprintf+0x2b2>
    15f8:	60 81       	ld	r22, Z
    15fa:	71 81       	ldd	r23, Z+1	; 0x01
    15fc:	82 81       	ldd	r24, Z+2	; 0x02
    15fe:	93 81       	ldd	r25, Z+3	; 0x03
    1600:	0c 5f       	subi	r16, 0xFC	; 252
    1602:	1f 4f       	sbci	r17, 0xFF	; 255
    1604:	06 c0       	rjmp	.+12     	; 0x1612 <vfprintf+0x2be>
    1606:	60 81       	ld	r22, Z
    1608:	71 81       	ldd	r23, Z+1	; 0x01
    160a:	80 e0       	ldi	r24, 0x00	; 0
    160c:	90 e0       	ldi	r25, 0x00	; 0
    160e:	0e 5f       	subi	r16, 0xFE	; 254
    1610:	1f 4f       	sbci	r17, 0xFF	; 255
    1612:	a3 01       	movw	r20, r6
    1614:	0e 94 44 0d 	call	0x1a88	; 0x1a88 <__ultoa_invert>
    1618:	88 2e       	mov	r8, r24
    161a:	86 18       	sub	r8, r6
    161c:	fb 2d       	mov	r31, r11
    161e:	ff 77       	andi	r31, 0x7F	; 127
    1620:	3f 2e       	mov	r3, r31
    1622:	36 fe       	sbrs	r3, 6
    1624:	0d c0       	rjmp	.+26     	; 0x1640 <vfprintf+0x2ec>
    1626:	23 2d       	mov	r18, r3
    1628:	2e 7f       	andi	r18, 0xFE	; 254
    162a:	a2 2e       	mov	r10, r18
    162c:	89 14       	cp	r8, r9
    162e:	58 f4       	brcc	.+22     	; 0x1646 <vfprintf+0x2f2>
    1630:	34 fe       	sbrs	r3, 4
    1632:	0b c0       	rjmp	.+22     	; 0x164a <vfprintf+0x2f6>
    1634:	32 fc       	sbrc	r3, 2
    1636:	09 c0       	rjmp	.+18     	; 0x164a <vfprintf+0x2f6>
    1638:	83 2d       	mov	r24, r3
    163a:	8e 7e       	andi	r24, 0xEE	; 238
    163c:	a8 2e       	mov	r10, r24
    163e:	05 c0       	rjmp	.+10     	; 0x164a <vfprintf+0x2f6>
    1640:	b8 2c       	mov	r11, r8
    1642:	a3 2c       	mov	r10, r3
    1644:	03 c0       	rjmp	.+6      	; 0x164c <vfprintf+0x2f8>
    1646:	b8 2c       	mov	r11, r8
    1648:	01 c0       	rjmp	.+2      	; 0x164c <vfprintf+0x2f8>
    164a:	b9 2c       	mov	r11, r9
    164c:	a4 fe       	sbrs	r10, 4
    164e:	0f c0       	rjmp	.+30     	; 0x166e <vfprintf+0x31a>
    1650:	fe 01       	movw	r30, r28
    1652:	e8 0d       	add	r30, r8
    1654:	f1 1d       	adc	r31, r1
    1656:	80 81       	ld	r24, Z
    1658:	80 33       	cpi	r24, 0x30	; 48
    165a:	21 f4       	brne	.+8      	; 0x1664 <vfprintf+0x310>
    165c:	9a 2d       	mov	r25, r10
    165e:	99 7e       	andi	r25, 0xE9	; 233
    1660:	a9 2e       	mov	r10, r25
    1662:	09 c0       	rjmp	.+18     	; 0x1676 <vfprintf+0x322>
    1664:	a2 fe       	sbrs	r10, 2
    1666:	06 c0       	rjmp	.+12     	; 0x1674 <vfprintf+0x320>
    1668:	b3 94       	inc	r11
    166a:	b3 94       	inc	r11
    166c:	04 c0       	rjmp	.+8      	; 0x1676 <vfprintf+0x322>
    166e:	8a 2d       	mov	r24, r10
    1670:	86 78       	andi	r24, 0x86	; 134
    1672:	09 f0       	breq	.+2      	; 0x1676 <vfprintf+0x322>
    1674:	b3 94       	inc	r11
    1676:	a3 fc       	sbrc	r10, 3
    1678:	11 c0       	rjmp	.+34     	; 0x169c <vfprintf+0x348>
    167a:	a0 fe       	sbrs	r10, 0
    167c:	06 c0       	rjmp	.+12     	; 0x168a <vfprintf+0x336>
    167e:	b2 14       	cp	r11, r2
    1680:	88 f4       	brcc	.+34     	; 0x16a4 <vfprintf+0x350>
    1682:	28 0c       	add	r2, r8
    1684:	92 2c       	mov	r9, r2
    1686:	9b 18       	sub	r9, r11
    1688:	0e c0       	rjmp	.+28     	; 0x16a6 <vfprintf+0x352>
    168a:	b2 14       	cp	r11, r2
    168c:	60 f4       	brcc	.+24     	; 0x16a6 <vfprintf+0x352>
    168e:	b6 01       	movw	r22, r12
    1690:	80 e2       	ldi	r24, 0x20	; 32
    1692:	90 e0       	ldi	r25, 0x00	; 0
    1694:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    1698:	b3 94       	inc	r11
    169a:	f7 cf       	rjmp	.-18     	; 0x168a <vfprintf+0x336>
    169c:	b2 14       	cp	r11, r2
    169e:	18 f4       	brcc	.+6      	; 0x16a6 <vfprintf+0x352>
    16a0:	2b 18       	sub	r2, r11
    16a2:	02 c0       	rjmp	.+4      	; 0x16a8 <vfprintf+0x354>
    16a4:	98 2c       	mov	r9, r8
    16a6:	21 2c       	mov	r2, r1
    16a8:	a4 fe       	sbrs	r10, 4
    16aa:	10 c0       	rjmp	.+32     	; 0x16cc <vfprintf+0x378>
    16ac:	b6 01       	movw	r22, r12
    16ae:	80 e3       	ldi	r24, 0x30	; 48
    16b0:	90 e0       	ldi	r25, 0x00	; 0
    16b2:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    16b6:	a2 fe       	sbrs	r10, 2
    16b8:	17 c0       	rjmp	.+46     	; 0x16e8 <vfprintf+0x394>
    16ba:	a1 fc       	sbrc	r10, 1
    16bc:	03 c0       	rjmp	.+6      	; 0x16c4 <vfprintf+0x370>
    16be:	88 e7       	ldi	r24, 0x78	; 120
    16c0:	90 e0       	ldi	r25, 0x00	; 0
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <vfprintf+0x374>
    16c4:	88 e5       	ldi	r24, 0x58	; 88
    16c6:	90 e0       	ldi	r25, 0x00	; 0
    16c8:	b6 01       	movw	r22, r12
    16ca:	0c c0       	rjmp	.+24     	; 0x16e4 <vfprintf+0x390>
    16cc:	8a 2d       	mov	r24, r10
    16ce:	86 78       	andi	r24, 0x86	; 134
    16d0:	59 f0       	breq	.+22     	; 0x16e8 <vfprintf+0x394>
    16d2:	a1 fe       	sbrs	r10, 1
    16d4:	02 c0       	rjmp	.+4      	; 0x16da <vfprintf+0x386>
    16d6:	8b e2       	ldi	r24, 0x2B	; 43
    16d8:	01 c0       	rjmp	.+2      	; 0x16dc <vfprintf+0x388>
    16da:	80 e2       	ldi	r24, 0x20	; 32
    16dc:	a7 fc       	sbrc	r10, 7
    16de:	8d e2       	ldi	r24, 0x2D	; 45
    16e0:	b6 01       	movw	r22, r12
    16e2:	90 e0       	ldi	r25, 0x00	; 0
    16e4:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    16e8:	89 14       	cp	r8, r9
    16ea:	38 f4       	brcc	.+14     	; 0x16fa <vfprintf+0x3a6>
    16ec:	b6 01       	movw	r22, r12
    16ee:	80 e3       	ldi	r24, 0x30	; 48
    16f0:	90 e0       	ldi	r25, 0x00	; 0
    16f2:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    16f6:	9a 94       	dec	r9
    16f8:	f7 cf       	rjmp	.-18     	; 0x16e8 <vfprintf+0x394>
    16fa:	8a 94       	dec	r8
    16fc:	f3 01       	movw	r30, r6
    16fe:	e8 0d       	add	r30, r8
    1700:	f1 1d       	adc	r31, r1
    1702:	80 81       	ld	r24, Z
    1704:	b6 01       	movw	r22, r12
    1706:	90 e0       	ldi	r25, 0x00	; 0
    1708:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    170c:	81 10       	cpse	r8, r1
    170e:	f5 cf       	rjmp	.-22     	; 0x16fa <vfprintf+0x3a6>
    1710:	22 20       	and	r2, r2
    1712:	09 f4       	brne	.+2      	; 0x1716 <vfprintf+0x3c2>
    1714:	42 ce       	rjmp	.-892    	; 0x139a <vfprintf+0x46>
    1716:	b6 01       	movw	r22, r12
    1718:	80 e2       	ldi	r24, 0x20	; 32
    171a:	90 e0       	ldi	r25, 0x00	; 0
    171c:	0e 94 08 0d 	call	0x1a10	; 0x1a10 <fputc>
    1720:	2a 94       	dec	r2
    1722:	f6 cf       	rjmp	.-20     	; 0x1710 <vfprintf+0x3bc>
    1724:	f6 01       	movw	r30, r12
    1726:	86 81       	ldd	r24, Z+6	; 0x06
    1728:	97 81       	ldd	r25, Z+7	; 0x07
    172a:	02 c0       	rjmp	.+4      	; 0x1730 <vfprintf+0x3dc>
    172c:	8f ef       	ldi	r24, 0xFF	; 255
    172e:	9f ef       	ldi	r25, 0xFF	; 255
    1730:	2b 96       	adiw	r28, 0x0b	; 11
    1732:	cd bf       	out	0x3d, r28	; 61
    1734:	de bf       	out	0x3e, r29	; 62
    1736:	df 91       	pop	r29
    1738:	cf 91       	pop	r28
    173a:	1f 91       	pop	r17
    173c:	0f 91       	pop	r16
    173e:	ff 90       	pop	r15
    1740:	ef 90       	pop	r14
    1742:	df 90       	pop	r13
    1744:	cf 90       	pop	r12
    1746:	bf 90       	pop	r11
    1748:	af 90       	pop	r10
    174a:	9f 90       	pop	r9
    174c:	8f 90       	pop	r8
    174e:	7f 90       	pop	r7
    1750:	6f 90       	pop	r6
    1752:	5f 90       	pop	r5
    1754:	4f 90       	pop	r4
    1756:	3f 90       	pop	r3
    1758:	2f 90       	pop	r2
    175a:	08 95       	ret

0000175c <calloc>:
    175c:	0f 93       	push	r16
    175e:	1f 93       	push	r17
    1760:	cf 93       	push	r28
    1762:	df 93       	push	r29
    1764:	86 9f       	mul	r24, r22
    1766:	80 01       	movw	r16, r0
    1768:	87 9f       	mul	r24, r23
    176a:	10 0d       	add	r17, r0
    176c:	96 9f       	mul	r25, r22
    176e:	10 0d       	add	r17, r0
    1770:	11 24       	eor	r1, r1
    1772:	c8 01       	movw	r24, r16
    1774:	0e 94 ca 0b 	call	0x1794	; 0x1794 <malloc>
    1778:	ec 01       	movw	r28, r24
    177a:	00 97       	sbiw	r24, 0x00	; 0
    177c:	29 f0       	breq	.+10     	; 0x1788 <calloc+0x2c>
    177e:	a8 01       	movw	r20, r16
    1780:	60 e0       	ldi	r22, 0x00	; 0
    1782:	70 e0       	ldi	r23, 0x00	; 0
    1784:	0e 94 f6 0c 	call	0x19ec	; 0x19ec <memset>
    1788:	ce 01       	movw	r24, r28
    178a:	df 91       	pop	r29
    178c:	cf 91       	pop	r28
    178e:	1f 91       	pop	r17
    1790:	0f 91       	pop	r16
    1792:	08 95       	ret

00001794 <malloc>:
    1794:	0f 93       	push	r16
    1796:	1f 93       	push	r17
    1798:	cf 93       	push	r28
    179a:	df 93       	push	r29
    179c:	82 30       	cpi	r24, 0x02	; 2
    179e:	91 05       	cpc	r25, r1
    17a0:	10 f4       	brcc	.+4      	; 0x17a6 <malloc+0x12>
    17a2:	82 e0       	ldi	r24, 0x02	; 2
    17a4:	90 e0       	ldi	r25, 0x00	; 0
    17a6:	e0 91 f0 20 	lds	r30, 0x20F0	; 0x8020f0 <__flp>
    17aa:	f0 91 f1 20 	lds	r31, 0x20F1	; 0x8020f1 <__flp+0x1>
    17ae:	20 e0       	ldi	r18, 0x00	; 0
    17b0:	30 e0       	ldi	r19, 0x00	; 0
    17b2:	a0 e0       	ldi	r26, 0x00	; 0
    17b4:	b0 e0       	ldi	r27, 0x00	; 0
    17b6:	30 97       	sbiw	r30, 0x00	; 0
    17b8:	19 f1       	breq	.+70     	; 0x1800 <malloc+0x6c>
    17ba:	40 81       	ld	r20, Z
    17bc:	51 81       	ldd	r21, Z+1	; 0x01
    17be:	02 81       	ldd	r16, Z+2	; 0x02
    17c0:	13 81       	ldd	r17, Z+3	; 0x03
    17c2:	48 17       	cp	r20, r24
    17c4:	59 07       	cpc	r21, r25
    17c6:	c8 f0       	brcs	.+50     	; 0x17fa <malloc+0x66>
    17c8:	84 17       	cp	r24, r20
    17ca:	95 07       	cpc	r25, r21
    17cc:	69 f4       	brne	.+26     	; 0x17e8 <malloc+0x54>
    17ce:	10 97       	sbiw	r26, 0x00	; 0
    17d0:	31 f0       	breq	.+12     	; 0x17de <malloc+0x4a>
    17d2:	12 96       	adiw	r26, 0x02	; 2
    17d4:	0c 93       	st	X, r16
    17d6:	12 97       	sbiw	r26, 0x02	; 2
    17d8:	13 96       	adiw	r26, 0x03	; 3
    17da:	1c 93       	st	X, r17
    17dc:	27 c0       	rjmp	.+78     	; 0x182c <malloc+0x98>
    17de:	00 93 f0 20 	sts	0x20F0, r16	; 0x8020f0 <__flp>
    17e2:	10 93 f1 20 	sts	0x20F1, r17	; 0x8020f1 <__flp+0x1>
    17e6:	22 c0       	rjmp	.+68     	; 0x182c <malloc+0x98>
    17e8:	21 15       	cp	r18, r1
    17ea:	31 05       	cpc	r19, r1
    17ec:	19 f0       	breq	.+6      	; 0x17f4 <malloc+0x60>
    17ee:	42 17       	cp	r20, r18
    17f0:	53 07       	cpc	r21, r19
    17f2:	18 f4       	brcc	.+6      	; 0x17fa <malloc+0x66>
    17f4:	9a 01       	movw	r18, r20
    17f6:	bd 01       	movw	r22, r26
    17f8:	ef 01       	movw	r28, r30
    17fa:	df 01       	movw	r26, r30
    17fc:	f8 01       	movw	r30, r16
    17fe:	db cf       	rjmp	.-74     	; 0x17b6 <malloc+0x22>
    1800:	21 15       	cp	r18, r1
    1802:	31 05       	cpc	r19, r1
    1804:	f9 f0       	breq	.+62     	; 0x1844 <malloc+0xb0>
    1806:	28 1b       	sub	r18, r24
    1808:	39 0b       	sbc	r19, r25
    180a:	24 30       	cpi	r18, 0x04	; 4
    180c:	31 05       	cpc	r19, r1
    180e:	80 f4       	brcc	.+32     	; 0x1830 <malloc+0x9c>
    1810:	8a 81       	ldd	r24, Y+2	; 0x02
    1812:	9b 81       	ldd	r25, Y+3	; 0x03
    1814:	61 15       	cp	r22, r1
    1816:	71 05       	cpc	r23, r1
    1818:	21 f0       	breq	.+8      	; 0x1822 <malloc+0x8e>
    181a:	fb 01       	movw	r30, r22
    181c:	82 83       	std	Z+2, r24	; 0x02
    181e:	93 83       	std	Z+3, r25	; 0x03
    1820:	04 c0       	rjmp	.+8      	; 0x182a <malloc+0x96>
    1822:	80 93 f0 20 	sts	0x20F0, r24	; 0x8020f0 <__flp>
    1826:	90 93 f1 20 	sts	0x20F1, r25	; 0x8020f1 <__flp+0x1>
    182a:	fe 01       	movw	r30, r28
    182c:	32 96       	adiw	r30, 0x02	; 2
    182e:	44 c0       	rjmp	.+136    	; 0x18b8 <malloc+0x124>
    1830:	fe 01       	movw	r30, r28
    1832:	e2 0f       	add	r30, r18
    1834:	f3 1f       	adc	r31, r19
    1836:	81 93       	st	Z+, r24
    1838:	91 93       	st	Z+, r25
    183a:	22 50       	subi	r18, 0x02	; 2
    183c:	31 09       	sbc	r19, r1
    183e:	28 83       	st	Y, r18
    1840:	39 83       	std	Y+1, r19	; 0x01
    1842:	3a c0       	rjmp	.+116    	; 0x18b8 <malloc+0x124>
    1844:	20 91 ee 20 	lds	r18, 0x20EE	; 0x8020ee <__brkval>
    1848:	30 91 ef 20 	lds	r19, 0x20EF	; 0x8020ef <__brkval+0x1>
    184c:	23 2b       	or	r18, r19
    184e:	41 f4       	brne	.+16     	; 0x1860 <malloc+0xcc>
    1850:	20 91 02 20 	lds	r18, 0x2002	; 0x802002 <__malloc_heap_start>
    1854:	30 91 03 20 	lds	r19, 0x2003	; 0x802003 <__malloc_heap_start+0x1>
    1858:	20 93 ee 20 	sts	0x20EE, r18	; 0x8020ee <__brkval>
    185c:	30 93 ef 20 	sts	0x20EF, r19	; 0x8020ef <__brkval+0x1>
    1860:	20 91 00 20 	lds	r18, 0x2000	; 0x802000 <__DATA_REGION_ORIGIN__>
    1864:	30 91 01 20 	lds	r19, 0x2001	; 0x802001 <__DATA_REGION_ORIGIN__+0x1>
    1868:	21 15       	cp	r18, r1
    186a:	31 05       	cpc	r19, r1
    186c:	41 f4       	brne	.+16     	; 0x187e <malloc+0xea>
    186e:	2d b7       	in	r18, 0x3d	; 61
    1870:	3e b7       	in	r19, 0x3e	; 62
    1872:	40 91 04 20 	lds	r20, 0x2004	; 0x802004 <__malloc_margin>
    1876:	50 91 05 20 	lds	r21, 0x2005	; 0x802005 <__malloc_margin+0x1>
    187a:	24 1b       	sub	r18, r20
    187c:	35 0b       	sbc	r19, r21
    187e:	e0 91 ee 20 	lds	r30, 0x20EE	; 0x8020ee <__brkval>
    1882:	f0 91 ef 20 	lds	r31, 0x20EF	; 0x8020ef <__brkval+0x1>
    1886:	e2 17       	cp	r30, r18
    1888:	f3 07       	cpc	r31, r19
    188a:	a0 f4       	brcc	.+40     	; 0x18b4 <malloc+0x120>
    188c:	2e 1b       	sub	r18, r30
    188e:	3f 0b       	sbc	r19, r31
    1890:	28 17       	cp	r18, r24
    1892:	39 07       	cpc	r19, r25
    1894:	78 f0       	brcs	.+30     	; 0x18b4 <malloc+0x120>
    1896:	ac 01       	movw	r20, r24
    1898:	4e 5f       	subi	r20, 0xFE	; 254
    189a:	5f 4f       	sbci	r21, 0xFF	; 255
    189c:	24 17       	cp	r18, r20
    189e:	35 07       	cpc	r19, r21
    18a0:	48 f0       	brcs	.+18     	; 0x18b4 <malloc+0x120>
    18a2:	4e 0f       	add	r20, r30
    18a4:	5f 1f       	adc	r21, r31
    18a6:	40 93 ee 20 	sts	0x20EE, r20	; 0x8020ee <__brkval>
    18aa:	50 93 ef 20 	sts	0x20EF, r21	; 0x8020ef <__brkval+0x1>
    18ae:	81 93       	st	Z+, r24
    18b0:	91 93       	st	Z+, r25
    18b2:	02 c0       	rjmp	.+4      	; 0x18b8 <malloc+0x124>
    18b4:	e0 e0       	ldi	r30, 0x00	; 0
    18b6:	f0 e0       	ldi	r31, 0x00	; 0
    18b8:	cf 01       	movw	r24, r30
    18ba:	df 91       	pop	r29
    18bc:	cf 91       	pop	r28
    18be:	1f 91       	pop	r17
    18c0:	0f 91       	pop	r16
    18c2:	08 95       	ret

000018c4 <free>:
    18c4:	cf 93       	push	r28
    18c6:	df 93       	push	r29
    18c8:	00 97       	sbiw	r24, 0x00	; 0
    18ca:	09 f4       	brne	.+2      	; 0x18ce <free+0xa>
    18cc:	81 c0       	rjmp	.+258    	; 0x19d0 <free+0x10c>
    18ce:	fc 01       	movw	r30, r24
    18d0:	32 97       	sbiw	r30, 0x02	; 2
    18d2:	12 82       	std	Z+2, r1	; 0x02
    18d4:	13 82       	std	Z+3, r1	; 0x03
    18d6:	a0 91 f0 20 	lds	r26, 0x20F0	; 0x8020f0 <__flp>
    18da:	b0 91 f1 20 	lds	r27, 0x20F1	; 0x8020f1 <__flp+0x1>
    18de:	10 97       	sbiw	r26, 0x00	; 0
    18e0:	81 f4       	brne	.+32     	; 0x1902 <free+0x3e>
    18e2:	20 81       	ld	r18, Z
    18e4:	31 81       	ldd	r19, Z+1	; 0x01
    18e6:	82 0f       	add	r24, r18
    18e8:	93 1f       	adc	r25, r19
    18ea:	20 91 ee 20 	lds	r18, 0x20EE	; 0x8020ee <__brkval>
    18ee:	30 91 ef 20 	lds	r19, 0x20EF	; 0x8020ef <__brkval+0x1>
    18f2:	28 17       	cp	r18, r24
    18f4:	39 07       	cpc	r19, r25
    18f6:	51 f5       	brne	.+84     	; 0x194c <free+0x88>
    18f8:	e0 93 ee 20 	sts	0x20EE, r30	; 0x8020ee <__brkval>
    18fc:	f0 93 ef 20 	sts	0x20EF, r31	; 0x8020ef <__brkval+0x1>
    1900:	67 c0       	rjmp	.+206    	; 0x19d0 <free+0x10c>
    1902:	ed 01       	movw	r28, r26
    1904:	20 e0       	ldi	r18, 0x00	; 0
    1906:	30 e0       	ldi	r19, 0x00	; 0
    1908:	ce 17       	cp	r28, r30
    190a:	df 07       	cpc	r29, r31
    190c:	40 f4       	brcc	.+16     	; 0x191e <free+0x5a>
    190e:	4a 81       	ldd	r20, Y+2	; 0x02
    1910:	5b 81       	ldd	r21, Y+3	; 0x03
    1912:	9e 01       	movw	r18, r28
    1914:	41 15       	cp	r20, r1
    1916:	51 05       	cpc	r21, r1
    1918:	f1 f0       	breq	.+60     	; 0x1956 <free+0x92>
    191a:	ea 01       	movw	r28, r20
    191c:	f5 cf       	rjmp	.-22     	; 0x1908 <free+0x44>
    191e:	c2 83       	std	Z+2, r28	; 0x02
    1920:	d3 83       	std	Z+3, r29	; 0x03
    1922:	40 81       	ld	r20, Z
    1924:	51 81       	ldd	r21, Z+1	; 0x01
    1926:	84 0f       	add	r24, r20
    1928:	95 1f       	adc	r25, r21
    192a:	c8 17       	cp	r28, r24
    192c:	d9 07       	cpc	r29, r25
    192e:	59 f4       	brne	.+22     	; 0x1946 <free+0x82>
    1930:	88 81       	ld	r24, Y
    1932:	99 81       	ldd	r25, Y+1	; 0x01
    1934:	84 0f       	add	r24, r20
    1936:	95 1f       	adc	r25, r21
    1938:	02 96       	adiw	r24, 0x02	; 2
    193a:	80 83       	st	Z, r24
    193c:	91 83       	std	Z+1, r25	; 0x01
    193e:	8a 81       	ldd	r24, Y+2	; 0x02
    1940:	9b 81       	ldd	r25, Y+3	; 0x03
    1942:	82 83       	std	Z+2, r24	; 0x02
    1944:	93 83       	std	Z+3, r25	; 0x03
    1946:	21 15       	cp	r18, r1
    1948:	31 05       	cpc	r19, r1
    194a:	29 f4       	brne	.+10     	; 0x1956 <free+0x92>
    194c:	e0 93 f0 20 	sts	0x20F0, r30	; 0x8020f0 <__flp>
    1950:	f0 93 f1 20 	sts	0x20F1, r31	; 0x8020f1 <__flp+0x1>
    1954:	3d c0       	rjmp	.+122    	; 0x19d0 <free+0x10c>
    1956:	e9 01       	movw	r28, r18
    1958:	ea 83       	std	Y+2, r30	; 0x02
    195a:	fb 83       	std	Y+3, r31	; 0x03
    195c:	49 91       	ld	r20, Y+
    195e:	59 91       	ld	r21, Y+
    1960:	c4 0f       	add	r28, r20
    1962:	d5 1f       	adc	r29, r21
    1964:	ec 17       	cp	r30, r28
    1966:	fd 07       	cpc	r31, r29
    1968:	61 f4       	brne	.+24     	; 0x1982 <free+0xbe>
    196a:	80 81       	ld	r24, Z
    196c:	91 81       	ldd	r25, Z+1	; 0x01
    196e:	84 0f       	add	r24, r20
    1970:	95 1f       	adc	r25, r21
    1972:	02 96       	adiw	r24, 0x02	; 2
    1974:	e9 01       	movw	r28, r18
    1976:	88 83       	st	Y, r24
    1978:	99 83       	std	Y+1, r25	; 0x01
    197a:	82 81       	ldd	r24, Z+2	; 0x02
    197c:	93 81       	ldd	r25, Z+3	; 0x03
    197e:	8a 83       	std	Y+2, r24	; 0x02
    1980:	9b 83       	std	Y+3, r25	; 0x03
    1982:	e0 e0       	ldi	r30, 0x00	; 0
    1984:	f0 e0       	ldi	r31, 0x00	; 0
    1986:	12 96       	adiw	r26, 0x02	; 2
    1988:	8d 91       	ld	r24, X+
    198a:	9c 91       	ld	r25, X
    198c:	13 97       	sbiw	r26, 0x03	; 3
    198e:	00 97       	sbiw	r24, 0x00	; 0
    1990:	19 f0       	breq	.+6      	; 0x1998 <free+0xd4>
    1992:	fd 01       	movw	r30, r26
    1994:	dc 01       	movw	r26, r24
    1996:	f7 cf       	rjmp	.-18     	; 0x1986 <free+0xc2>
    1998:	8d 91       	ld	r24, X+
    199a:	9c 91       	ld	r25, X
    199c:	11 97       	sbiw	r26, 0x01	; 1
    199e:	9d 01       	movw	r18, r26
    19a0:	2e 5f       	subi	r18, 0xFE	; 254
    19a2:	3f 4f       	sbci	r19, 0xFF	; 255
    19a4:	82 0f       	add	r24, r18
    19a6:	93 1f       	adc	r25, r19
    19a8:	20 91 ee 20 	lds	r18, 0x20EE	; 0x8020ee <__brkval>
    19ac:	30 91 ef 20 	lds	r19, 0x20EF	; 0x8020ef <__brkval+0x1>
    19b0:	28 17       	cp	r18, r24
    19b2:	39 07       	cpc	r19, r25
    19b4:	69 f4       	brne	.+26     	; 0x19d0 <free+0x10c>
    19b6:	30 97       	sbiw	r30, 0x00	; 0
    19b8:	29 f4       	brne	.+10     	; 0x19c4 <free+0x100>
    19ba:	10 92 f0 20 	sts	0x20F0, r1	; 0x8020f0 <__flp>
    19be:	10 92 f1 20 	sts	0x20F1, r1	; 0x8020f1 <__flp+0x1>
    19c2:	02 c0       	rjmp	.+4      	; 0x19c8 <free+0x104>
    19c4:	12 82       	std	Z+2, r1	; 0x02
    19c6:	13 82       	std	Z+3, r1	; 0x03
    19c8:	a0 93 ee 20 	sts	0x20EE, r26	; 0x8020ee <__brkval>
    19cc:	b0 93 ef 20 	sts	0x20EF, r27	; 0x8020ef <__brkval+0x1>
    19d0:	df 91       	pop	r29
    19d2:	cf 91       	pop	r28
    19d4:	08 95       	ret

000019d6 <strnlen_P>:
    19d6:	fc 01       	movw	r30, r24
    19d8:	05 90       	lpm	r0, Z+
    19da:	61 50       	subi	r22, 0x01	; 1
    19dc:	70 40       	sbci	r23, 0x00	; 0
    19de:	01 10       	cpse	r0, r1
    19e0:	d8 f7       	brcc	.-10     	; 0x19d8 <strnlen_P+0x2>
    19e2:	80 95       	com	r24
    19e4:	90 95       	com	r25
    19e6:	8e 0f       	add	r24, r30
    19e8:	9f 1f       	adc	r25, r31
    19ea:	08 95       	ret

000019ec <memset>:
    19ec:	dc 01       	movw	r26, r24
    19ee:	01 c0       	rjmp	.+2      	; 0x19f2 <memset+0x6>
    19f0:	6d 93       	st	X+, r22
    19f2:	41 50       	subi	r20, 0x01	; 1
    19f4:	50 40       	sbci	r21, 0x00	; 0
    19f6:	e0 f7       	brcc	.-8      	; 0x19f0 <memset+0x4>
    19f8:	08 95       	ret

000019fa <strnlen>:
    19fa:	fc 01       	movw	r30, r24
    19fc:	61 50       	subi	r22, 0x01	; 1
    19fe:	70 40       	sbci	r23, 0x00	; 0
    1a00:	01 90       	ld	r0, Z+
    1a02:	01 10       	cpse	r0, r1
    1a04:	d8 f7       	brcc	.-10     	; 0x19fc <strnlen+0x2>
    1a06:	80 95       	com	r24
    1a08:	90 95       	com	r25
    1a0a:	8e 0f       	add	r24, r30
    1a0c:	9f 1f       	adc	r25, r31
    1a0e:	08 95       	ret

00001a10 <fputc>:
    1a10:	0f 93       	push	r16
    1a12:	1f 93       	push	r17
    1a14:	cf 93       	push	r28
    1a16:	df 93       	push	r29
    1a18:	fb 01       	movw	r30, r22
    1a1a:	23 81       	ldd	r18, Z+3	; 0x03
    1a1c:	21 fd       	sbrc	r18, 1
    1a1e:	03 c0       	rjmp	.+6      	; 0x1a26 <fputc+0x16>
    1a20:	8f ef       	ldi	r24, 0xFF	; 255
    1a22:	9f ef       	ldi	r25, 0xFF	; 255
    1a24:	2c c0       	rjmp	.+88     	; 0x1a7e <fputc+0x6e>
    1a26:	22 ff       	sbrs	r18, 2
    1a28:	16 c0       	rjmp	.+44     	; 0x1a56 <fputc+0x46>
    1a2a:	46 81       	ldd	r20, Z+6	; 0x06
    1a2c:	57 81       	ldd	r21, Z+7	; 0x07
    1a2e:	24 81       	ldd	r18, Z+4	; 0x04
    1a30:	35 81       	ldd	r19, Z+5	; 0x05
    1a32:	42 17       	cp	r20, r18
    1a34:	53 07       	cpc	r21, r19
    1a36:	44 f4       	brge	.+16     	; 0x1a48 <fputc+0x38>
    1a38:	a0 81       	ld	r26, Z
    1a3a:	b1 81       	ldd	r27, Z+1	; 0x01
    1a3c:	9d 01       	movw	r18, r26
    1a3e:	2f 5f       	subi	r18, 0xFF	; 255
    1a40:	3f 4f       	sbci	r19, 0xFF	; 255
    1a42:	20 83       	st	Z, r18
    1a44:	31 83       	std	Z+1, r19	; 0x01
    1a46:	8c 93       	st	X, r24
    1a48:	26 81       	ldd	r18, Z+6	; 0x06
    1a4a:	37 81       	ldd	r19, Z+7	; 0x07
    1a4c:	2f 5f       	subi	r18, 0xFF	; 255
    1a4e:	3f 4f       	sbci	r19, 0xFF	; 255
    1a50:	26 83       	std	Z+6, r18	; 0x06
    1a52:	37 83       	std	Z+7, r19	; 0x07
    1a54:	14 c0       	rjmp	.+40     	; 0x1a7e <fputc+0x6e>
    1a56:	8b 01       	movw	r16, r22
    1a58:	ec 01       	movw	r28, r24
    1a5a:	fb 01       	movw	r30, r22
    1a5c:	00 84       	ldd	r0, Z+8	; 0x08
    1a5e:	f1 85       	ldd	r31, Z+9	; 0x09
    1a60:	e0 2d       	mov	r30, r0
    1a62:	19 95       	eicall
    1a64:	89 2b       	or	r24, r25
    1a66:	e1 f6       	brne	.-72     	; 0x1a20 <fputc+0x10>
    1a68:	d8 01       	movw	r26, r16
    1a6a:	16 96       	adiw	r26, 0x06	; 6
    1a6c:	8d 91       	ld	r24, X+
    1a6e:	9c 91       	ld	r25, X
    1a70:	17 97       	sbiw	r26, 0x07	; 7
    1a72:	01 96       	adiw	r24, 0x01	; 1
    1a74:	16 96       	adiw	r26, 0x06	; 6
    1a76:	8d 93       	st	X+, r24
    1a78:	9c 93       	st	X, r25
    1a7a:	17 97       	sbiw	r26, 0x07	; 7
    1a7c:	ce 01       	movw	r24, r28
    1a7e:	df 91       	pop	r29
    1a80:	cf 91       	pop	r28
    1a82:	1f 91       	pop	r17
    1a84:	0f 91       	pop	r16
    1a86:	08 95       	ret

00001a88 <__ultoa_invert>:
    1a88:	fa 01       	movw	r30, r20
    1a8a:	aa 27       	eor	r26, r26
    1a8c:	28 30       	cpi	r18, 0x08	; 8
    1a8e:	51 f1       	breq	.+84     	; 0x1ae4 <__ultoa_invert+0x5c>
    1a90:	20 31       	cpi	r18, 0x10	; 16
    1a92:	81 f1       	breq	.+96     	; 0x1af4 <__ultoa_invert+0x6c>
    1a94:	e8 94       	clt
    1a96:	6f 93       	push	r22
    1a98:	6e 7f       	andi	r22, 0xFE	; 254
    1a9a:	6e 5f       	subi	r22, 0xFE	; 254
    1a9c:	7f 4f       	sbci	r23, 0xFF	; 255
    1a9e:	8f 4f       	sbci	r24, 0xFF	; 255
    1aa0:	9f 4f       	sbci	r25, 0xFF	; 255
    1aa2:	af 4f       	sbci	r26, 0xFF	; 255
    1aa4:	b1 e0       	ldi	r27, 0x01	; 1
    1aa6:	3e d0       	rcall	.+124    	; 0x1b24 <__ultoa_invert+0x9c>
    1aa8:	b4 e0       	ldi	r27, 0x04	; 4
    1aaa:	3c d0       	rcall	.+120    	; 0x1b24 <__ultoa_invert+0x9c>
    1aac:	67 0f       	add	r22, r23
    1aae:	78 1f       	adc	r23, r24
    1ab0:	89 1f       	adc	r24, r25
    1ab2:	9a 1f       	adc	r25, r26
    1ab4:	a1 1d       	adc	r26, r1
    1ab6:	68 0f       	add	r22, r24
    1ab8:	79 1f       	adc	r23, r25
    1aba:	8a 1f       	adc	r24, r26
    1abc:	91 1d       	adc	r25, r1
    1abe:	a1 1d       	adc	r26, r1
    1ac0:	6a 0f       	add	r22, r26
    1ac2:	71 1d       	adc	r23, r1
    1ac4:	81 1d       	adc	r24, r1
    1ac6:	91 1d       	adc	r25, r1
    1ac8:	a1 1d       	adc	r26, r1
    1aca:	20 d0       	rcall	.+64     	; 0x1b0c <__ultoa_invert+0x84>
    1acc:	09 f4       	brne	.+2      	; 0x1ad0 <__ultoa_invert+0x48>
    1ace:	68 94       	set
    1ad0:	3f 91       	pop	r19
    1ad2:	2a e0       	ldi	r18, 0x0A	; 10
    1ad4:	26 9f       	mul	r18, r22
    1ad6:	11 24       	eor	r1, r1
    1ad8:	30 19       	sub	r19, r0
    1ada:	30 5d       	subi	r19, 0xD0	; 208
    1adc:	31 93       	st	Z+, r19
    1ade:	de f6       	brtc	.-74     	; 0x1a96 <__ultoa_invert+0xe>
    1ae0:	cf 01       	movw	r24, r30
    1ae2:	08 95       	ret
    1ae4:	46 2f       	mov	r20, r22
    1ae6:	47 70       	andi	r20, 0x07	; 7
    1ae8:	40 5d       	subi	r20, 0xD0	; 208
    1aea:	41 93       	st	Z+, r20
    1aec:	b3 e0       	ldi	r27, 0x03	; 3
    1aee:	0f d0       	rcall	.+30     	; 0x1b0e <__ultoa_invert+0x86>
    1af0:	c9 f7       	brne	.-14     	; 0x1ae4 <__ultoa_invert+0x5c>
    1af2:	f6 cf       	rjmp	.-20     	; 0x1ae0 <__ultoa_invert+0x58>
    1af4:	46 2f       	mov	r20, r22
    1af6:	4f 70       	andi	r20, 0x0F	; 15
    1af8:	40 5d       	subi	r20, 0xD0	; 208
    1afa:	4a 33       	cpi	r20, 0x3A	; 58
    1afc:	18 f0       	brcs	.+6      	; 0x1b04 <__ultoa_invert+0x7c>
    1afe:	49 5d       	subi	r20, 0xD9	; 217
    1b00:	31 fd       	sbrc	r19, 1
    1b02:	40 52       	subi	r20, 0x20	; 32
    1b04:	41 93       	st	Z+, r20
    1b06:	02 d0       	rcall	.+4      	; 0x1b0c <__ultoa_invert+0x84>
    1b08:	a9 f7       	brne	.-22     	; 0x1af4 <__ultoa_invert+0x6c>
    1b0a:	ea cf       	rjmp	.-44     	; 0x1ae0 <__ultoa_invert+0x58>
    1b0c:	b4 e0       	ldi	r27, 0x04	; 4
    1b0e:	a6 95       	lsr	r26
    1b10:	97 95       	ror	r25
    1b12:	87 95       	ror	r24
    1b14:	77 95       	ror	r23
    1b16:	67 95       	ror	r22
    1b18:	ba 95       	dec	r27
    1b1a:	c9 f7       	brne	.-14     	; 0x1b0e <__ultoa_invert+0x86>
    1b1c:	00 97       	sbiw	r24, 0x00	; 0
    1b1e:	61 05       	cpc	r22, r1
    1b20:	71 05       	cpc	r23, r1
    1b22:	08 95       	ret
    1b24:	9b 01       	movw	r18, r22
    1b26:	ac 01       	movw	r20, r24
    1b28:	0a 2e       	mov	r0, r26
    1b2a:	06 94       	lsr	r0
    1b2c:	57 95       	ror	r21
    1b2e:	47 95       	ror	r20
    1b30:	37 95       	ror	r19
    1b32:	27 95       	ror	r18
    1b34:	ba 95       	dec	r27
    1b36:	c9 f7       	brne	.-14     	; 0x1b2a <__ultoa_invert+0xa2>
    1b38:	62 0f       	add	r22, r18
    1b3a:	73 1f       	adc	r23, r19
    1b3c:	84 1f       	adc	r24, r20
    1b3e:	95 1f       	adc	r25, r21
    1b40:	a0 1d       	adc	r26, r0
    1b42:	08 95       	ret

00001b44 <_exit>:
    1b44:	f8 94       	cli

00001b46 <__stop_program>:
    1b46:	ff cf       	rjmp	.-2      	; 0x1b46 <__stop_program>
